def PlayerReminder
{
	string trigger_on
	string reset_cooldown_on
	string message
	float cooldown // in seconds
	float starting_cooldown // time from game start to the moment reminders become available
	float auto_recheck_interval = 300 // if not on cooldown, recheck each x seconds (<= 0 to disable)
	bool inherit_trigger_params = false // NOTE: There is no trigger when the message is result of an auto recheck!
}

def NotificationTraditionSlotEmpty : PlayerReminder
{
	reset_cooldown_on = "new_tradition"
	message = "CanAdoptTraditionMessage"
	starting_cooldown = 900
	cooldown = 7200
}

def NotificationMaximumBooks : PlayerReminder
{
	trigger_on = "max_books_reached"
	message = "MaximumBooksMessage"
	starting_cooldown = 900
	cooldown = 1800
}

def NotificationLowStabilityInRealm : PlayerReminder
{
	trigger_on = "low_stability_in_realm"
	message = "LowStabilityInRealmMessage"
	starting_cooldown = 1800
	cooldown = 1800
}

def NotificationBuildQueueEmpty : PlayerReminder
{
	reset_cooldown_on = "build_finished"
	message = "CanBuildBuildingMessage"
	starting_cooldown = (RndF(600,900))
	cooldown = (RndF(600,900))
}

def NotificationAdvantageHalfReady : PlayerReminder
{
	trigger_on = "advantage_halfway"
	auto_recheck_interval = 0
	message = "AdvantageHalfReadyMessage"
	cooldown = 900
	inherit_trigger_params = true
}