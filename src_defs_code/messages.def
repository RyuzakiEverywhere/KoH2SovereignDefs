def Message : UIWindow
{
	// MessageIconWnd icon = InfoMessageIconWnd
	prefab icon_prefab = "Assets/UI/Elements/msg_icons/MessageIcon.prefab" //GUID:6fb8286c89ad6934f9249962cab59e6e
	sprite icon = "Assets/UI/Elements/msg_icons/Icon_Message_GenericEvent_Neutral.png:Icon_Message_GenericEvent_Neutral#2" //GUID:d1b257a397cd3e2409cb96b95cb01190
	sprite secoundary_icon
	sprite category_illustration = "Assets/UI/Messages/Common/Element_Message_Background_Caategory_03.png:Element_Message_Background_Caategory_03#2" //GUID:a7407654c70fd7748b810bd4ae4c688b
	string stack_group
	int stack_priority = 100 // lower is towards the top of the stack (i.e. shown first)
	bool allow_stack_dismiss = true
	float expire_time = 60
	//int max_delay = 0
	bool log = true
	bool drop_down = true
	int important = 0 // <= 0 - show only for player, 1 - show for kingdoms that "care", >= 2 - always show 
	bool show_warning = false // generic warning icon
	bool show_influence_warning = false // influence dependant warning icon
	//MessageWnd wnd = OKMessageWnd
	prefab ui_prefab = "Assets/UI/Messages/UIP_SimpleMessageWindow.prefab" //GUID:c2017b06717f0874b8f93d0334783830
	sprite illustration
	string voice_line
	string open_voice_line
	string sound_effect
	
	persist = "MessageWnd"
	keep_on_screen = 0.3
	exclusive_window_set = "Message"
	
	open_sound = "open_window_paper"
	close_sound = "close_window_paper"
	
	color caption_first_letter_color = "255,191,109" //FFBF6DFF
	
	string category = "common"
	string show_filter_id // filter option defined in Preferences def
	text caption
	text radio
	text body
	//hypertext : MessageHyperText
}

def WorldRadio
{
	int max_messages = 120 // max active sown messages
	template Category
	{
		bool show_label = false
		sprite icon = "Assets/UI/Elements/Logger/Element_Logger_Category_Common.psd:Element_Logger_Category_Common#1" //GUID:c7d2ed48d4a856f478b04973011deb43
		text name
		string category
		text description
		color category_text_color_on = "189,168,108" //BDA86CFF 
		color category_text_color_off = "171,159,140" //AB9F8CFF
		sprite toggle_icon_off_normal = "Assets/UI/Elements/Logger/Button_Logger_Category_Off_Normal.psd:Button_Logger_Category_Off_Normal#1" //GUID:b2270af3869cdf7409c0ae73d2897990
		sprite toggle_icon_off_hover = "Assets/UI/Elements/Logger/Button_Logger_Category_Off_Hover.psd:Button_Logger_Category_Off_Hover#2" //GUID:ec8f9707f8976af468811b905b9929eb
		sprite toggle_icon_on_normal = "Assets/UI/Elements/Logger/Button_Logger_Category_On_Normal.psd:Button_Logger_Category_On_Normal#2" //GUID:647c1059857b7a0498aa77f849131787
		sprite toggle_icon_on_hover = "Assets/UI/Elements/Logger/Button_Logger_Category_On_Normal.psd:Button_Logger_Category_On_Normal#2" //GUID:647c1059857b7a0498aa77f849131787
	}
	
	categories
	{
		common : Category
		{
			text name = "Common"
			text description = "Miscellaneous events related to trade, religion and rankings."
			string category = "common"
			sprite icon = "Assets/UI/Elements/Logger/Element_Logger_Category_Common.psd:Element_Logger_Category_Common#1" //GUID:c7d2ed48d4a856f478b04973011deb43
		}
		diplomacy : Category
		{
			text name = "Diplomacy"
			string category = "diplomacy"
			text description = "Events encompassing foreign affairs between kingdoms."
			sprite icon = "Assets/UI/Elements/Logger/Element_Logger_Category_Diplomacy.psd:Element_Logger_Category_Diplomacy#2" //GUID:839c4123253dd8e42b6a3ef9c5a21c3c
		}
		military : Category
		{
			text name = "Military"
			text description = "Events related to starting, ending and ongoing wars."
			string category = "military"
			sprite icon = "Assets/UI/Elements/Logger/Element_Logger_Category_Military.psd:Element_Logger_Category_Military#2" //GUID:2fbccbbfde381324786ebb602165d2aa
		}
	}
}

template OngoingIcon : Message
{
	icon_prefab = "Assets/UI/Elements/msg_icons/OngoingIcon.prefab" //GUID:51dc4aae2a1421f40a7602abe90d4609
	sound_effect = ""
}

template PendingIcon : Message
{
	icon_prefab = "Assets/UI/Elements/msg_icons/PendingIcon.prefab" //GUID:a0be0fc5a66b10441b1d8b00629ab107
	sound_effect = "event:/sound_effects/notification/diplomatic/offer"
}

template PendingIconOutgoing : Message
{
	icon_prefab = "Assets/UI/Elements/msg_icons/PendingIconOutgoing.prefab" //GUID:d7397191a06839c41a66686c82e87368
	sound_effect = ""
}

template OkMessage : Message
{
	buttons { ok }
	
	
}

template OkGotoMessage : Message
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_GenericEvent_Neutral.png:Icon_Message_GenericEvent_Neutral#2" //GUID:d1b257a397cd3e2409cb96b95cb01190
	buttons { goto; ok }
	
}

////////////////////////////////// Ongoing battle icons

template OngoingBattle : OngoingIcon
{
	ui_prefab = ""
	caption = "{BATTLE}"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Ongoing_Battle.png:Icon_Message_Ongoing_Battle#1" //GUID:1741f68836365314391217af2bbbbac6
	icon_prefab = "Assets/UI/Elements/msg_icons/OngoingBattleIcon.prefab" //GUID:3f5e78afc20b2f049ba4d2d84eeb2dac
}

def OngoingOpenField : OngoingBattle
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Ongoing_Battle.png:Icon_Message_Ongoing_Battle#1" //GUID:1741f68836365314391217af2bbbbac6
}

def OngoingPlunder : OngoingBattle
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Ongoing_Pillage.png:Icon_Message_Ongoing_Pillage#2" //GUID:cdb781884efa3a940a7364d313b6f7f3
	
	switch_value = (plr_kingdom)
	case defender_kingdom
	{
		case attackers_are_rebels = (attacker_kingdom.is_rebel)
		{
			voice_line = "narrator_voice:our_settlement_pillaged_by_rebels"
		}
		case default
		{
			voice_line = Battle.OngoingPlunderDefender //"narrator_voice:pillage_started"
		}
	}
}

def OngoingSiegeCastle : OngoingBattle
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Ongoing_TownSiege_Right.png:Icon_Message_Ongoing_TownSiege_Right#2" //GUID:e0af0d6504c51aa45b007b961fe2422f
	
	switch_value = (plr_kingdom)
	case defender_kingdom
	{
		case attackers_are_rebels = (attacker_kingdom.is_rebel)
		{
			voice_line = "narrator_voice:our_town_under_siege_by_rebels"
		}
		case default
		{
			voice_line = Battle.OngoingSiegeCastleDefender //"narrator_voice:our_town_under_siege"
		}
	}
}

def OngoingSiegeKeep : OngoingBattle
{
	switch_value = (plr_kingdom)
	case defender_kingdom
	{
		case attackers_are_rebels = (attacker_kingdom.is_rebel)
		{
			voice_line = "narrator_voice:our_castle_under_siege_by_rebels"
		}
		case default
		{
			voice_line = "narrator_voice:our_castle_under_siege"
		}
	}
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Ongoing_KeepSiege_Right.png:Icon_Message_Ongoing_KeepSiege_Right#2" //GUID:a263d3954d22d6746bd5e3cae2c24ba5
}

def OngoingAssault : OngoingBattle
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Ongoing_Assault_Right.png:Icon_Message_Ongoing_Assault_Right#2" //GUID:f7bbd9a78389b93448e7b44ae3d67c2b
}

def OngoingAssaultCastle : OngoingBattle
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Ongoing_Assault_Right.png:Icon_Message_Ongoing_Assault_Right#2" //GUID:f7bbd9a78389b93448e7b44ae3d67c2b
}

def OngoingAssaultKeep : OngoingAssaultCastle
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Ongoing_Assault_Right.png:Icon_Message_Ongoing_Assault_Right#2" //GUID:f7bbd9a78389b93448e7b44ae3d67c2b
}

def OngoingBreakSiege : OngoingBattle
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Ongoing_BreakSiege_Right.png:Icon_Message_Ongoing_BreakSiege_Right#2" //GUID:8af9dfc80dae8104ea86cf29a31e43cf
}

def OngoingBreakSiegeCastle : OngoingBattle
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Ongoing_BreakSiege_Right.png:Icon_Message_Ongoing_BreakSiege_Right#2" //GUID:8af9dfc80dae8104ea86cf29a31e43cf
	
}
def OngoingBreakSiegeKeep : OngoingBattle
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Ongoing_BreakSiege_Right.png:Icon_Message_Ongoing_BreakSiege_Right#2" //GUID:8af9dfc80dae8104ea86cf29a31e43cf
}

////////////////////////////////// Battle finished messages
//ThirdParty/Enemy Won/Lost .. Own/Enemy ... Battle/Castle(own/enemy/occupied)/Pluner

def WonBattle : OkGotoMessage
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_FieldBattle_Positive.png:Icon_Message_FieldBattle_Positive#2" //GUID:99d050dd086b2ec4683aaa04553aea73
	category_illustration = "Assets/UI/Messages/Common/Element_Message_Background_Caategory_04.png:Element_Message_Background_Caategory_04#2" //GUID:e29ea7610dc2b4f40960ef8c3a8446dd
	caption = "Battle Won"
	body = "Sire, we have won a battle [near {realm.castle}|in the open seas of the {realm}]! The {loser_kingdom:ians} crumbled before the might of our army."
	stack_group = "SettlementBattle"
	stack_priority = 120
}

def LostBattle : OkGotoMessage
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_FieldBattle_Negative.png:Icon_Message_FieldBattle_Negative#2" //GUID:3c4c8ec9a1ad2c54e9e5291db3e3afeb
	category_illustration = "Assets/UI/Messages/Common/Element_Message_Background_Caategory_04.png:Element_Message_Background_Caategory_04#2" //GUID:e29ea7610dc2b4f40960ef8c3a8446dd
	caption = "Battle Lost"
	body = "Sire, we have lost a battle [near {realm.castle}|in the open seas of the {realm}][{escaped_marshals_text}]! Our army was shattered by enemy {winner_kingdom:ian} forces."
	text escaped_marshals_text = "[{p}Luckily, these marshals managed to escape: {escaped_marshals}.]" //!!! DOES NOT WORK
	stack_group = "SettlementBattle"
	stack_priority = 120
}

def WonOpenField : WonBattle
{
	//ui_prefab = "Assets/UI/Elements/Selection UI/BattleUI.prefab" //GUID:3a629c0720234f54099d27d4e43b34dd
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_FieldBattle_Positive.png:Icon_Message_FieldBattle_Positive#2" //GUID:99d050dd086b2ec4683aaa04553aea73
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_WonOpenField.tga:UI_Illustration_WonOpenField#2" //GUID:75c7729e79545e64c805711941ee7cf3
	stack_group = "SettlementBattle"
	stack_priority = 120
}

def LostOpenField : LostBattle
{
	//ui_prefab = "Assets/UI/Elements/Selection UI/BattleUI.prefab" //GUID:3a629c0720234f54099d27d4e43b34dd
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_FieldBattle_Negative.png:Icon_Message_FieldBattle_Negative#2" //GUID:3c4c8ec9a1ad2c54e9e5291db3e3afeb
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_LostOpenField.tga:UI_Illustration_LostOpenField#2" //GUID:6c0f7408465647e4e8e2cd7ecb291f92
	stack_group = "SettlementBattle"
	stack_priority = 120
}

def WonNaval : WonBattle
{
	//ui_prefab = "Assets/UI/Elements/Selection UI/BattleUI.prefab" //GUID:3a629c0720234f54099d27d4e43b34dd
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_FieldBattle_Positive.png:Icon_Message_FieldBattle_Positive#2" //GUID:99d050dd086b2ec4683aaa04553aea73
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_WonNavalBattle.tga:UI_Illustration_WonNavalBattle#2" //GUID:0ee1514330eea994b837418b51d03771
	stack_group = "SettlementBattle"
	stack_priority = 120
}

def LostNaval : LostBattle
{
	//ui_prefab = "Assets/UI/Elements/Selection UI/BattleUI.prefab" //GUID:3a629c0720234f54099d27d4e43b34dd
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_FieldBattle_Negative.png:Icon_Message_FieldBattle_Negative#2" //GUID:3c4c8ec9a1ad2c54e9e5291db3e3afeb
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_LostNavalBattle.tga:UI_Illustration_LostNavalBattle#2" //GUID:f5e0063bde68a5c45b4bdcb75f78a3f9
	stack_group = "SettlementBattle"
	stack_priority = 120
}

def WonOwnPlunder : WonBattle
{
	body = "We defended a {battle.settlement} near {realm.castle} from {attacker_kingdom:ian} plundering."
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Pillage_Positive.png:Icon_Message_Pillage_Positive#2" //GUID:d56670a36928f8f4d80ee51173bc6232
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_WonOpenField.tga:UI_Illustration_WonOpenField#2" //GUID:75c7729e79545e64c805711941ee7cf3
	stack_group = "SettlementBattle"
	voice_line = Battle.WonOwnPlunder //"narrator_voice:enemy_failed_to_pillage_our_settlement"
	stack_priority = 120
}

def LostOwnPlunder : LostBattle
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Pillage_Negative.png:Icon_Message_Pillage_Negative#1" //GUID:f6b68a22650bb314193c2561496d96f6
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_OurSettlementPlundered.png:UI_Illustration_OurSettlementPlundered#2" //GUID:042677c73e5d47840a05f2dcc2190eaf
	caption = "Settlement pillaged"
	body = "{attacker_kingdom:ian} troops have plundered our {battle.settlement} near {battle.realm_in}![{escaped_marshals_text}]"
	stack_group = "SettlementBattle"
	voice_line = Battle.LostOwnPlunder //"narrator_voice:our_settlement_pillaged"
	stack_priority = 120
}

def WonEnemyPlunder : WonBattle
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_FieldBattle_Positive.png:Icon_Message_FieldBattle_Positive#2" //GUID:99d050dd086b2ec4683aaa04553aea73
	body = $[
	"[We have plundered {realm.kingdom:anian} {battle.settlement} near {realm.castle}.{p}]"
	"[{blt} Gold stolen: {plunder_gold_amount}{gold_icon}{p}]"
	"[{blt} Supplies stolen: {plunder_supplies_amount}{supply_icon}{p}]"
	"[{blt} Books stolen: {plunder_books_amount}{books_icon}]"]
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_WonEnemyPlunder.png:UI_Illustration_WonEnemyPlunder#2" //GUID:0e02aeac59f9aa44280ecf9d278ce956
	stack_group = "SettlementBattle"
	//voice_line = "narrator_voice:enemy_settlement_pillaged" 
	stack_priority = 120
}

def WonEnemyPlunderSupporter : WonEnemyPlunder
{
	body = $[
	"[We have plundered {realm.kingdom:anian} {battle.settlement} near {realm.castle}.{p}]"
	"[{blt} Gold stolen: {plunder_gold_amount_supporter}{gold_icon}{p}]"
	"[{blt} Supplies stolen: {plunder_supplies_amount_supporter}{supply_icon}{p}]"
	"[{blt} Books stolen: {plunder_books_amount_supporter}{books_icon}]"]
}

def LostEnemyPlunder : LostBattle
{
	body = "{defender_kingdom:ian} troops have prevented us from plundering a {battle.settlement} near {realm.castle}.[{escaped_marshals_text}]"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_FieldBattle_Negative.png:Icon_Message_FieldBattle_Negative#2" //GUID:3c4c8ec9a1ad2c54e9e5291db3e3afeb
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_LostOpenField.tga:UI_Illustration_LostOpenField#2" //GUID:6c0f7408465647e4e8e2cd7ecb291f92
	stack_group = "SettlementBattle"
	voice_line = Battle.LostEnemyPlunder //"narrator_voice:we_failed_to_pillage_enemy_settlement"
	stack_priority = 120
}

def WonOwnCastle : WonBattle
{
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_TownDefenseWon.png:UI_Illustration_TownDefenseWon#2" //GUID:6e0ccd674dca71344a149960c031dac5
	caption = "Town defended"
	body = "We successfully defended {realm.castle} from {attacker_kingdom:s} armies and kept our control over {realm:link}{realm.province_name}{/link}!"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TownSiege_Positive.png:Icon_Message_TownSiege_Positive#2" //GUID:00aa67e4bcf90f04b9b28d86d4d3e95f
	stack_group = "SettlementBattle"
	stack_priority = 90
}

def WonOwnCastleSupporter : WonOwnCastle
{
	caption = "Town defended"
	body = "We successfully helped {defender_kingdom} in the defense of {realm.castle} from {attacker_kingdom:s} armies{/link}!"
}

def LostOwnCastle : LostBattle
{
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_TownDefenseLost.png:UI_Illustration_TownDefenseLost#2" //GUID:2b1041bebd584ee4a93d2e49232b486f
	switch_value = (realm.is_trade_center)
	case 1
	{
		caption = "Trade center lost"
		body = "{attacker_kingdom} took the trade center of {realm.castle} from us! The province of {realm:link}{realm.province_name}{/link} is now under their control.[{escaped_marshals_text}]"
		icon = "Assets/UI/Elements/msg_icons/Icom_Message_TradeCenterConquered_Negative.png:Icom_Message_TradeCenterConquered_Negative#2" //GUID:f3f548ac91cf5eb408905a344f3b9029
	}
	case 0
	{
		caption = "Town lost"
		body = "{attacker_kingdom} took {realm.castle} from us. The province of {realm:link}{realm.province_name}{/link} is now under their control![{escaped_marshals_text}]"
		icon = "Assets/UI/Elements/msg_icons/Icon_Message_TownSiege_Negative.png:Icon_Message_TownSiege_Negative#2" //GUID:c4bfd7ff27407ed46b31ffd4ceab8fd1
	}
	stack_group = "SettlementBattle"
	stack_priority = 10
}

def LostOwnCastleSupporter : LostOwnCastle
{
	switch_value = (-1) // hack to stop the switch from the previous class
	caption = "Town lost"
	body = "{attacker_kingdom} took {realm.castle} from {defender_kingdom}, despite our assistance. The province of {realm:link}{realm.province_name}{/link} is now under their control![{escaped_marshals_text}]"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TownSiege_Negative.png:Icon_Message_TownSiege_Negative#2" //GUID:c4bfd7ff27407ed46b31ffd4ceab8fd1
}

def LostOwnCastleToRebels : LostBattle
{
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_LostOwnCastleRebels.tga:UI_Illustration_LostOwnCastleRebels#2" //GUID:be0aefe278e0f5947be7ec11a085a447
	caption = "Rebels occupied our [{realm.is_trade_center:if}trade center|town]"
	body = "Rebels have occupied [{realm.is_trade_center:if}the trade center in ]{realm.castle}, forcing us out of the province of {realm:link}{realm.province_name}{/link}! We must deal with {attacker_leader} and his rebellion or storm the town's walls. [{escaped_marshals_text}]"
	switch_value = (realm.is_trade_center)
	case 1
	{
		icon = "Assets/UI/Elements/msg_icons/Icom_Message_TradeCenterConquered_Negative.png:Icom_Message_TradeCenterConquered_Negative#2" //GUID:f3f548ac91cf5eb408905a344f3b9029
	}
	case 0
	{
		icon = "Assets/UI/Elements/msg_icons/Icon_Message_TownSiege_Negative.png:Icon_Message_TownSiege_Negative#2" //GUID:c4bfd7ff27407ed46b31ffd4ceab8fd1
	}
	stack_group = "SettlementBattle"
	stack_priority = 90
}

def LostOwnCastleToRebelsSupporter : LostOwnCastleToRebels
{
	switch_value = (-1) // hack to stop the switch from the previous class
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_LostOwnCastleRebels.tga:UI_Illustration_LostOwnCastleRebels#2" //GUID:be0aefe278e0f5947be7ec11a085a447
	caption = "Rebels defeated us"
	body = "Rebels have occupied [{realm.is_trade_center:if}the trade center in ]{realm.castle}, forcing {defender_kingdom} out of the province of {realm:link}{realm.province_name}{/link}! [{escaped_marshals_text}]"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TownSiege_Negative.png:Icon_Message_TownSiege_Negative#2" //GUID:c4bfd7ff27407ed46b31ffd4ceab8fd1
}

def WonOwnCastleOccupiedByEnemy : WonBattle
{
	caption = "[{realm.is_trade_center:if}Trade center|Town] retaken"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_WonEnemyCastle.tga:UI_Illustration_WonEnemyCastle#2" //GUID:f1afe2fc2e9fd3f47955adb370c199a0
	body = "We drove away the {defender_kingdom:ian} forces from {realm.castle} and regained control over {realm:link}{realm.province_name}{/link}![ Our merchants are already reopening their shops, as foreign visitors arrive to revitalize the local trade.]"
	switch_value = (realm.is_trade_center)
	case 1
	{
		icon = "Assets/UI/Elements/msg_icons/Icom_Message_TradeCenterConquered_Positive.png:Icom_Message_TradeCenterConquered_Positive#2" //GUID:86cd2e5e7f2bec949946ca2742fece6c
	}
	case 0
	{
		icon = "Assets/UI/Elements/msg_icons/Icon_Message_TownSiege_Positive.png:Icon_Message_TownSiege_Positive#2" //GUID:00aa67e4bcf90f04b9b28d86d4d3e95f
	}
	stack_group = "SettlementBattle"
	stack_priority = 90
}

def WonOwnCastleOccupiedByEnemySupporter : WonOwnCastleOccupiedByEnemy
{
	switch_value = (-1) // hack to stop the switch from the previous class
	caption = "Siege won"
	body = "We drove away the {defender_kingdom:ian} forces from {realm.castle} and helped {attacker_kingdom} regain control over {realm:link}{realm.province_name}{/link}!"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TownSiege_Positive.png:Icon_Message_TownSiege_Positive#2" //GUID:00aa67e4bcf90f04b9b28d86d4d3e95f
}

def WonOwnKeepOccupiedByEnemy : WonBattle
{
	caption = "Castle retaken"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_WonEnemyCastle.tga:UI_Illustration_WonEnemyCastle#2" //GUID:f1afe2fc2e9fd3f47955adb370c199a0
	body = "We drove away the {defender_kingdom:ian} scum and regained control over our castle in {realm:link}{realm.province_name}{/link}!"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Siege_Positive.png:Icon_Message_Siege_Positive#2" //GUID:7a4538fbfc0905a44a8410edb93588b9
	stack_group = "SettlementBattle"
	voice_line = Battle.WonOwnKeepOccupiedByEnemy
	stack_priority = 120
}
def WonOwnKeepOccupiedByEnemySupporter : WonOwnKeepOccupiedByEnemy
{
	caption = "Castle freed"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_WonEnemyCastle.tga:UI_Illustration_WonEnemyCastle#2" //GUID:f1afe2fc2e9fd3f47955adb370c199a0
	body = "We drove away the {defender_kingdom:ian} scum and handed control of the castle in {realm:link}{realm.province_name}{/link} back to {realm.kingdom}!"
}

def LostOwnCastleOccupiedByEnemy : LostBattle
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TownSiege_Negative.png:Icon_Message_TownSiege_Negative#2" //GUID:c4bfd7ff27407ed46b31ffd4ceab8fd1
	caption = "Battle lost"
	body = "We lost the battle for {realm.castle} against {defender_kingdom} and failed to regain control over the province of {realm:link}{realm.province_name}{/link}.[{escaped_marshals_text}]"
	stack_group = "SettlementBattle"
	stack_priority = 80
	voice_line = "narrator_voice:lost_own_town_occupied_by_enemy"
}

def LostOwnCastleOccupiedByEnemySupporter : LostOwnCastleOccupiedByEnemy
{
	caption = "Battle lost"
	body = "We lost the battle for {realm.castle} against {defender_kingdom} and failed to free the province of {realm:link}{realm.province_name}{/link}.[{escaped_marshals_text}]"
}

def ThirdPartyWonOwnCastleOccupiedByEnemy : WonBattle
{
	caption = "Town freed"
	body = "{attacker_kingdom} broke the {defender_kingdom:ian} defenses in {realm.castle} and restored our control over {realm:link}{realm.province_name}{/link}!"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TownSiege_Positive.png:Icon_Message_TownSiege_Positive#2" //GUID:00aa67e4bcf90f04b9b28d86d4d3e95f
	stack_group = "SettlementBattle"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_WonEnemyCastle.tga:UI_Illustration_WonEnemyCastle#2" //GUID:f1afe2fc2e9fd3f47955adb370c199a0
	voice_line = "narrator_voice:allies_freed_our_town" //new voice line - additions 3
	stack_priority = 80
}

def ThirdPartyWonOwnKeepOccupiedByEnemy : WonBattle
{
	caption = "Castle freed"
	body = "Sire, the brave {attacker_kingdom:ian} armies aided us against our enemies, the {defender_kingdom:ians}, and freed our castle in {settlement.realm.province_name}!"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Siege_Positive.png:Icon_Message_Siege_Positive#2" //GUID:7a4538fbfc0905a44a8410edb93588b9
	stack_group = "SettlementBattle"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_WonEnemyCastle.tga:UI_Illustration_WonEnemyCastle#2" //GUID:f1afe2fc2e9fd3f47955adb370c199a0
	voice_line = "" //missing voice line event
	stack_priority = 120
}

def ThirdPartyLostOwnCastleOccupiedByEnemy : WonBattle
{
	caption = "Town control unchanged"
	body = "Our {attacker_kingdom:ian} friends failed to defeat {defender_kingdom:s} defenses in {realm.castle}. Our province remains occupied by enemy forces!"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TownSiege_Negative.png:Icon_Message_TownSiege_Negative#2" //GUID:c4bfd7ff27407ed46b31ffd4ceab8fd1
	stack_group = "SettlementBattle"
	stack_priority = 110
}


def ThirdEnemyWonOwnCastleOccupiedByEnemy : LostBattle
{
	caption = "Town control changed"
	body = "{attacker_kingdom:ians} forced {defender_kingdom:s} troops out of {realm.castle} and now occupy our province of {realm:link}{realm.province_name}{/link}.[{escaped_marshals_text}]"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TownSiege_Neutral.png:Icon_Message_TownSiege_Neutral#2" //GUID:eb28cce24c77559438d065765dd2126c
	stack_group = "SettlementBattle"
	voice_line = Battle.ThirdEnemyWonOwnCastleOccupiedByEnemy //"narrator_voice:our_town_lost"
	stack_priority = 80
}

def ThirdEnemyLostOwnCastleOccupiedByEnemy : LostBattle
{
	caption = "Battle lost" //!!! revise if we really want this - might be too much spam
	body = "{defender_kingdom} defended {realm.castle} against {attacker_kingdom}, retaining their control over the province {realm:link}{realm.province_name}{/link}. Our province remains in the clutches of our enemy![{escaped_marshals_text}]"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TownSiege_Neutral.png:Icon_Message_TownSiege_Neutral#2" //GUID:eb28cce24c77559438d065765dd2126c
	stack_group = "SettlementBattle"
	stack_priority = 120
}


def WonEnemyCastle : WonBattle
{
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_WonEnemyCastle.tga:UI_Illustration_WonEnemyCastle#2" //GUID:f1afe2fc2e9fd3f47955adb370c199a0
	switch_value = (realm.is_trade_center)
	case 1
	{
		caption = "Trade center conquered"
		body = "We successfully conquered the trade center in {realm.castle}! Thanks to our victory over the {defender_kingdom:ian} armies, we can now have full access to the commercial riches of {realm:link}{realm.province_name}{/link}."
		icon = "Assets/UI/Elements/msg_icons/Icom_Message_TradeCenterConquered_Positive.png:Icom_Message_TradeCenterConquered_Positive#2" //GUID:86cd2e5e7f2bec949946ca2742fece6c
	}
	case 0
	{
		caption = "Town siege won"
		body = "We successfully defeated the {defender_kingdom:ian} armies in {realm.castle}! The town is now under our control, along with the entire province of {realm:link}{realm.province_name}{/link}."
		icon = "Assets/UI/Elements/msg_icons/Icon_Message_TownSiege_Positive.png:Icon_Message_TownSiege_Positive#2" //GUID:00aa67e4bcf90f04b9b28d86d4d3e95f
	}
	stack_group = "SettlementBattle"
	stack_priority = 80
}

def WonEnemyCastleSupporter : WonEnemyCastle
{
	switch_value = (-1) // hack to stop the switch from the previous class
	caption = "Town siege won"
	body = "We successfully defeated the {defender_kingdom:ian} armies in {realm.castle}! The town is now under the control of {attacker_kingdom}, along with the entire province of {realm:link}{realm.province_name}{/link}."
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TownSiege_Positive.png:Icon_Message_TownSiege_Positive#2" //GUID:00aa67e4bcf90f04b9b28d86d4d3e95f
}

def LostEnemyCastle : LostBattle
{
	caption = "Town siege lost"
	body = "Our troops could not break {defender_kingdom:s} defenses in the town of {realm.castle}, failing to take control over the province of {realm:link}{realm.province_name}{/link}.[{escaped_marshals_text}]"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_LostEnemyCastle.tga:UI_Illustration_LostEnemyCastle#2" //GUID:872d3c6ff1b16c64bbaec6a4086fc626
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TownSiege_Negative.png:Icon_Message_TownSiege_Negative#2" //GUID:c4bfd7ff27407ed46b31ffd4ceab8fd1
	stack_group = "SettlementBattle"
	stack_priority = 110
}

def LostEnemyCastleSupporter : LostEnemyCastle
{
	body = "Our troops could not break {defender_kingdom:s} defenses in the town of {realm.castle}, failing to free the province of {realm:link}{realm.province_name}{/link}.[{escaped_marshals_text}]"
}

def WonEnemyCastleOccupiedByOwn : WonBattle
{
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_TownDefenseWon.png:UI_Illustration_TownDefenseWon#2" //GUID:6e0ccd674dca71344a149960c031dac5
	caption = "Town defended"
	body = "We successfully defended {realm.castle} against {attacker_kingdom}! {realm:link}{realm.province_name}{/link} remains under our control."
	switch_value = (realm.is_trade_center)
	case 1
	{
		icon = "Assets/UI/Elements/msg_icons/Icom_Message_TradeCenterConquered_Positive.png:Icom_Message_TradeCenterConquered_Positive#2" //GUID:86cd2e5e7f2bec949946ca2742fece6c
	}
	case 0
	{
		icon = "Assets/UI/Elements/msg_icons/Icon_Message_TownSiege_Positive.png:Icon_Message_TownSiege_Positive#2" //GUID:00aa67e4bcf90f04b9b28d86d4d3e95f
	}
	stack_group = "SettlementBattle"
	// battle outcome in c# does this now
	stack_priority = 110
}

def WonEnemyCastleOccupiedByOwnSupporter : WonEnemyCastleOccupiedByOwn
{
	body = "We successfully defended {realm.castle} against {attacker_kingdom}! {realm:link}{realm.province_name}{/link} remains under the control of {defender_kingdom}."
}

def LostEnemyCastleOccupiedByOwn : LostBattle
{
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_TownDefenseLost.png:UI_Illustration_TownDefenseLost#2" //GUID:2b1041bebd584ee4a93d2e49232b486f
	caption = "[{realm.is_trade_center:if}Trade center|Town] lost"
	body = "Our forces failed to defend[ {realm.is_trade_center:if}the trade center of] {realm.castle} against {attacker_kingdom:s} invasion! As a result, we no longer control {realm:link}{realm.province_name}{/link}[ {realm.is_trade_center:if}and its riches].[{escaped_marshals_text}]"
	switch_value = (realm.is_trade_center)
	case 1
	{
		icon = "Assets/UI/Elements/msg_icons/Icom_Message_TradeCenterConquered_Negative.png:Icom_Message_TradeCenterConquered_Negative#2" //GUID:f3f548ac91cf5eb408905a344f3b9029
		voice_line = Battle.LostEnemyCastleOccupiedByOwn //"narrator_voice:trade_center_lost"
	}
	case 0
	{
		icon = "Assets/UI/Elements/msg_icons/Icon_Message_TownSiege_Negative.png:Icon_Message_TownSiege_Negative#2" //GUID:c4bfd7ff27407ed46b31ffd4ceab8fd1
		//voice_line = "narrator_voice:enemy_castle_lost"
	}
	stack_group = "SettlementBattle"
	stack_priority = 90
}

def LostEnemyCastleOccupiedByOwnSupporter : LostBattle
{
	switch_value = (-1) // hack to stop the switch from the previous class
	caption = "Siege lost"
	body = "Our forces failed to defend[ {realm.is_trade_center:if}the trade center of] {realm.castle} against {attacker_kingdom:s} invasion! As a result, {defender_kingdom} no longer controls {realm:link}{realm.province_name}{/link}[ {realm.is_trade_center:if}and its riches].[{escaped_marshals_text}]"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TownSiege_Negative.png:Icon_Message_TownSiege_Negative#2" //GUID:c4bfd7ff27407ed46b31ffd4ceab8fd1
}


def WonThirdPartyKeepOccupiedByEnemy : WonBattle
{
	caption = "Castle freed"
	body = "Our armies drove away the {defender_kingdom:ian} forces in a castle in {settlement.realm.province_name} and restored {settlement.realm.kingdom:s} control over it!"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Siege_Positive.png:Icon_Message_Siege_Positive#2" //GUID:7a4538fbfc0905a44a8410edb93588b9
	stack_group = "SettlementBattle"
	voice_line = Battle.WonThirdPartyKeepOccupiedByEnemy
	stack_priority = 120
}

def WonThirdPartyCastleOccupiedByEnemy : WonBattle
{
	caption = "Town freed"
	body = "Our armies defeated the {defender_kingdom:ians} in {realm.castle} and restored {realm.kingdom:s} control over the province of {realm.province_name}!"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TownSiege_Positive.png:Icon_Message_TownSiege_Positive#2" //GUID:00aa67e4bcf90f04b9b28d86d4d3e95f
	stack_group = "SettlementBattle"
	voice_line = Battle.WonThirdPartyCastleOccupiedByEnemy //"narrator_voice:freeing_ally_town"
	stack_priority = 120
}

def LostThirdPartyCastleOccupiedByEnemy : LostBattle
{
	caption = "Battle lost"
	body = "We could not help our {realm.kingdom:ian} friends, as our army failed to defeat {defender_kingdom:s} soldiers in the town of {realm.castle}.[{escaped_marshals_text}]"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TownSiege_Negative.png:Icon_Message_TownSiege_Negative#2" //GUID:c4bfd7ff27407ed46b31ffd4ceab8fd1
	stack_group = "SettlementBattle"
	voice_line = Battle.LostThirdPartyCastleOccupiedByEnemy //"narrator_voice:open_field_battle_lost"
	stack_priority = 120
}

def SackedOwnCastle : LostBattle
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Pillage_Negative.png:Icon_Message_Pillage_Negative#1" //GUID:f6b68a22650bb314193c2561496d96f6
	caption = "Town sacked"
	body = "{attacker_kingdom:ian} armies have sacked {realm.castle}! {attacker_leader} and his rebellion remain uncontested, spreading further chaos in {realm.province_name}.[{escaped_marshals_text}]"
	stack_group = "SettlementBattle"
	stack_priority = 110
}


// either because they were forced into another battle
def CounterBattleDefender : WonBattle
{
	caption = "Battle interrupted"
	body = "The enemy forces fighting against us near {realm} have been interrupted by an army from {cancelled_by.kingdom}."
	voice_line = "narrator_voice:foreign_army_interrupted_siege" 
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_FieldBattle_Neutral.png:Icon_Message_FieldBattle_Neutral#2" //GUID:87e73943d87fe5d4fabdac112e1d0327
	stack_group = "SettlementBattle"
	stack_priority = 120
}

def CounterBattleAttacker : LostBattle
{
	caption = "Battle interrupted"
	body = "Our forces in the battle near {realm} have been interrupted by {cancelled_by.kingdom:ian} armies.[{escaped_marshals_text}]"
	voice_line = "narrator_voice:enemy_interrupted_our_siege_from_outside" 
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_FieldBattle_Neutral.png:Icon_Message_FieldBattle_Neutral#2" //GUID:87e73943d87fe5d4fabdac112e1d0327
	stack_group = "SettlementBattle"
	stack_priority = 120
}

def CounterBattleWonOwnCastle : WonBattle
{
	caption = "Town defended"
	body = "Sire, the {attacker_kingdom:ian} besiegers of {realm.castle} have been forced to stop their siege by outside {cancelled_by.kingdom:ian} forces! For now, we've kept our control over {realm:link}{realm.province_name}{/link}."
	voice_line = Battle.CounterBattleWonOwnCastle //"narrator_voice:our_town_defended_outside_army_interrupted"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TownSiege_Positive.png:Icon_Message_TownSiege_Positive#2" //GUID:00aa67e4bcf90f04b9b28d86d4d3e95f
	stack_group = "SettlementBattle"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_TownDefenseWon.png:UI_Illustration_TownDefenseWon#2" //GUID:6e0ccd674dca71344a149960c031dac5
	stack_priority = 110
}

def CounterBattleWonOwnCastleSupporter : CounterBattleWonOwnCastle
{
	body = "Sire, the {attacker_kingdom:ian} besiegers of {realm.castle} have been forced to stop their siege by outside {cancelled_by.kingdom:ian} forces! For now, control over {realm:link}{realm.province_name}{/link} remains the same."
}

def CounterBattleWonOwnKeep : WonBattle
{
	caption = "Castle defended"
	body = "Sire, the {attacker_kingdom:ian} besiegers of our castle near {realm} have been forced to stop their siege by outside {cancelled_by.kingdom:ian} forces!"
	voice_line = Battle.CounterBattleWonOwnKeep //"narrator_voice:own_castle_defended_outside_army_interrupted"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Siege_Positive.png:Icon_Message_Siege_Positive#2" //GUID:7a4538fbfc0905a44a8410edb93588b9
	stack_group = "SettlementBattle"
	stack_priority = 110
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustation_Won_Own_Keep.tga:UI_Illustation_Won_Own_Keep#2" //GUID:b02607029f79f1e418c123b1fda7fe3b
}


def AssaultOurs : OkGotoMessage
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Assault_Negative.png:Icon_Message_Assault_Negative#2" //GUID:56de7180d726315428dcafea194ef6b5
	caption = "Army assault"
	body = "Sire, our enemies are trying to force their way into our town in {realm}!"
	
	case attackers_are_rebels = (attacker_kingdom.is_rebel)
	{
		voice_line = "narrator_voice:our_town_under_assault_by_rebels"
	}
	case default
	{
		voice_line = Battle.AssaultOurs //"narrator_voice:our_town_under_assault"
	}
	stack_group = "SettlementBattle"
	stack_priority = 110
	expire_time = 60
}

def BreakSiegeTheirs : OkGotoMessage
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_BreakSiege_Negative.png:Icon_Message_BreakSiege_Negative#2" //GUID:b2bb5af2ef893fc498867ba9697048f3
	caption = "Army break siege"
	body = "Sire, the defenders of {realm:s} town are trying to break our siege!"
	voice_line = Battle.BreakSiegeTheirs //"narrator_voice:enemies_breaking_our_siege"
	stack_group = "SettlementBattle"
	stack_priority = 110
	expire_time = 60
}

def BreakSiegeTheirsJoin : OkGotoMessage
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_BreakSiege_Negative.png:Icon_Message_BreakSiege_Negative#2" //GUID:b2bb5af2ef893fc498867ba9697048f3
	caption = "Army break siege"
	body = "Sire, the defenders of {realm:s} town have been reinforced by a [{battle.defender_support.kingdom:ian}|{battle.defender_kingdom:ian}] army and are trying to break our siege!"
	voice_line = Battle.BreakSiegeTheirsJoin //"narrator_voice:they_received_reinforcements"
	stack_group = "SettlementBattle"
	stack_priority = 120
	expire_time = 60
}

def BreakSiegeOursJoin : OkGotoMessage
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_BreakSiege_Positive.png:Icon_Message_BreakSiege_Positive#2" //GUID:c7d1c5826fe87f344a1b23a5b4d46516
	caption = "Army joined battle"
	body = "Sire, our forces defending the town of {realm} have been reinforced by a [{battle.defender_support.kingdom:ian}|{battle.defender_kingdom:ian}] army, allowing us to break the siege!"
	voice_line = Battle.BreakSiegeOursJoin //"narrator_voice:we_received_reinforcements"
	stack_group = "SettlementBattle"
	stack_priority = 110
	expire_time = 60
}

def JoinedBattleTheirsPlunder : OkGotoMessage
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_FieldBattle_Negative.png:Icon_Message_FieldBattle_Negative#2" //GUID:3c4c8ec9a1ad2c54e9e5291db3e3afeb
	caption = "Army joined battle"
	body = "Sire, enemy troops from {joined_army.kingdom} are trying to stop us from plundering a settlement near {realm}!"
	stack_group = "SettlementBattle"
	voice_line = Battle.JoinedBattleTheirsPlunder //"narrator_voice:pillage_interrupted"
	stack_priority = 110
	expire_time = 60
}

def JoinedBattleTheirs : OkGotoMessage
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_FieldBattle_Negative.png:Icon_Message_FieldBattle_Negative#2" //GUID:3c4c8ec9a1ad2c54e9e5291db3e3afeb
	caption = "Army joined battle"
	body = "Sire, our enemies in the battle near {realm} have been reinforced by {joined_army.kingdom:ian} troops!"
	voice_line = Battle.JoinedBattleTheirs //"narrator_voice:they_received_reinforcements"
	stack_group = "SettlementBattle"
	stack_priority = 110
	expire_time = 60
}

def DefendersRetreatedIntoCastle : OkGotoMessage
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TownSiege_Neutral.png:Icon_Message_TownSiege_Neutral#2" //GUID:eb28cce24c77559438d065765dd2126c
	caption = "Defenders retreated siege"
	body = "Sire, our enemies in the siege of {realm} have retreated. All outside armies have left the battle, and the town garrison has temporarily given up on breaking the siege!"
	stack_group = "SettlementBattle"
	voice_line = Battle.DefendersRetreatedIntoCastle //"character_voice:enemy_army_fled"
	stack_priority = 110
	expire_time = 60
}

// used to be called ONLY when a second player army joined his battle - 2 player armies on one side in a battle
// now we only want the voice line for this, no message icon
// def JoinedBattleOurs : OkGotoMessage
// {
// 	icon = "Assets/UI/Elements/msg_icons/Icon_Message_FieldBattle_Positive.png:Icon_Message_FieldBattle_Positive#2" //GUID:99d050dd086b2ec4683aaa04553aea73
// 	caption = "Army joined battle"
// 	bool army_is_ours = (kingdom.local_player_kingdom == joined_army.kingdom)
// 	body = "Sire, our forces in the battle near {realm} have been reinforced by [{army_is_ours:if}one of our knights|{joined_army.kingdom:anian} army]!"
// 	voice_line = ""
// 	stack_group = "SettlementBattle"
// }

def JoinedBattleOursAlly : OkGotoMessage
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_FieldBattle_Positive.png:Icon_Message_FieldBattle_Positive#2" //GUID:99d050dd086b2ec4683aaa04553aea73
	caption = "Army joined battle"
	body = "Sire, our forces in the battle near {realm} have been reinforced by our friends from {joined_army.kingdom}!"
	voice_line = Battle.JoinedBattleOursAlly //"narrator_voice:we_received_reinforcements"
	stack_group = "SettlementBattle"
	stack_priority = 110
	expire_time = 60
}

def WonOwnKeep : WonBattle
{
	caption = "Castle defended"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustation_Won_Own_Keep.tga:UI_Illustation_Won_Own_Keep#2" //GUID:b02607029f79f1e418c123b1fda7fe3b
	body = "We defended a castle near {realm} from {attacker_kingdom:ian} attackers."
	stack_group = "SettlementBattle"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Siege_Positive.png:Icon_Message_Siege_Positive#2" //GUID:7a4538fbfc0905a44a8410edb93588b9
	voice_line = Battle.WonOwnKeep
	stack_priority = 120
}

def LostOwnKeep : LostBattle
{
	caption = "Castle lost"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Lost_Own_Keep.tga:UI_Illustration_Lost_Own_Keep#2" //GUID:a34bba8433f260546aed74314bb7ed78
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Siege_Negative.png:Icon_Message_Siege_Negative#2" //GUID:67aaea2bdedc3fd46a32f67be4c43e9b
	body = "{attacker_kingdom:ian} troops have occupied our castle near {realm}.[{escaped_marshals_text}]"
	stack_group = "SettlementBattle"
	
	switch_value = (was_occupied)
	case 0
	{
		voice_line = Battle.LostOwnKeep
	}
	case 1
	{
		voice_line = Battle.LostEnemyKeepOccupiedByOwn
	}
	stack_priority = 120
}

def LostOwnKeepSupporter : LostOwnKeep
{
	caption = "Siege lost"
	body = "{attacker_kingdom:ian} troops have occupied the {defender_kingdom:ian} castle near {realm}.[{escaped_marshals_text}]"
}

def WonEnemyKeep : WonBattle
{
	caption = "Castle occupied"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustation_Won_Enemy_Keep.tga:UI_Illustation_Won_Enemy_Keep#2" //GUID:e62b755c5a9e4dd4e82c93430d9ad768
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Siege_Positive.png:Icon_Message_Siege_Positive#2" //GUID:7a4538fbfc0905a44a8410edb93588b9
	body = "Our armies have occupied {defender_kingdom:anian} castle near {realm}!"
	stack_group = "SettlementBattle"
	voice_line = Battle.WonEnemyKeep
	stack_priority = 120
}

def LostEnemyKeep : LostBattle
{
	body = "{defender_kingdom:ian} troops have prevented us from occupying a castle near {realm}.[{escaped_marshals_text}]"
	stack_group = "SettlementBattle"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustation_Lost_Enemy_Keep.png:UI_Illustation_Lost_Enemy_Keep#2" //GUID:c70f8487f18882d408d6ff2abc1021a9
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Siege_Negative.png:Icon_Message_Siege_Negative#2" //GUID:67aaea2bdedc3fd46a32f67be4c43e9b
	voice_line = Battle.LostEnemyKeep
	stack_priority = 120
}

def BattleRealmChange : WonBattle
{
	caption = "Battle stopped"
	stack_group = "SettlementBattle"
	case battle_is_pillage = (battle.is_plunder)
	{
		body = "Our troops had to stop plundering a {battle.settlement} in {realm}, as the province is now ruled by a new kingdom."
		icon = "Assets/UI/Elements/msg_icons/Icon_Message_Pillage_Neutral.png:Icon_Message_Pillage_Neutral#2" //GUID:a3808aa2c5202674d9fa6d5d15234692
	}
	case default
	{
		body = "Our troops were forced to stop [{battle.settlement.is_castle:if}their siege of {realm.castle}|besieging a castle in {realm}], as the province is now ruled by a new kingdom."
		icon = "Assets/UI/Elements/msg_icons/Icon_Message_Siege_Neutral.png:Icon_Message_Siege_Neutral#2" //GUID:697127092891240459d32d8c47ba0993
	}
	voice_line = "narrator_voice:battle_realm_change"
	stack_priority = 120
}

def BattleLiftSiege : WonBattle // only for victors
{
	body = "The {attacker_kingdom:ian} troops have decided to lift the siege of {realm}."
	stack_group = "SettlementBattle"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TownSiege_Positive.png:Icon_Message_TownSiege_Positive#2" //GUID:00aa67e4bcf90f04b9b28d86d4d3e95f
	voice_line = "narrator_voice:enemies_lifted_siege" 
	stack_priority = 110
}

def BattleStopPlundering : WonBattle // only for victors
{
	caption = "Settlement defended"
	body = "Enemies stopped plundering our {settlement} near {settlement.realm}. Our people are safe!"
	stack_group = "SettlementBattle"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Pillage_Positive.png:Icon_Message_Pillage_Positive#2" //GUID:d56670a36928f8f4d80ee51173bc6232
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_WonOpenField.tga:UI_Illustration_WonOpenField#2" //GUID:75c7729e79545e64c805711941ee7cf3
	voice_line = "narrator_voice:battle_stop_plundering"
	stack_priority = 130
}

def BattleRetreat : WonBattle // only for victors
{
	body = "[The cowardly {loser_kingdom:ian} troops|Those cowards, that dared oppose our armies,] have fled the battle of {realm}."
	stack_group = "SettlementBattle"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_FieldBattle_Positive.png:Icon_Message_FieldBattle_Positive#2" //GUID:99d050dd086b2ec4683aaa04553aea73
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_WonOpenField.tga:UI_Illustration_WonOpenField#2" //GUID:75c7729e79545e64c805711941ee7cf3
	stack_priority = 120
}

def WonBattleSurrender : WonBattle
{
	body = "[The cowardly {loser_kingdom:ian} troops|Our cowardly enemies] in {realm} surrendered."
	stack_group = "SettlementBattle"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_WonOpenField.tga:UI_Illustration_WonOpenField#2" //GUID:75c7729e79545e64c805711941ee7cf3
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_FieldBattle_Positive.png:Icon_Message_FieldBattle_Positive#2" //GUID:99d050dd086b2ec4683aaa04553aea73
	voice_line = Battle.WonBattleSurrender //"character_voice:enemy_surrenders"
	stack_priority = 120
}

def LostBattleSurrender : LostBattle
{
	body = "Sire! Our forces in {realm} have surrendered to the {winner_kingdom:ians}.[{escaped_marshals_text}]"
	stack_group = "SettlementBattle"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_LostOpenField.tga:UI_Illustration_LostOpenField#2" //GUID:6c0f7408465647e4e8e2cd7ecb291f92
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_FieldBattle_Negative.png:Icon_Message_FieldBattle_Negative#2" //GUID:3c4c8ec9a1ad2c54e9e5291db3e3afeb
	voice_line = Battle.LostBattleSurrender //"character_voice:we_surrender"
	stack_priority = 120
}

def BattleWarOver : WonBattle
{
	caption = "Battle Over"
	body = "Praise the heavens, the battle of {realm} is no longer necessary as there is no war."
	stack_group = "SettlementBattle"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_FieldBattle_Neutral.png:Icon_Message_FieldBattle_Neutral#2" //GUID:87e73943d87fe5d4fabdac112e1d0327
	voice_line = "" //sounds.def
	stack_priority = 120
}

def ConfirmLeadBattleMessage : Message
{
	caption = "Lead battle?"
	body = "{common}"
	text common = "Are you sure you wish to lead this battle? This will put you in direct command over your troops, pausing the game in the background."
	
	switch_value = (initial_estimation)
	case balanced //both armies are equally matched
	{
		body = "{common}{p}{p}The strength of both sides are somewhat equal, which will lead to a close battle."
		open_voice_line = "battle_prediction_balanced"
	}
	case winning //we are slightly more powerful than our opponents
	{
		body = "{common}{p}{p}Our forces have a slight advantage over the {enemy_kingdom:ians}."
		open_voice_line = "battle_prediction_winning"
	}
	case losing //our opponents are slightly more powerful than us
	{
		body = "{common}{p}{p}The pesky {enemy_kingdom:ians} hold an advantage over our forces, albeit small."
		open_voice_line = "battle_prediction_losing"
	}
	case winning_decisively //we are much more powerful than our opponents
	{
		body = "{common}{p}{p}Our men are headed towards a swift victory, as the {enemy_kingdom:ians} stand no chance."
		open_voice_line = "battle_prediction_winning_decisively"
	}
	
	case losing_badly //our opponents are much more powerful than us
	{
		body = "{common}{p}{p}The {enemy_kingdom:ians} may very well overwhelm us, as they hold a significant advantage over our soldiers."
		open_voice_line = "battle_prediction_losing_badly"
	}
	
	buttons
	{
		text ok = "&I'll lead"
		text close = "&Nevermind"
	}
}


////////////////////////////////// Diplomacy messages

def DiplomacyMessage : Message
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_IncomingOffer_Positive.png:Icon_Message_IncomingOffer_Positive#2" //GUID:a9f3b9652ebca5349a12a7fb31f62b0b
	buttons { audience; ok }
	caption = "[{caption}|Message from {src_kingdom}]"
	body = "{body}"
	ui_prefab = "Assets/UI/Messages/UIP_DiplomacyMessage.prefab" //GUID:66f4cafdde854a44ea54a1dc645e2b26
	category = "diplomacy"
	stack_group = "DiplomacyMessages"
	stack_priority = 90
	separate_stack = true
}

def DiplomacyOfferMessage : PendingIcon
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_IncomingOffer_Neutral.png:Icon_Message_IncomingOffer_Neutral#2" //GUID:6cd13327d93866748b8629c38d7840f7
	switch_value = (src_kingdom.is_papacy)
	case 1
	{
		voice_line = "narrator_voice:diplomacy_message_received_pope"
	}
	case 0
	{
		switch_value = (offer.def.def_id)
		case PrincessClaimInheritanceOffer
		{
			voice_line = "narrator_voice:diplomacy_message_inheritance_request"
		}
		case ClaimIndependence
		{
			voice_line = "narrator_voice:diplomacy_message_independence_request"
		}
		case default
		{
			voice_line = "narrator_voice:diplomacy_offer"
		}
	}

	show_influence_warning = (offer.from.GetInfluenceIn(offer.to) > offer.to.GetInfluenceIn(offer.from))
	buttons
	{
		//outcome buttons will be automatically added here
		text close = "&Let me think"
	}
	//stack_group = "DiplomacyMessage" //if you make them stack, they stack on the top side as well
	illustration = (illustration)
	caption = "[{caption}|An offer from {src_kingdom}]"
	body = "{body}"
	ui_prefab = "Assets/UI/Messages/UIP_DiplomacyOfferMessage.prefab" //GUID:8c717dab56734794aadbb28b3c85b6f1
	category = "diplomacy"
}

def DiplomacyCounterOfferMessage : DiplomacyOfferMessage
{
	sound_effect = "event:/sound_effects/notification/diplomatic/offer_counter"
}

def DiplomacyOfferLeftMessage : DiplomacyOfferMessage
{
	icon_prefab = DiplomacyMessage.icon_prefab
	sound_effect = null
	show_influence_warning = false
}

def DiplomacyOutgoingOfferMessage : PendingIconOutgoing
{
	icon = "Assets/UI/Elements/msg_icons/msg_symbols.PNG:msg_symbols_4#1" //GUID:8885cf826a7679a41941e6a33445cc2f
	buttons
	{
		text cancel = "&Cancel"
		text close = "&Let them think"
	}
	illustration = (illustration)
	caption = "[{caption}|An offer to {target_kingdom}]"
	body = "{body}"
	ui_prefab = "Assets/UI/Messages/UIP_DiplomacyOfferMessage.prefab" //GUID:8c717dab56734794aadbb28b3c85b6f1
}

def WarDeclared : DiplomacyMessage
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_WarDeclared.png:Icon_Message_WarDeclared#2" //GUID:3e80d4d6062b48948b964303521d1042
	voice_line = "narrator_voice:war_declared"
	sound_effect = "event:/sound_effects/notification/war_declared"
	caption = "{src_kingdom} declared war"
	stack_priority = 10
	stack_group = "WarInvolvement"
	separate_stack = true
}

//!!! obsolete
def TakeWhatsOursAndEndWar : DiplomacyMessage
{
	icon = "Assets/UI/Elements/msg_icons/msg_symbols.PNG:msg_symbols_20#1" //GUID:8885cf826a7679a41941e6a33445cc2f
	sound_effect = ""
	caption = "We lost provinces"
}

//!!! obsolete
def VassalizeForcefully : DiplomacyMessage
{
	icon = "Assets/UI/Elements/msg_icons/msg_symbols.PNG:msg_symbols_20#1" //GUID:8885cf826a7679a41941e6a33445cc2f
	sound_effect = ""
	caption = "{src_kingdom} vassalized us"
}


// def IndependanceDeclared : DiplomacyMessage
// {
// 	icon = "Assets/UI/Elements/msg_icons/msg_symbols.PNG:msg_symbols_20#1" //GUID:8885cf826a7679a41941e6a33445cc2f
// 	voice_line = "narrator_voice:independence"
// 	sprite illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_IndependenceDeclared.png:UI_Illustration_IndependenceDeclared#2" //GUID:231061996ba81eb4bbfc6649bcdb13e9

// 	caption = "{src_kingdom} declared independence"
// }

//!!! obsolete
def AllianceRevoked : DiplomacyMessage
{
	icon = "Assets/UI/Elements/msg_icons/msg_symbols.PNG:msg_symbols_20#1" //GUID:8885cf826a7679a41941e6a33445cc2f
	caption = "{kingdom} ends our alliance"
}

def KingdomIsPleased : DiplomacyMessage
{
	condition = (rel_change_amount >= 50)
	show_filter_id = "notification_kingdom_reactions"
	caption = "The {kingdom:ians} are pleased"
	body = "{obj}{p}{blt}Relations with {kingdom}: {rel_change_amount:bonus_dark}"
	
	buttons
	{
		text ok = "&Ok"
	}
	
	stack_group = "OurSmallChanges" //"DiplomacyMessage"
	separate_stack = true
	stack_priority = 150
	expire_time = 60
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Reaction_Positive.png:Icon_Message_Reaction_Positive#2" //GUID:c7f0723bbbdb5f84199c488ec457d256
	voice_line = null
	//max_delay = 2
}

def KingdomIsAngry : DiplomacyMessage
{
	condition = (rel_change_amount <= -50)
	show_filter_id = "notification_kingdom_reactions"
	caption = "The {kingdom:ians} are angry"
	body = "{obj}{p}{blt}Relations with {kingdom}: {rel_change_amount:bonus_dark}"
	
	buttons
	{
		text ok = "&Ok"
	}
	
	stack_group = "OurSmallChanges" //"DiplomacyMessage"
	separate_stack = true
	stack_priority = 150
	expire_time = 60
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Reaction_Negative.png:Icon_Message_Reaction_Negative#2" //GUID:ce0dbb3e6f2fd8f4ea3ef24516f9d04f
	voice_line = null
	//max_delay = 2
}

////////////////////////////////// Prison messages

def PrisonMessage : Message
{
	stack_group = "PrisonMessage"
	//max_delay = 2
	expire_time = 80
}

def NewPrisonOpportunityAvailableMessage : Message
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_KnightImprisoned_Positive.png:Icon_Message_KnightImprisoned_Positive#2" //GUID:e739776a08b7b294aa0fd2251a7df694
	caption = "Opportunity: {name}"
	body = "{src_messages.new_opportunity}"
	buttons
	{
		action activate = (action)
		// {
		// 	text text = "&Take it!"
		// }
		
		cancel_opportunity cancel_op
		{
			text text = "&Forget opportunity"
		}
		text ok = "&Let me think"
	}
	// ui_prefab = "Assets/UI/Messages/UIP_NewPlotAvailableMessage.prefab" //GUID:1fe9b0b7d73ffe948983be83cb6265ae
	sound_effect = "event:/sound_effects/notification/message/opportunity_default"
}

def mass_escape_success : PrisonMessage
{
	caption = "Prisoners escape attempt"
	body = $["There's been a riot in our royal dungeon, my lord!"
	" [{escaped_prisoners:if}Our guards were caught by surprise and could not handle the outbreak, allowing some prisoners to escape.|A few of our prisoners attempted to organize a mass escape, but their attempts were luckily unsuccessful.]"
	" [{died_prisoners:if}The escapees put up quite the fight, resulting in some casualties.|Despite the chaos which unfolded, nobody died.]"
	"[{p}   {blt} Prisoners escaped: {escaped_prisoners}]"
	"[{p}   {blt} Prisoners died: {died_prisoners}]"]
	sprite illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Dungeon_Escaped.png:UI_Illustration_Dungeon_Escaped#2" //GUID:431f97f4c55a7f046b4eefdc15fb01ec
	list = "escaped_prisoners"
	{
		text final_separator = " and "
	}
	list2 = "died_prisoners"
	{
		text final_separator = " and "
	}
	voice_line = "narrator_voice:prisoners_escaped_our_dungeon"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_KnighEscaped_Negative.png:Icon_Message_KnighEscaped_Negative#2" //GUID:16663f8bd4ac6f84fa31fceb457a5b9c
}

def mass_escape_fail : PrisonMessage
{
	caption = "Prisoners attempted to escape"
	body = "Some prisoners tried to organize a mass escape in our royal dungeon! Thankfully, our guards were prepared and suppressed the outbreak quickly."
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_KnighEscaped_Neutral.png:Icon_Message_KnighEscaped_Neutral#2" //GUID:a59c68fecd6579c47bc9f8c41c5716c4
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Dungeon_Caught.png:UI_Illustration_Dungeon_Caught#2" //GUID:562b596b5ae2b0d448c4ff305fd67907
}

def mass_escape_our_prisoner_escaped : PrisonMessage
{
	caption = "Knight escaped from prison"
	body = "Prisoners in {kingdom:s} dungeon managed to make an escape! Our {prisoner} was amongst them."
}

def prison_escape_success : PrisonMessage
{
	caption = "Prisoner escaped"
	bool target_is_exile = (!target.is_alive)
	body = "[{target_is_exile:if}{target} escaped from our royal dungeon! His whereabouts are left unknown, as he was renounced by his former kingdom.|{target} managed to escape from our royal dungeon! He has returned to {target.kingdom}.]"
	sprite illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Dungeon_Escaped.png:UI_Illustration_Dungeon_Escaped#2" //GUID:431f97f4c55a7f046b4eefdc15fb01ec
	voice_line = "narrator_voice:enemy_prisoner_escaped_our_dungeon"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_KnighEscaped_Negative.png:Icon_Message_KnighEscaped_Negative#2" //GUID:16663f8bd4ac6f84fa31fceb457a5b9c
}

def prison_escape_fail : PrisonMessage
{
	caption = "Prisoner failed to escape"
	body = "{target} was caught trying to escape from our dungeon."
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_KnighEscaped_Neutral.png:Icon_Message_KnighEscaped_Neutral#2" //GUID:a59c68fecd6579c47bc9f8c41c5716c4
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Dungeon_Caught.png:UI_Illustration_Dungeon_Caught#2" //GUID:562b596b5ae2b0d448c4ff305fd67907
}

def prisoner_died : PrisonMessage
{
	caption = "Prisoner died"
	body = "{target} died while rotting in prison."
	voice_line = "narrator_voice:enemy_prisoner_died_in_our_dungeon"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_KnightDead_Neutral.png:Icon_Message_KnightDead_Neutral#2" //GUID:c30b99ea4d9a071438f4a3e01d7c1918
}

def prison_revolt_success : PrisonMessage
{
	caption = "Prisoners organized revolt"
	body = "{target} organized a revolt in our prison. Now he leads an army of rebels! [Some of the knights escaped and returned to their kingdoms: {escaped_prisoners}|No other knights managed to escape.] [{p}During the fight there were knights killed: {died_prisoners}]"
	sprite illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Dungeon_Escaped.png:UI_Illustration_Dungeon_Escaped#2" //GUID:431f97f4c55a7f046b4eefdc15fb01ec
	voice_line = "narrator_voice:prison_revolt_success"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_KnighEscaped_Negative.png:Icon_Message_KnighEscaped_Negative#2" //GUID:16663f8bd4ac6f84fa31fceb457a5b9c
}

def prison_revolt_fail : PrisonMessage
{
	caption = "Prisoners failed to organize revolt"
	body = "{target} tried to organize a revolt in our prison, but failed and was imprisoned again."
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_KnighEscaped_Neutral.png:Icon_Message_KnighEscaped_Neutral#2" //GUID:a59c68fecd6579c47bc9f8c41c5716c4
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Dungeon_Caught.png:UI_Illustration_Dungeon_Caught#2" //GUID:562b596b5ae2b0d448c4ff305fd67907
	voice_line = "narrator_voice:prison_revolt_attempt"
}

////////////////////////////////// Misc messages

def KingdomDestroyed : Message
{
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_KingdomDestroyed.png:UI_Illustration_KingdomDestroyed#2" //GUID:48bee6240c1d9e443ac0f2bf2c3feef8
	caption = "Kingdom destroyed" //!!! placeholder
	radio = "{destroyed_kingdom} was destroyed by {destroyed_by}" //!!! placeholder
	important = 2
	category = "military"
	separate_stack = true
	stack_priority = 20
	text BodyVariations_WeDestroyed = ["We managed to eliminate {destroyed_kingdom} and rid the map of their pitiful existence!",
		"[{was_at_war_with_local_player:if}Our armies crushed the resistance of the very last castle of {destroyed_kingdom}!|We've gained control over all provinces of {destroyed_kingdom}, putting an end to the pitiful existence of the {destroyed_kingdom.KingdomType}.]",
		"[{was_at_war_with_local_player:if}The last remaining {destroyed_kingdom:ian} forces surrendered to our armies and their kingdom is no more!|My Lord, we've assimilated the last remaining provinces of {destroyed_kingdom}. The {destroyed_kingdom.KingdomType} is no more!]",
		"[{was_at_war_with_local_player:if}The very last lands of {destroyed_kingdom} were taken by our forces!|{destroyed_kingdom} has fallen by our hand, as we took its very last lands.]"]
	
	text BodyVariations_OthersDestroyed = ["[{wasVassal:if}Our vassals, {destroyed_kingdom}, were|{destroyed_kingdom} was] destroyed by {destroyed_by}![{wasSovereign:if} As they were our sovereign, we are now a free kingdom!]",
		"[{was_at_war:if}The armies of {destroyed_by} crushed the resistance of the very last castle of {destroyed_kingdom}!|{destroyed_by} took the very last town of {destroyed_kingdom}.][{wasVassal:if} What a pitiful vassals of ours they were.][{wasSovereign:if} We should celebrate the defeat of our tyrant!]",
		"[{was_at_war:if}The last remaining {destroyed_kingdom:ian} forces surrendered to the armies of {destroyed_by} and their kingdom is no more!|The last remaining {destroyed_kingdom:ian} town was taken by {destroyed_by}.][{wasVassal:if} Maybe we should have helped our vassal when we still could have.][{wasSovereign:if} As their sovereignty over us ends, we now have new opportunities, but challenges as well.]",
		"[{was_at_war:if}The very last lands of {destroyed_kingdom} were taken by {destroyed_by:ian} forces!|The very last lands of {destroyed_kingdom} were assimilated by {destroyed_by}!][{wasVassal:if} This is really unfortunate, as they were our loyal vassal.][{wasSovereign:if} Without the guidance and protection of our sovereign, difficult years lie ahead of us.]"]
	
	switch_value = (destroyed_by.is_local_player)
	case 0
	{
		body = $["{BodyVariations_OthersDestroyed}{p}"
				 "[{was_at_war_with_local_player:if}{blt} Our war against {destroyed_kingdom} has ended]"]
	}
	case 1
	{
		body = $["{BodyVariations_WeDestroyed}{p}"
				 "[{was_at_war_with_local_player:if}{blt} Our war against {destroyed_kingdom} has ended]"]
	}
	
	stack_group = "KingdomDestroyedOutcomes"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_KingdomDestroyed_Neutral.png:Icon_Message_KingdomDestroyed_Neutral#2" //GUID:a880ef368e0eccb4499ba405e983ee13
}

def EnemyCrossedBorder : OkGotoMessage
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_EnemyCrossedBorder_Negative.png:Icon_Message_EnemyCrossedBorder_Negative#2" //GUID:6f08d22fe3288354d8f8eb8660484ed9
	voice_line = "narrator_voice:enemy_crossed_border"
	stack_group = "CrossedOurBorder"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_EnemyCrossedBorder.tga:UI_Illustration_EnemyCrossedBorder#2" //GUID:7cad4806dc270c3429d7599459d53e81
	expire_time = 60
}

def PrinceBorn : Message
{
	caption = "A {obj.title} was born!"
	body = ["A blessed day is upon us, as the Queen has given birth to a healthy prince! He bears the name of {obj.name}.[{obj.is_heir:if} If faith allows it, one day he will become the new king of {plr_kingdom}!| May he grow stong and wise, and follow in his father's footsteps.]",
			"The birth of a healthy royal prince has blessed our {kingdom.KingdomType}! He bears the name of {obj.name}.[{obj.is_heir:if} He is our eldest {obj.title} and one day he will succeed the crown of {plr_kingdom}!| May he grow strong and wise, and follow in his father's footsteps.]"
			]
	
	stack_group = "RoyalFamilyNoDecision"
	ui_prefab = "Assets/UI/RoyalFamily/UIP_Newborn.prefab" //GUID:6d90dde4a07feb24684cf4c4eb47b352
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_ChildBorn.png:Icon_Message_ChildBorn#2" //GUID:32219ede9e7204d4d8b348bd41d0238a
	voice_line = "narrator_voice:prince_born"
	expire_time = 0
	stack_priority = 10
	separate_stack = true
	show_warning = true
	
	text class_select = "We should prepare him for his future knightly duties by picking his class."
	text button_educate = "&Educate"
	text button_educate_and_feast = "&Educate and hold a feast!"
	text button_close = "&Let fate decide"
	text button_family = "&View Family"
}

def PrincessBorn : Message
{
	caption = "A {obj.title} was born!"
	body = "Sire, the Queen has given birth to a beautiful princess! She bears the name of {obj.name}, which is surely destined for greatness. May she grow fair and wise!"
	stack_group = "RoyalFamilyNoDecision"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_ChildBorn.png:Icon_Message_ChildBorn#2" //GUID:32219ede9e7204d4d8b348bd41d0238a
	ui_prefab = "Assets/UI/RoyalFamily/UIP_Newborn_Princess.prefab" //GUID:7d17d2a51beaaf548a09bc35a199bba1
	voice_line = "narrator_voice:princess_born"
	
	text button_close = "&Great"
	text button_feast = "&Hold a feast"
	text button_family = "&View Family"
	
}

def RoyalFamilyMarriage : Message
{
	caption = "Royal marriage"
	body = "Sire, our {kingdom.king} just got married to {Spouse}."
	stack_group = "RoyalFamilyNoDecision"
	stack_priority = 50
	switch_value = (kingdom.religion.key)
	case Catholic
	{
		illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_RoyalFamilyMarriage_Catholic.png:UI_Illustration_RoyalFamilyMarriage_Catholic#2" //GUID:62131043e8720d347a14243ee2ee0142
	}
	case Orthodox
	{
		illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_RoyalFamilyMarriage_Orthodox.tga:UI_Illustration_RoyalFamilyMarriage_Orthodox#2" //GUID:8a7d24c6b27d0cb4986b2472c5fc69ad
	}
	case Sunni
	{
		illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_RoyalFamilyMarriage_Islamic.tga:UI_Illustration_RoyalFamilyMarriage_Islamic#2" //GUID:340c9fa0ecb44f24186612bbf4859579
	}
	case Shia
	{
		illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_RoyalFamilyMarriage_Islamic.tga:UI_Illustration_RoyalFamilyMarriage_Islamic#2" //GUID:340c9fa0ecb44f24186612bbf4859579
	}
	case Pagan
	{
		illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_RoyalFamilyMarriage_Pagan.tga:UI_Illustration_RoyalFamilyMarriage_Pagan#2" //GUID:a63904820b7d1534391abaf6eeba3976
	}
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_RoyalMarriage_Positive.png:Icon_Message_RoyalMarriage_Positive#2" //GUID:20d141abc14d9784da2585cf64eb3a86
	voice_line = "narrator_voice:royal_marriage"
}

def PrincessBecomesQueen : Message
{
	caption = "{old_title} became {wife.title}"
	body = "Sire, our beloved {wife:link}{wife.name}{/link} has become the {wife.title} of {wife.kingdom}! She now stands alongside her husband - {wife.kingdom.king}.[{p}{royal_ties_restored:if} Also our royal ties with them were restored.]"
	stack_group = "RoyalFamilyNoDecision"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_RoyalEvent_Positive.png:Icon_Message_RoyalEvent_Positive#2" //GUID:00191a66d044d1a4f9903d5bf8c4fffe
	voice_line = "narrator_voice:princess_becomes_queen"
}

def BecomePatriarchDivorce : Message
{
	caption = "Divorce"
	body = "Sire, our {princess} was left by her husband, who is now the head ot the Orthodox church of {husband.kingdom}. {husband} is now dedicated to pursuing true holiness and virtue, leaving our {princess.title} available for new marriage arrangements."
	stack_group = "RoyalFamilyNoDecision"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_RoyalEvent_Neutral.png:Icon_Message_RoyalEvent_Neutral#2" //GUID:2c52508efc1a7e241b62d32953038bdf
}

def BecomeEcumenicalPatriarchDivorce : Message
{
	caption = "Divorce"
	body = "Sire, our {princess} was left by her husband, who is now the head ot the Orthodox church. {husband} is now dedicated to pursuing true holiness and virtue, leaving our {princess.title} available for new marriage arrangements."
	stack_group = "RoyalFamilyNoDecision"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_RoyalEvent_Neutral.png:Icon_Message_RoyalEvent_Neutral#2" //GUID:2c52508efc1a7e241b62d32953038bdf
}

def BecomePopeDivorce : Message
{
	caption = "Divorce"
	body = "Sire, our {princess} was left by her husband, who is now the head of the Catholic church. {husband} is now dedicated to pursuing true holiness and virtue, leaving our {princess.title} available for new marriage arrangements."
	stack_group = "RoyalFamilyNoDecision"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_RoyalEvent_Neutral.png:Icon_Message_RoyalEvent_Neutral#2" //GUID:2c52508efc1a7e241b62d32953038bdf
}


def RoyalFamilyNewSovereign : Message
{
	ui_prefab = "Assets/UI/Messages/NewSoveren/UIP_NewSoverenMessageWindowHighResolution.prefab" //GUID:7875ae012740c784ba3ccef30b25178e
	
	caption = "New Sovereign"
	body = "The {obj.title} is dead! Long live his heir - {obj}!"
	text authority_outcome_inherited = "[{kingdom.CrownAuthority.kingDeath:if}   {blt} Crown Authority loss due to king death: {clr:link_dark}{kingdom.CrownAuthority.kingDeath}{/clr}{p}]"
	text authority_outcome_new_dynasty = "   {blt} Crown Authority loss due to lack of successor: {clr:link_dark}{kingdom.crown_authority_obj.noSuccessor}{/clr}"
	text already_married = "[   {blt} He stands proudly on the throne alongside his wife - {obj.spouse} [of {obj.spouse.kingdom_before_marriage}, {obj.spouse.title} of {obj.spouse.kingdom}]{p}]"
	text non_agressions_broken = "[{p}   {blt} This ends our non-aggression pacts with {nonAgressionsBroken}]"
	text royal_marriages_broken = "[{p}   {blt} This ends our royal ties with {royalMarriagesBroken}]"
	text royal_ties_restored = "[{p}   {blt} Royal ties with {royalTiesRestoredKingdom} restored]"
	sound_effect = ""
	sprite illustration = "Assets/UI/Messages/Illustrations/RoyalFamilyNewSovereign_NoSuccessor.tga:RoyalFamilyNewSovereign_NoSuccessor#2" //GUID:21fe0d91331e02547bda9c177598758d
	allow_stack_dismiss = false
	stack_priority = 5
	separate_stack = true
	expire_time = 180
	stack_group = "RoyalFamilyNoDecision"
	voice_line = "narrator_voice:king_died"
	
	case inherited = (change_type = "inherited")
	{
		
		icon = "Assets/UI/Elements/msg_icons/Icon_Message_NewKing_Successor.png:Icon_Message_NewKing_Successor#2" //GUID:32a81b2146bed2e41b5f97934067e859
		sprite illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_RoyalFamilyNewSovereign_Successor.tga:UI_Illustration_RoyalFamilyNewSovereign_Successor#1" //GUID:0f3b6718dca5ef54cbddd0dea7e49c18
		
		body = $[
		"The {obj.title} is dead! Long live his heir - {obj}!{p}"
		"{RoyalFamilyNewSovereign.already_married}"
		"{RoyalFamilyNewSovereign.authority_outcome_inherited}"
		"{RoyalFamilyNewSovereign.royal_marriages_broken}"
		"{RoyalFamilyNewSovereign.royal_ties_restored}"]
		
		case old_age = (abdication_reason = "old_age")
		{
			body = $[
			"Our {obj.title:s} reign was long and momentous, but his days of ruling are over as he died of old age. Long live his heir - {obj}!{p}"
			"{RoyalFamilyNewSovereign.already_married}"
			"{RoyalFamilyNewSovereign.authority_outcome_inherited}"
			"{RoyalFamilyNewSovereign.non_agressions_broken}"
			"{RoyalFamilyNewSovereign.royal_marriages_broken}"
			"{RoyalFamilyNewSovereign.royal_ties_restored}"]
			voice_line = "narrator_voice:king_died"
		}
		case chosen_as_patriarch = (abdication_reason = "chosen_as_patriarch")
		{
			body = $[
			"{old_sovereign} was elected as the patriarch of our Orthodox church! His seat is now taken by his rightful heir. Long live {obj}!{p}"
			"{RoyalFamilyNewSovereign.already_married}"
			"{RoyalFamilyNewSovereign.authority_outcome_inherited}"
			"{RoyalFamilyNewSovereign.non_agressions_broken}"
			"{RoyalFamilyNewSovereign.royal_marriages_broken}"
			"{RoyalFamilyNewSovereign.royal_ties_restored}"]
			voice_line = "narrator_voice:king_chosen_as_patriarch"
		}
		case desert_kingdom = (abdication_reason = "desert_kingdom")
		{
			body = $[

			"Our {obj.title} has deserted us! His heir, {obj}, is now left with the burden of carrying his predecessor's traitorous past.{p}"
			"{RoyalFamilyNewSovereign.already_married}"
			"{RoyalFamilyNewSovereign.authority_outcome_inherited}"
			"{RoyalFamilyNewSovereign.non_agressions_broken}"
			"{RoyalFamilyNewSovereign.royal_marriages_broken}"
			"{RoyalFamilyNewSovereign.royal_ties_restored}"]
			voice_line = "narrator_voice:king_deserted_kingdom"
		}
		case become_rebel = (abdication_reason = "become_rebel")
		{
			body = $[
			"The {obj.title} has rebelled against us! His heir, {obj} now sits on the throne. May his reign bear no resemblance to his predecessor's poisonous rule!{p}"
			"{RoyalFamilyNewSovereign.already_married}"
			"{RoyalFamilyNewSovereign.authority_outcome_inherited}"
			"{RoyalFamilyNewSovereign.non_agressions_broken}"
			"{RoyalFamilyNewSovereign.royal_marriages_broken}"
			"{RoyalFamilyNewSovereign.royal_ties_restored}"]
			voice_line = "" //doest not exist anymore
		}
		case defeated_in_combat = (abdication_reason = "defeated_in_combat")
		{
			body = $[
			"Alas, our {obj.title} died valiantly on the battlefield, fighting for our cause. Long live his heir - {obj}!{p}"
			"{RoyalFamilyNewSovereign.already_married}"
			"{RoyalFamilyNewSovereign.authority_outcome_inherited}"
			"{RoyalFamilyNewSovereign.non_agressions_broken}"
			"{RoyalFamilyNewSovereign.royal_marriages_broken}"
			"{RoyalFamilyNewSovereign.royal_ties_restored}"]
			voice_line = "narrator_voice:king_killed"
		}
		
		case spy_killed_in_action = (abdication_reason = "killed_in_action" && old_sovereign.class_name  = "Spy")
		{
			body = $[
			"Alas, our {obj.title} was killed while spying on our enemy. His successor, {obj.name}, has taken over the crown. Hail our new {obj.title}!{p}"
			"{RoyalFamilyNewSovereign.already_married}"
			"{RoyalFamilyNewSovereign.authority_outcome_inherited}"
			"{RoyalFamilyNewSovereign.non_agressions_broken}"
			"{RoyalFamilyNewSovereign.royal_marriages_broken}"
			"{RoyalFamilyNewSovereign.royal_ties_restored}"]
			voice_line = "narrator_voice:king_died"
		}
		
		case killed_in_action = (abdication_reason = "killed_in_action" )
		{
			body = $[
			"Sire, we have dreadful news - our {obj.title} has perished while performing a mission! His heir now sits on the throne. Hail {obj}!{p}"
			"{RoyalFamilyNewSovereign.already_married}"
			"{RoyalFamilyNewSovereign.authority_outcome_inherited}"
			"{RoyalFamilyNewSovereign.non_agressions_broken}"
			"{RoyalFamilyNewSovereign.royal_marriages_broken}"
			"{RoyalFamilyNewSovereign.royal_ties_restored}"]
			voice_line = "narrator_voice:king_died"
		}
		
		case puppet_killed = (abdication_reason = "puppet_killed")
		{
			body = $[
			"Our {obj.title} was branded as a traitor and executed for spying on his own people! His heir, {obj}, now sits on the throne. May our new {obj.title:s} reign bear no resemblance to his predecessor's poisonous rule!{p}"
			"{RoyalFamilyNewSovereign.already_married}"
			"{RoyalFamilyNewSovereign.authority_outcome_inherited}"
			"{RoyalFamilyNewSovereign.non_agressions_broken}"
			"{RoyalFamilyNewSovereign.royal_marriages_broken}"
			"{RoyalFamilyNewSovereign.royal_ties_restored}"]
			voice_line = "narrator_voice:king_died"
		}
		
		case assassinated = (abdication_reason = "assassinated")
		{
			body = $[
			"Dark times are upon us - our {obj.title} was assasinated! While our people grief we must appoint his heir, {obj.name}, as our new {obj.title}.{p}"
			"{RoyalFamilyNewSovereign.already_married}"
			"{RoyalFamilyNewSovereign.authority_outcome_inherited}"
			"{RoyalFamilyNewSovereign.non_agressions_broken}"
			"{RoyalFamilyNewSovereign.royal_marriages_broken}"
			"{RoyalFamilyNewSovereign.royal_ties_restored}"]
			voice_line = "narrator_voice:king_died"
		}
		
		case killed_by_nobility = (abdication_reason = "killed_by_nobility")
		{
			body = $[
			"Dark times are upon us - our {obj.title} was killed by owr own nobility! While our people grief we must appoint his heir, {obj.name}, as our new {obj.title}.{p}"
			"{RoyalFamilyNewSovereign.already_married}"
			"{RoyalFamilyNewSovereign.authority_outcome_new_dynasty}{p}"
			"{RoyalFamilyNewSovereign.authority_outcome_inherited}{p}"
			"{RoyalFamilyNewSovereign.non_agressions_broken}"
			"{RoyalFamilyNewSovereign.royal_marriages_broken}"
			"{RoyalFamilyNewSovereign.royal_ties_restored}"]
			voice_line = "narrator_voice:king_died"
		}
		
		case killed_in_trade_expedition = (abdication_reason = "killed_in_trade_expedition")
		{
			body = $[
			"Dark times are upon us - our {obj.title} was killed by savages in one of our trade colonies! While our people grief we must appoint his heir, {obj.name}, as our new {obj.title}.{p}"
			"{RoyalFamilyNewSovereign.already_married}"
			"{RoyalFamilyNewSovereign.authority_outcome_new_dynasty}{p}"
			"{RoyalFamilyNewSovereign.authority_outcome_inherited}{p}"
			"{RoyalFamilyNewSovereign.non_agressions_broken}"
			"{RoyalFamilyNewSovereign.royal_marriages_broken}"
			"{RoyalFamilyNewSovereign.royal_ties_restored}"]
			voice_line = "narrator_voice:king_died"
		}
		
		//crown_authority -= "kingDeath" <--- happens behind the scenes
	}
	
	case new_dynasty = (change_type = "new_dynasty")
	{
		icon = "Assets/UI/Elements/msg_icons/Icon_Message_NewKing_NoSuccessor.png:Icon_Message_NewKing_NoSuccessor#2" //GUID:90d224ad1ee5d4a408c434f99330a08f
		
		sprite illustration = "Assets/UI/Messages/Illustrations/RoyalFamilyNewSovereign_NoSuccessor.tga:RoyalFamilyNewSovereign_NoSuccessor#2" //GUID:21fe0d91331e02547bda9c177598758d
		body = $[
		"Our {obj.title} is dead, his bloodline perishing alongside him. Hail our new {obj.title} - {obj.name}!{p}"
		"{RoyalFamilyNewSovereign.already_married}"
		"{RoyalFamilyNewSovereign.authority_outcome_new_dynasty}{p}"
		"{RoyalFamilyNewSovereign.authority_outcome_inherited}"
		"{RoyalFamilyNewSovereign.non_agressions_broken}"
		"{RoyalFamilyNewSovereign.royal_marriages_broken}"
		"{RoyalFamilyNewSovereign.royal_ties_restored}"]
		
		case old_age = (abdication_reason = "old_age")
		{
			body = $[
			"Our {obj.title} passed away, his bloodline perishing alongside him. Hail our new ruler - {obj}! May he bear many princes and princesses.{p}"
			"{RoyalFamilyNewSovereign.already_married}"
			"{RoyalFamilyNewSovereign.authority_outcome_new_dynasty}{p}"
			"{RoyalFamilyNewSovereign.authority_outcome_inherited}"
			"{RoyalFamilyNewSovereign.non_agressions_broken}"
			"{RoyalFamilyNewSovereign.royal_marriages_broken}"
			"{RoyalFamilyNewSovereign.royal_ties_restored}"]
			voice_line = "narrator_voice:king_died"
		}
		case chosen_as_patriarch = (abdication_reason = "chosen_as_patriarch")
		{
			body = $[
			"For his honor and virtue, our {obj.title} was chosen as the patriarch of our Orthodox church! Leaving no blood relative in his stead, our new {obj.title} is now {obj.name}.{p}"
			"{RoyalFamilyNewSovereign.already_married}"
			"{RoyalFamilyNewSovereign.authority_outcome_new_dynasty}{p}"
			"{RoyalFamilyNewSovereign.authority_outcome_inherited}"
			"{RoyalFamilyNewSovereign.non_agressions_broken}"
			"{RoyalFamilyNewSovereign.royal_marriages_broken}"
			"{RoyalFamilyNewSovereign.royal_ties_restored}"]
			voice_line = "narrator_voice:king_chosen_as_patriarch"
		}
		case desert_kingdom = (abdication_reason = "desert_kingdom")
		{
			body = $["{old_sovereign} has deserted us! With no true successor left in his stead, we must bow to a different ruler. Hail {obj}!{p}"
			"{RoyalFamilyNewSovereign.already_married}"
			"{RoyalFamilyNewSovereign.authority_outcome_new_dynasty}{p}"
			"{RoyalFamilyNewSovereign.authority_outcome_inherited}"
			"{RoyalFamilyNewSovereign.non_agressions_broken}"
			"{RoyalFamilyNewSovereign.royal_marriages_broken}"
			"{RoyalFamilyNewSovereign.royal_ties_restored}"]
			voice_line = "narrator_voice:king_deserted_kingdom"
		}
		case become_rebel = (abdication_reason = "become_rebel")
		{
			body = $[
			"Our {obj} has rebelled against us! The traitor abandoned his people with no heir, leaving us no other option but to hand over the crown to {obj}.{p}"
			"{RoyalFamilyNewSovereign.already_married}"
			"{RoyalFamilyNewSovereign.authority_outcome_new_dynasty}{p}"
			"{RoyalFamilyNewSovereign.authority_outcome_inherited}"
			"{RoyalFamilyNewSovereign.non_agressions_broken}"
			"{RoyalFamilyNewSovereign.royal_marriages_broken}"
			"{RoyalFamilyNewSovereign.royal_ties_restored}"]
			voice_line = "" //not existing anymore
		}
		case defeated_in_combat = (abdication_reason = "defeated_in_combat")
		{
			body = $[
			"Alas, our {obj.title} died during battle - he fought valiantly but fell to a fatal blow. With no heir left, our only option left is to hand over the crown to {obj.name}, our new {obj.title}!{p}"
			"{RoyalFamilyNewSovereign.already_married}"
			"{RoyalFamilyNewSovereign.authority_outcome_new_dynasty}{p}"
			"{RoyalFamilyNewSovereign.authority_outcome_inherited}"
			"{RoyalFamilyNewSovereign.non_agressions_broken}"
			"{RoyalFamilyNewSovereign.royal_marriages_broken}"
			"{RoyalFamilyNewSovereign.royal_ties_restored}"]
			voice_line = "narrator_voice:king_killed"
		}
		
		case spy_killed_in_action = (abdication_reason = "killed_in_action" && old_sovereign.class_name = "Spy")
		{
			body = $[
			"Alas, our {obj.title} was killed while spying on our enemy. With no blood relative left, a new dynasty now rules over our people. Hail {obj}!{p}"
			"{RoyalFamilyNewSovereign.already_married}"
			"{RoyalFamilyNewSovereign.authority_outcome_new_dynasty}{p}"
			"{RoyalFamilyNewSovereign.authority_outcome_inherited}"
			"{RoyalFamilyNewSovereign.non_agressions_broken}"
			"{RoyalFamilyNewSovereign.royal_marriages_broken}"
			"{RoyalFamilyNewSovereign.royal_ties_restored}"]
			voice_line = "narrator_voice:king_died"
		}
		
		case killed_in_action = (abdication_reason = "killed_in_action" )
		{
			body = $[
			"Sire, we have dreadful news - our {obj.title} has perished while performing a mission! He left us with no heir and we must now bow to {obj}!{p}"
			"{RoyalFamilyNewSovereign.already_married}"
			"{RoyalFamilyNewSovereign.authority_outcome_new_dynasty}{p}"
			"{RoyalFamilyNewSovereign.authority_outcome_inherited}"
			"{RoyalFamilyNewSovereign.non_agressions_broken}"
			"{RoyalFamilyNewSovereign.royal_marriages_broken}"
			"{RoyalFamilyNewSovereign.royal_ties_restored}"]
			voice_line = "narrator_voice:king_died"
		}
		
		case puppet_killed = (abdication_reason = "puppet_killed")
		{
			body = $[
			"Our {obj.title} was branded as a traitor and executed for spying on his own people! With no successor left in his stead, {obj.name} was chosen as our new {obj.title}!{p}"
			"{RoyalFamilyNewSovereign.already_married}"
			"{RoyalFamilyNewSovereign.authority_outcome_new_dynasty}{p}"
			"{RoyalFamilyNewSovereign.authority_outcome_inherited}"
			"{RoyalFamilyNewSovereign.non_agressions_broken}"
			"{RoyalFamilyNewSovereign.royal_marriages_broken}"
			"{RoyalFamilyNewSovereign.royal_ties_restored}"]
			voice_line = "narrator_voice:king_died"
		}
		
		case assassinated = (abdication_reason = "assassinated")
		{
			body = $[
			"Dark times are upon us - our {obj.title} was assasinated! {obj.name} has stepped up in these times of turmoil and taken his stead. Long live our new {obj.title}, and may his dynasty rule for many generations!{p}"
			"{RoyalFamilyNewSovereign.already_married}"
			"{RoyalFamilyNewSovereign.authority_outcome_new_dynasty}{p}"
			"{RoyalFamilyNewSovereign.authority_outcome_inherited}"
			"{RoyalFamilyNewSovereign.non_agressions_broken}"
			"{RoyalFamilyNewSovereign.royal_marriages_broken}"
			"{RoyalFamilyNewSovereign.royal_ties_restored}"]
			voice_line = "narrator_voice:king_died"
		}
		
		case killed_by_nobility = (abdication_reason = "killed_by_nobility")
		{
			body = $[
			"Dark times are upon us - our {obj.title} was killed by owr own nobility! {obj.name} has stepped up in these times of turmoil and taken his stead. Long live our new {obj.title}, and may his dynasty rule for many generations!{p}"
			"{RoyalFamilyNewSovereign.already_married}"
			"{RoyalFamilyNewSovereign.authority_outcome_new_dynasty}{p}"
			"{RoyalFamilyNewSovereign.authority_outcome_inherited}"
			"{RoyalFamilyNewSovereign.non_agressions_broken}"
			"{RoyalFamilyNewSovereign.royal_marriages_broken}"
			"{RoyalFamilyNewSovereign.royal_ties_restored}"]
			voice_line = "narrator_voice:king_died"
		}
		
		case killed_in_trade_expedition = (abdication_reason = "killed_in_trade_expedition")
		{
			body = $[
			"Dark times are upon us - our {obj.title} was killed by savages in one of our trade colonies! {obj.name} has stepped up in these times of turmoil and taken his stead. Long live our new {obj.title}, and may his dynasty rule for many generations!{p}"
			"{RoyalFamilyNewSovereign.already_married}"
			"{RoyalFamilyNewSovereign.authority_outcome_new_dynasty}{p}"
			"{RoyalFamilyNewSovereign.authority_outcome_inherited}{p}"
			"{RoyalFamilyNewSovereign.non_agressions_broken}"
			"{RoyalFamilyNewSovereign.royal_marriages_broken}"
			"{RoyalFamilyNewSovereign.royal_ties_restored}"]
			voice_line = "narrator_voice:king_died"
		}
		
		
		//crown_authority -= "noSuccessor" <--- handled in C#
	}
	
	case independence = (reason = "independence")
	{
		sprite illustration = "Assets/UI/Messages/Illustrations/RoyalFamilyNewSovereign_NoSuccessor.tga:RoyalFamilyNewSovereign_NoSuccessor#2" //GUID:21fe0d91331e02547bda9c177598758d
		icon = "Assets/UI/Elements/msg_icons/Icon_Message_NewKing_NoSuccessor.png:Icon_Message_NewKing_NoSuccessor#2" //GUID:90d224ad1ee5d4a408c434f99330a08f
		body = $["Our {obj.title} has abandoned us and taken some of our lands for himself! Inevitably, our new ruler is {obj}."
				 "{RoyalFamilyNewSovereign.already_married}"]
		voice_line = "narrator_voice:king_deserted_kingdom"
	}
	
}

def RoyalFamilyComingOfAge : Message
{
	caption = "{obj} is now grown up!"
	body = "[{can_learn_new_skill:if}Sire, so far {obj} has shown talents in the following disciplines|Sire, {obj} is now old enough to be accepted into our royal court] and is awaiting your orders."
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_PrinceGrowing.png:Icon_Message_PrinceGrowing#2" //GUID:af747131c4a6abc40a3c067a1735bab0
	ui_prefab = "Assets/UI/Character/UIP_CharacterGrowUp.prefab" //GUID:9d3bcc313696f8a418670283e7e06f23
	expire_time = 180
	stack_priority = 4
	allow_stack_dismiss = false
	show_warning = true
	voice_line = "narrator_voice:prince_growing"
	
	text button_close = "&Let the fate deside"
	text button_ok = "&Ok"
	text button_family = "&View Royal Family"
}

def RoyalFamilySpecializationQuery : Message
{
	caption = "{obj} is growing!"
	body = "Sire, {obj} has shown affinity in several disciplines. In what directions should we focus our teaching efforts?"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_PrinceGrowing.png:Icon_Message_PrinceGrowing#2" //GUID:af747131c4a6abc40a3c067a1735bab0
	ui_prefab = "Assets/UI/Character/UIP_CharacterSpecializationQuery.prefab" //GUID:96462babf3839184486ed6e716c8fb62
	expire_time = 0
	stack_priority = 4
	allow_stack_dismiss = false
	show_warning = true
	voice_line = "narrator_voice:choose_prince_specialization"
	
	text button_close = "&Let the fate deside"
	text button_family = "&View Royal Family"
}

def CharacterNotGoverning : Message
{
	show_filter_id = "notification_unused_governor_slot"
	caption = "{obj} is not governing a province!"
	
	stack_priority = 80
	separate_stack = true
	show_warning = true
	stack_group = "KingdomOpportunity"
	
	body = "Sire, {obj} is currently not governing any of your provinces. It would be benefitial if you assign him as a governor."
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_GenericEvent_Neutral.png:Icon_Message_GenericEvent_Neutral#2" //GUID:d1b257a397cd3e2409cb96b95cb01190
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_ReminderMessage.tga:UI_Illustration_ReminderMessage#2" //GUID:e888028b717208740a51e441c5ba172e
	voice_line = "narrator_voice:character_not_governing"
}

def CastleBuildingInPorgress : OngoingIcon
{
	caption = "[{building.is_upgrade:if}Upgrading {building.name}|Constructing {building.name} in {realm}]"
	text completed = "[{building.is_upgrade:if}{building.name} upgrade completed|{building.name} in {realm} has been constructed]"
	icon = "Assets/UI/Elements/msg_icons/msg_symbols.PNG:msg_symbols_10#1" //GUID:8885cf826a7679a41941e6a33445cc2f
	icon_prefab = "Assets/UI/Elements/msg_icons/MessageIconCastleBuilding.prefab" //GUID:d066f02d1f5b50340bbe87060d2b4ece
	expire_time = 15
}

def CastleRepairInPorgress : OngoingIcon
{
	caption = "Repairing {realm}"
	text completed = "Finished repairing {realm}."
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Ongoing_Sacked.png:Icon_Message_Ongoing_Sacked#2" //GUID:3ede8abc12564e24aad0ceef7bfd9f28
	icon_prefab = "Assets/UI/Elements/msg_icons/MessageIconCastleRepairing.prefab" //GUID:8fc30acab78184840aa3390d2a5ca494
	expire_time = 0
}

def AdoptingIdeaPorgress : OngoingIcon
{
	caption = "Adopting {idea.name}"
	icon = "Assets/UI/Elements/msg_icons/msg_symbols.PNG:msg_symbols_4#1" //GUID:8885cf826a7679a41941e6a33445cc2f
}

def BattleViewRetreatMessage : Message
{
	caption = "Retreat?"
	body = "Abandon the battlefield in {realm_in} and suffer heavy morale losses.{p}{p}Attention! Troops with low morale are less determined and might flee from their enemies faster."
	buttons
	{
		text ok = "&Ok"
		text cancel = "&Nevermind"
	}
}

def BattleViewLeaveMessage : Message
{
	caption = "Return to Siege?"
	body = "This will end the tactical battle and siege will continue. Your armies will receive morale penalties for your failed effort to take the initiative and win this siege."
	buttons
	{
		text ok = "&Ok"
		text cancel = "&Nevermind"
	}
}

// def RebelsMessage : OkGotoMessage
// {
// 	icon = "Assets/UI/Elements/msg_icons/msg_symbols.PNG:msg_symbols_17#1" //GUID:8885cf826a7679a41941e6a33445cc2f
// 	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_RebelsSpawned.png:UI_Illustration_RebelsSpawned#2" //GUID:01abe030ac7bf1f49949e7c64c3c0971
// 	voice_line = ""
// 	caption = "Rebels{reason}"
// 	body = "Sire, rebels are gathering near {obj.realm_in}."
// 	expire_time = 100
// }

def RebellionBecameFamousMessage : OkGotoMessage
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Rebels_Negative.png:Icon_Message_Rebels_Negative#2" //GUID:dbf11e725a52e1d429ad05300abb2f07
	caption = "Rebellion became famous!"
	body = "The rebellion helmed by {leader} has gained some notoriety within our lands! Its fame makes it a far more dangerous obstacle than we initially deemed it to be."
	radio = "{leader:s} rebellion in {origin_realm} became famous!"
	expire_time = 80
	stack_group = "RebelsRiseAndFall"
	category = "military"
	voice_line = "narrator_voice:rebellion_became_famous"
}

def RebelDefeatedMessage : OkGotoMessage
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Rebels_Positive.png:Icon_Message_Rebels_Positive#2" //GUID:98c851dbe2b371d48b23e62c5cd7310e
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_RebelsDefeated.tga:UI_Illustration_RebelsDefeated#2" //GUID:872baaefdda4b3d4091eb98c11470fb6
	voice_line = "narrator_voice:rebels_defeated"
	caption = "Rebels defeated"
	body = $["Sire, rebels were defeated near {obj.realm_in}."
	"[{p}{blt}{obj.rebel.gold_to_give_defeated_by:nonzero}{gold_icon} to {obj.rebel.defeated_by}]"
	]
	expire_time = 120
	stack_group = "RebelsRiseAndFall"
}

def MercenariesMessage : OkGotoMessage
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Mercenaries_Neutral.png:Icon_Message_Mercenaries_Neutral#2" //GUID:e8b8322c38471694eb6d6a23a91d1329
	sprite illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Mercenary_Spawned.tga:UI_Illustration_Mercenary_Spawned#2" //GUID:c552bf34442de8d48ab377ee8b69c6b6
	voice_line = "narrator_voice:mercenaries_message"
	caption = "Mercenaries appeared near {obj.realm_in}"
	radio = "Mercenaries appeared near {obj.realm_in}"
	body = "Sire, mercenaries are camping near {obj.realm_in}! We can bring an army and hire troops from them, for the right price."
	expire_time = 100
	category = "military"
}

def RetreatMessage : Message //!!! would be good to add several more cases, depending on the type of battle and the player's side
{
	caption = "Retreat?"
	bool player_is_defender = (kingdom.local_player_kingdom == defender_kingdom)
	body = $["Are you sure you wish to flee from the battle in {realm_in}? "
	"[{is_break_siege:if}{player_is_defender:if}Our defending forces will return to the town's perimeters and the siege will continue. ]"
	"[Your army will suffer morale penalties and some of your troops will also die while retreating.]"
	]
	buttons
	{
		text ok = "&Retreat"
		text cancel = "&Nevermind"
	}
}

def StopPlunderingMessage : Message //!!! would be good to add several more cases, depending on the type of battle and the player's side
{
	caption = "Stop plundering?"
	bool player_is_defender = (kingdom.local_player_kingdom == defender_kingdom)
	body = $["Are you sure you wish to stop plundering {settlement}? "
	"Our troops will not suffer any penalties, but all pillaging progress will be lost."
	]
	buttons
	{
		text ok = "&Stop Plundering"
		text cancel = "&Nevermind"
	}
}

def LiftSiegeMessage : Message
{
	caption = "Lift siege?"
	body = "The siege will end and your army will suffer minor morale penalties."
	buttons
	{
		text ok = "&Lift Siege"
		text cancel = "&Nevermind"
	}
}

def LiftSiegeSupporterMessage : Message
{
	caption = "Withdraw from siege?"
	body = "Your army will withdraw from the siege and it will continue without your support. Your army will suffer no penalties."
	buttons
	{
		text ok = "&Lift Siege"
		text cancel = "&Nevermind"
	}
}

def RefuseSupportMessage : Message
{
	caption = "Refuse support?"
	body = "Your relations with {reinforcing_army.kingdom:s} will decline."
	buttons
	{
		text ok = "&Refuse"
		text cancel = "&Nevermind"
	}
}

def IncommingOfferExistingMessage : Message
{
	caption = "Ongoing talks!"
	body = ["If you want to talk with me, first respond to my offer, will you, {plr_kingdom.king}?",
			"Well that's rude - you still haven't answered my question and you want to discuss something else?",
			"Until you respond to my offer, I will simply not discuss anything else with you, {plr_kingdom.king}."]
	//"Sire, {kingdom:ians} have already sent us an offer and they won't agree to an audience before we send them our reply."
	buttons
	{
		text seeIt = "&Let me see it"
		text cancel = "&Later"
	}
	ui_prefab = "Assets/UI/Messages/UIP_AudienceInaccessible.prefab" //GUID:435002aff9ca01e4f8ca24b8da874a82
}

def OutgoingOfferExistingMessage : IncommingOfferExistingMessage
{
	body = ["Can you please have a little patience, {plr_kingdom.king}. We are considering the offer that you've sent us.",
			"Yes, I heard what you want, {plr_kingdom.king}. Can you let me think about it for one second?",
			"What do you want? I have not decided how to respond to your offer yet - I will write you once I've made my mind."]
	//body = "Sire, {kingdom} are still considering a reply to our offer and will not accept new discussions before they make a decision."
}

def AllAlliancesRevoked : OkMessage
{
	caption = "Alliances revoked"
	body = "Sire, due to our previous king's death, our our allies stopped supporting us."
	stack_priority = 130
}

def FamousPersonSpawned : OkGotoMessage
{
	caption = "Great person arrived"
	body = "Sire, {famous_person} arrived in {obj} and our knights can learn from his wisdom."
}

def FamousPersonLeft : OkGotoMessage
{
	caption = "Great person left"
	body = "Sire, {famous_person} has left {obj}."
}

def ConfirmSaveOverwrite : Message
{
	caption = "Overwrite save file"
	body = "Are you sure you want to overwrite '{saveName}'?"
	buttons
	{
		text confirm = "&Confirm"
		text cancel = "&Cancel"
	}
}

def ConfirmSaveLoad : Message
{
	caption = "Load campaign"
	body = "Are you sure you want to load '{saveName}'? Any unsaved progress would be lost!"
	buttons
	{
		text confirm = "&Confirm"
		text cancel = "&Cancel"
	}
}

def ConfirmSaveDelete : Message
{
	caption = "Delete save file"
	body = "Are you sure you want to delete '{saveName}'?"
	buttons
	{
		text confirm = "&Confirm"
		text cancel = "&Cancel"
	}
}

def ConfirmCancelAdoptingIdea : Message
{
	caption = "Stop adopting idea"
	body = "Are you sure you want to stop adopting {name}?"
	buttons
	{
		text confirm = "&Confirm"
		text cancel = "&Cancel"
	}
}

def ConfirmCancelBuilding : Message
{
	caption = "Cancel [{is_upgrade:if}upgrade|construction]"
	body = "Are you sure you wish to stop [{is_upgrade:if}upgradding {name}|the construction of this {name}]?{p}{p}{blt}{cancel_refunds} will be refunded to your kingdom's treasury"
	buttons
	{
		text confirm = "&Confirm"
		text cancel = "&Cancel"
	}
}

def ConfirmRemoveBuilding : Message
{
	caption = "Demolish building"
	body = $[
			 "Are you sure you wish to raze {name}? Other buildings in this province, which require this one as a prerequisite, will also be destroyed.{p}"
			 "[{p}{blt}We will no longer produce {clr:red_bright}{last_produces_text}{/clr} in our [{kingdom.KingdomType}|{u}kingdom{/u}]]"
			 //"[{will_stall:if}{p}{blt}This will cause problems with other productions throughout our lands]"
		   ]
	buttons
	{
		text confirm = "&Confirm"
		text cancel = "&Cancel"
	}
}


def TradeCenterDespawnOurMessage : OkGotoMessage //note that you might have a merchant there, which adds the last part of the string
{
	caption = "Our trade center declined"
	body = "Our town in {obj.realm} became less and less attractive to foreign merchants and nobody considers it a trade center any longer. This will no doubt be a huge hit for our economy.[ {merchant}, who facilitated our dealings there, is now waiting for new assignments.]"
	
	show_warning = true
	expire_time = 180
	stack_priority = 10
	separate_stack = true
	stack_group = "WorldEvents"
	
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TradeCenter_Negative.png:Icon_Message_TradeCenter_Negative#2" //GUID:e5d9b4b58cc8a4b4e81d09fc1ed3dda2
	show_filter_id = "notification_trade_center_decaying"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_ReminderMessage.tga:UI_Illustration_ReminderMessage#2" //GUID:e888028b717208740a51e441c5ba172e
}


def TradeCenterDespawnOtherMessage : OkGotoMessage //only if we have trader there
{
	caption = "Trade center declined"
	body = "{obj.realm} is no longer considered a trade center! [{merchant} has returned from his mission there and is ready for new assignments.]"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_TradeCenterDespawn.png:UI_Illustration_TradeCenterDespawn#2" //GUID:825f7161544d147429ed27fe5f0fd7ea
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TradeCenter_Neutral.png:Icon_Message_TradeCenter_Neutral#2" //GUID:faa7fb66f637d3a4ea412ffadfe4db5e
	show_filter_id = "notification_trade_center_decaying"
	separate_stack = true
	stack_group = "WorldEvents"
	stack_priority = 100
}

def NewTradeCenterOurMessage : OkGotoMessage
{
	caption = "We have a new trade center"
	body = "The commerce in {obj.realm} is thriving and the city now attracts merchants from near and far. This will certainly bring a lot of coin in our treasury!"
	
	show_warning = true
	separate_stack = true
	expire_time = 180
	stack_group = "WorldEvents"
	stack_priority = 10
	
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_NewTradeCenter.tga:UI_Illustration_NewTradeCenter#2" //GUID:9b075b5d215c8f24d8157fc245290cc5
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TradeCenter_Positive.png:Icon_Message_TradeCenter_Positive#2" //GUID:6feb792e54da0ab4186724f3c8e1ec77
}

def NewTradeCenterTheirsMessage : OkGotoMessage
{
	caption = "Trade center rises"
	radio = "Trade center in {obj.realm} rises"
	important = 2
	category = "common"
	separate_stack = true
	stack_group = "WorldEvents"
	stack_priority = 80
	
	body = "Trade in {obj.realm} is flourishing! {obj.realm.kingdom} has now declared that all merchants from their friendly kingdoms are now welcome in the trade center."
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_NewTradeCenter.tga:UI_Illustration_NewTradeCenter#2" //GUID:9b075b5d215c8f24d8157fc245290cc5
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TradeCenter_Neutral.png:Icon_Message_TradeCenter_Neutral#2" //GUID:faa7fb66f637d3a4ea412ffadfe4db5e
}

def TradeCenterMovedMessage : OkGotoMessage //trade center moved and our merchant from there is out
{
	caption = "Trade center moved"
	radio = "{old_realm} is no longer a trade center and was replaced by {new_realm}"
	
	show_warning = (new_realm.kingdom.is_local_player || old_realm.kingdom.is_local_player)
	
	important = 2
	separate_stack = true
	stack_group = "WorldEvents"
	stack_priority = 100
	body = "The merchants in {old_realm} saw the prosperity and opportunities, arising in {new_realm}, and moved there." //obsolete [ {merchant} returned to the royal court and is now awaiting new assignments.]
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_NewTradeCenter.tga:UI_Illustration_NewTradeCenter#2" //GUID:9b075b5d215c8f24d8157fc245290cc5
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TradeCenter_Neutral.png:Icon_Message_TradeCenter_Neutral#2" //GUID:faa7fb66f637d3a4ea412ffadfe4db5e
}

def TradeCentersMergedMessage : OkGotoMessage // multiple trade centers merged
{
	caption = "Trade centers merged"
	radio = "The trade centers of {centers} have merged at {obj.realm}"
	important = 2
	
	show_warning = (obj.realm.kingdom.is_local_player)
	
	body = "Merchants from the former trade centers of {centers} have decided to relocate and are now operating out of {obj.realm}."
	list = "centers"
	separate_stack = true
	stack_group = "WorldEvents"
	stack_priority = 100
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_NewTradeCenter.tga:UI_Illustration_NewTradeCenter#2" //GUID:9b075b5d215c8f24d8157fc245290cc5
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TradeCenter_Neutral.png:Icon_Message_TradeCenter_Neutral#2" //GUID:faa7fb66f637d3a4ea412ffadfe4db5e
}

def TradeCenterLostMessage : OkGotoMessage //if you have trader there, regardless if the trade center is ours
{
	caption = "Trade center lost"
	radio = "The trade center in {obj.realm} was overtaken by {obj.realm.kingdom}"
	body = "The trade center in {obj.realm} is now under the control of our enemy, {obj.realm.kingdom}." // [{merchant_name} has returned to the royal court and is ready for new assignment.]"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TradeCenter_Negative.png:Icon_Message_TradeCenter_Negative#2" //GUID:e5d9b4b58cc8a4b4e81d09fc1ed3dda2
	
	show_warning = (obj.realm.kingdom.is_local_player)
	
	separate_stack = true
	stack_group = "WorldEvents"
	stack_priority = 100
}

// def TradeAgreementCanceled : DiplomacyMessage //to add //auto, when no trade route open, AI to player only
// {
// 	caption = "Trade agreement cancelled"
// 	body = 

// 	 [ "We signed an agreement, but where are your traders, {plr_kingdom.king}?! We are done waiting for them.",
// 	   "You signed trade agreement with {kingdom}, but was the effect afterwards? None. That is the problem with diplomacy nowadays... Don't bother sending merchants our way.",
// 	   "How do you expect us to honor our trade agreement, if you make no effort to even open a trade route. Forget it, we will not trade with {plr_kingdom}."
// 	 ]
// }

def GameModeDestroyKingdomTargetMessage : OkGotoMessage
{
	caption = "Destroy target"
	body = "Sire, {target_kingdom} was chosen as the target for this campaign! We must conquer their last province before our opponents in order to be crowned victors."
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Multiplayer_Neutral.png:Icon_Message_Multiplayer_Neutral#2" //GUID:39e0d6f4abc7db249959a37301be6c99
	
	show_warning = true
	separate_stack = true
	expire_time = 0
}

def DeadCourtMemberMessage : OkGotoMessage
{
	caption = "Our {obj.title} died"
	body = "[{dead_status.status_text}|Sire, {obj} died in line of duty.]" // !!! add [{p}{p}{was_heir_add_text}] in future
	show_filter_id = "notification_knight_deaths"
	stack_priority = 110
	
	//text was_heir_add_text = "[{obj.is_heir:if}[{kingdom.heir:if}{obj:s} brother, {kingdom.heir}, now remains as the rightful successor to {kingdom.king}.|{kingdom.heir:if_not}With the death of our prince, {kingdom.king:s} succession is left in question.]]"
	// valid reason keys : unknown, exile, old_age, defeated_in_battle, prison_break,
	// puppet_killed, parish_during_torture, betrayer_killed, killed_in_action, old_age
	case old_age = (reason = "old_age")
	{
		body = "Sire, tragic news has befallen our {kingdom.KingdomType}. {obj} has passed away of old age, vacating his seat in our royal court."
		case prince = (obj.is_prince)
		{
			voice_line = "narrator_voice:royal_court_member_died"
			illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_DeadRoyalFamilyMember.tga:UI_Illustration_DeadRoyalFamilyMember#2" //GUID:30a3bf4c3206c05408a380788f31d050
		}
		case default
		{
			voice_line = "narrator_voice:royal_court_member_died"
			illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_DeadCourtMember.tga:UI_Illustration_DeadCourtMember#2" //GUID:17c31b385b6468f4d9d31755cb96b139
		}
	}
	
	case defeated_in_combat = (reason = "defeated_in_combat")
	{
		body = "My Lord, we bear tragic news - {obj} was killed on the battlefield. [{obj.is_marshal:if}He fought valiantly and will be remembered by our troops as a fearless commander.|Perhaps being an army leader wasn't exactly his calling...]" // !!! [{p}{p}{was_heir_add_text}]
		case prince = (obj.is_prince)
		{
			voice_line = "narrator_voice:our_prince_killed" /// Battle Commentary - Narrator 
			illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_DeadRoyalFamilyMember.tga:UI_Illustration_DeadRoyalFamilyMember#2" //GUID:30a3bf4c3206c05408a380788f31d050
		}
		case default
		{
			voice_line = "narrator_voice:our_army_leader_killed" /// Battle Commentary - Narrator 
			illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_DeadCourtMember.tga:UI_Illustration_DeadCourtMember#2" //GUID:17c31b385b6468f4d9d31755cb96b139
		}
	}
	
	case killed_in_trade_colony = (reason = "killed_in_trade_colony")
	{
		body = "Our {obj} was killed by savages while maintaining a trade colony! His settlement now stands deserted, as no {obj.kingdom:ian} dares set foot in these forsaken places." // !!! [{p}{p}{was_heir_add_text}]
		case prince = (obj.is_prince)
		{
			voice_line = "narrator_voice:royal_court_member_died"
			illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_DeadRoyalFamilyMember.tga:UI_Illustration_DeadRoyalFamilyMember#2" //GUID:30a3bf4c3206c05408a380788f31d050
		}
		case default
		{
			voice_line = "narrator_voice:royal_court_member_died"
			illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_DeadCourtMember.tga:UI_Illustration_DeadCourtMember#2" //GUID:17c31b385b6468f4d9d31755cb96b139
		}
	}
	case default
	{
		case prince = (obj.is_prince)
		{
			voice_line = "narrator_voice:royal_court_member_died"
			illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_DeadRoyalFamilyMember.tga:UI_Illustration_DeadRoyalFamilyMember#2" //GUID:30a3bf4c3206c05408a380788f31d050
		}
		case default
		{
			voice_line = "narrator_voice:royal_court_member_died"
			illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_DeadCourtMember.tga:UI_Illustration_DeadCourtMember#2" //GUID:17c31b385b6468f4d9d31755cb96b139
		}
	}
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_KnightDead_Negative.png:Icon_Message_KnightDead_Negative#2" //GUID:c869e7764f85b1e41a7e84d3576a87c3
}

def ExpandCityMessage : Message //NOTE: text field has support {building_slots_per_tier}. This is currently always 1, so not needed for now.
{
	caption = "Expand Province"
	body = "Unlocking an additional building slot in {realm} will cost {expand_cost}. Shall we proceed?"
	buttons
	{
		text ok = "&Ok"
		text cancel = "&Cancel"
	}
}

def CancelTroopsHealMessage : Message
{
	caption = "Healing will seaze"
	body = "Sire, troops are currently being healed. Issuing a move command will cancel all progress and all invested resources will be lost!"
	buttons
	{
		text ok = "&Ok"
		text cancel = "&Cancel"
	}
}

def YouDisconnectedMessage : OngoingIcon
{
	expire_time = 0
	show_warning = 1
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Ongoing_Multiplayer.png:Icon_Message_Ongoing_Multiplayer#2" //GUID:7cbebc4db9c566744bff31b49111d9d0
	caption = "Disconnected"
	body = "You are disconnected from the campaign session."
	buttons
	{
		text close = "&Close"
	}
}

def AnotherPlayerDisconnectedMessage : OngoingIcon
{
	expire_time = 60
	show_warning = 1
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Multiplayer_Negative.png:Icon_Message_Multiplayer_Negative#2" //GUID:bdbfddcc96ef89145a3b11e7adb0a54a
	caption = "{target} has disconnected"
	body = "{target} is disconnected from the campaign session and no longer playing[ as {kingdom}]."
	buttons
	{
		text ok = "&Close"
	}
}

def HostDisconnectedMessage : OngoingIcon
{
	expire_time = 60
	show_warning = 1
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Multiplayer_Negative.png:Icon_Message_Multiplayer_Negative#2" //GUID:bdbfddcc96ef89145a3b11e7adb0a54a
	caption = "{target} has disconnected"
	body = "{target} is no longer hosting the campaign session[ as {kingdom}]."
	buttons
	{
		text ok = "&Close"
	}
}

def PlayerReconnectedMessage : OngoingIcon
{
	expire_time = 60
	show_warning = 1
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Multiplayer_Positive.png:Icon_Message_Multiplayer_Positive#2" //GUID:37df80ce779cb1843ad765c7c0d876b5
	caption = "{target} reconnected"
	body = "{target} has successfully reconnected[ and is now leading {kingdom}]."
	buttons
	{
		text ok = "&Close"
	}
}

def CharacterImprisonedOccupation : Message
{
	caption = "Knight Imprisoned"
	body = "When {realm} was overtaken by the {realm.controller.kingdom:ians}, {obj} was imprisoned."
	stack_priority = 80
	
	buttons
	{
		text ok = "&Close"
	}
	
	sound_effect = "event:/sound_effects/notification/character/imprisoned"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_KnightImprisoned_Negative.png:Icon_Message_KnightImprisoned_Negative#2" //GUID:576cf88267f938d479147e5ac18e45d9
}

def ClericActionInteuptedOccupation : Message
{
	caption = "Cleric's mission interupted"
	body = "{obj} could not complete his mission in {realm} because the province has been occupied by the {realm.controller.kingdom:ians}."
	buttons
	{
		text ok = "&Close"
	}
}

def CharacterRecalledOccupation : Message
{
	caption = "Knight returned to our court"
	body = "{obj} was recalled because of the occupation of {realm} by the {realm.controller.kingdom:ians}."
	buttons
	{
		text ok = "&Close"
	}
}

def SpyActionInteuptedOccupation : Message
{
	caption = "Spy's plot interupted"
	body = "{obj}'s plans in {realm} got complicated, due to the {realm.controller.kingdom:ian} invasion."
	buttons
	{
		text ok = "&Close"
	}
}

def BanishedGovernorMessage : Message
{
	caption = "Banished governor"
	body = "{governor} is banished from his town of {realm} by the {realm.controller.kingdom:ian} occupier. If we regain control, he could keep following his duties"
	buttons
	{
		text ok = "&Close"
	}
}

def OwnKingdomDominated : Message
{
	caption = "We are dominated"
	body = "Sire, we are completely occupied and can no longer maintain our control over foreign lands, since we can't control our own!"
}

def EnemyKingdomDominated : Message
{
	caption = "Enemy kingdom dominated"
	body = "Sire, good news! {obj} has lost control over all of their lands and now their crown is in danger. They also lost control of all their occupied foreign lands!"
}

def BankrupcyMessage : Message
{
	caption = "Bankrupcy"
	body = "Sire, there is no gold left in our treasury and we have no income to cover our expenses - surely it will be great if some of them are cut.{p}{p}{blt} Crown Authority: {CrownAuthority.bankruptcy}"
}

def OccupiedRealmLostBankrupcy : Message
{
	caption = "Bankrupcy"
	body = "Sire, due to our financial crysis, we've lost our control over {obj}"
}

def CancelCurrentActionMessage : Message
{
	caption = "Cancel {action.name}?"
	body = "{obj} will halt his current activity."
	buttons
	{
		text ok = "&Ok"
		text cancel = "&Nevermind"
	}
}

def ActionCancelledMessage : OkMessage
{
	caption = "{cancelled_message_caption}"
	body = "[{reason_text}|{default_text}]"
}

def KingdomActionMessage : Message
{
	icon_prefab = "Assets/UI/Elements/msg_icons/MessageIconKingdomAction.prefab" //GUID:2f52a665339b3a441aa1b5612b0b9844
	ui_prefab = ""
	caption = "{prepare_status_text}"
}

def ChangeReligionActionMessage : Message
{
	icon_prefab = "Assets/UI/Elements/msg_icons/MessageIconChangeReligion.prefab" //GUID:c861c54f6848b6c4a94d8a9e05338d25
	ui_prefab = ""
}

def RebellionIndependenceNewKingdomMessage : OkGotoMessage
{
	caption = "Rebellion independence"
	body = "Rebels declared independence and established {independence_kingdom}.[ We lost {realms}, once occupied and are now part of their kingdom.]"
	
	separate_stack = true
	expire_time = 180
	stack_group = "RebelsRiseAndFall"
	stack_priority = 10
	
	list = "realms"
	{
		text final_separator = " and "
	}
	voice_line = "narrator_voice:rebellion_independence_new_kingdom"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Rebels_Negative.png:Icon_Message_Rebels_Negative#2" //GUID:dbf11e725a52e1d429ad05300abb2f07
}

def RebellionIndependenceExistingKingdomOwnMessage : Message
{
	caption = "Rebellion independence"
	body = "Rebels have decided to join our kingdom. They submitted to us full control over {realms} from their rebellion[, but that may cause some tension between us and the previous land owners, {affected_kingdoms}].[ That was the end of {defeated_kingdoms}, who previously held those lands.]"
	list = "realms"
	{
		text final_separator = " and "
	}
	
	separate_stack = true
	expire_time = 180
	stack_group = "RebelsRiseAndFall"
	stack_priority = 10
	show_warning = true
	
	sound_effect = "event:/sound_effects/notification/war_declared"
	voice_line = "narrator_voice:rebellion_independence_loyal_to_us"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Rebels_Positive.png:Icon_Message_Rebels_Positive#2" //GUID:98c851dbe2b371d48b23e62c5cd7310e
}

def RebellionIndependenceExistingKingdomOtherMessage : Message
{
	caption = "Rebellion independence"
	body = "Rebels accepted the sovereinty of {independence_kingdom}.[ Our occupied territories, {realms}, are now under their control.]"
	list = "realms"
	{
		text final_separator = " and "
	}
	
	separate_stack = true
	expire_time = 180
	stack_group = "RebelsRiseAndFall"
	stack_priority = 10
	
	voice_line = "narrator_voice:rebellion_independence_new_kingdom"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Rebels_Negative.png:Icon_Message_Rebels_Negative#2" //GUID:dbf11e725a52e1d429ad05300abb2f07
}

def RebellionIndependenceLoyalistsMessage : Message
{
	caption = "Loyalists have joined us"
	body = "Our loyalists have decided to join us. We now own and control {realms}[, but that may cause some tension between us and the previous land owners, {affected_kingdoms}].[ That was the end of {defeated_kingdoms}, who previously held those lands.]"
	list = "realms"
	{
		text final_separator = " and "
	}
	list2 = "affected_kingdoms"
	{
		text final_separator = " and "
	}
	
	separate_stack = true
	expire_time = 180
	stack_group = "RebelsRiseAndFall"
	stack_priority = 10
	show_warning = true
	
	voice_line = "narrator_voice:rebellion_independence_loyal_to_us"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Rebels_Positive.png:Icon_Message_Rebels_Positive#2" //GUID:98c851dbe2b371d48b23e62c5cd7310e
}

def RebellionIndependenceNewKingdomLoyalistsMessage : Message
{
	caption = "Our loyalists have declared indepence"
	body = "Our loyalists declared indepence and their newly formed kingdom accepts us as their sovereign. They now own and control {realms}[, but surely the previous rulers of those lands, {affected_kingdoms}, will do all they can to conquer them back].[ That was the end of {defeated_kingdoms}, who previously held those lands.]"
	list = "realms"
	{
		text final_separator = " and "
	}
	list2 = "affected_kingdoms"
	{
		text final_separator = " and "
	}
	
	separate_stack = true
	expire_time = 180
	stack_group = "RebelsRiseAndFall"
	stack_priority = 10
	show_warning = true
	
	voice_line = "narrator_voice:rebellion_independence_loyal_to_us"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Rebels_Positive.png:Icon_Message_Rebels_Positive#2" //GUID:98c851dbe2b371d48b23e62c5cd7310e
}

def RebellionSpawnedMessage : OkGotoMessage
{
	caption = "[{rebellion.is_famous:if}Famous ]Rebellion Spawned"
	body = "A rebellion led by {leader} has arisen in {origin_realm}![{rebellion.is_famous:if} News of the uprising has spread fast, making the rebellion famous amongst our realms.]"
	radio = "[{rebellion.is_famous:if}A famous rebellion has arisen in {leader.kingdom}, originating in the province of {origin_realm}]" //!!! currently does not happen
	voice_line = "narrator_voice:rebellion_spawned" //conditions: non_loyalist / foreign_loyalist / our_loyalist
	sprite illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_RebellionSpawned.tga:UI_Illustration_RebellionSpawned#2" //GUID:b4dca559d34a6994d8a6a166be867a1f
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Rebels_Negative.png:Icon_Message_Rebels_Negative#2" //GUID:dbf11e725a52e1d429ad05300abb2f07
	category = "military"
	
	separate_stack = true
	stack_priority = 80
	stack_group = "RebelsRiseAndFall"
}

def RebellionZoneJoinedMessage : OkGotoMessage
{
	caption = "[{rebellion.is_famous:if}Famous ]Rebellion near us"
	body = "We are now within the zone of the rebellion lead by {leader}. Those rebels can now attack us. The rebellion has originated in {origin_realm}."
	sprite illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_RebellionSpawned.tga:UI_Illustration_RebellionSpawned#2" //GUID:b4dca559d34a6994d8a6a166be867a1f
	voice_line = "narrator_voice:foreign_rebellion_warning"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Rebels_Negative.png:Icon_Message_Rebels_Negative#2" //GUID:dbf11e725a52e1d429ad05300abb2f07
	
	separate_stack = true
	stack_priority = 120
	stack_group = "RebelsRiseAndFall"
}

def RebellionZoneLeftMessage : OkGotoMessage
{
	caption = "[{rebellion.is_famous:if}Famous ]Rebellion is outside our borders"
	body = "We are now outside the zone of the rebellion lead by {leader}. They won't cause us any more issues for now."
	sprite illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_RebellionDefeated.tga:UI_Illustration_RebellionDefeated#2" //GUID:4db9e08daa46f0341b51cd08a6328195
	voice_line = "narrator_voice:foreign_rebellion_no_longer_threat"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Rebels_Neutral.png:Icon_Message_Rebels_Neutral#2" //GUID:39a9032eaf69f3242b57c5b2b0701b1d
	
	separate_stack = true
	stack_priority = 120
	stack_group = "RebelsRiseAndFall"
}

def RebellionEndedMessage : Message
{
	caption = "[{rebellion.is_famous:if}Famous ]Rebellion ended"
	body = "The rebellion led by {leader} and originating in {origin_realm} has come to an end. They'll bother us no more.[{p} + {gold} {gold_icon}]"
	//voice_line = "narrator_voice:rebellion_ended" //ON HOLD - Virtual voice line 
	sprite illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_RebellionDefeated.tga:UI_Illustration_RebellionDefeated#2" //GUID:4db9e08daa46f0341b51cd08a6328195
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Rebels_Positive.png:Icon_Message_Rebels_Positive#2" //GUID:98c851dbe2b371d48b23e62c5cd7310e
	
	separate_stack = true
	stack_priority = 100
	stack_group = "RebelsRiseAndFall"
}

def RebellionNewRebelMessage : OkGotoMessage
{
	caption = "[{rebellion.is_famous:if}Famous ]Rebellion strengthened"
	body = "The rebellion led by {leader} gained new supporters! {last_rebel} has joined their ranks, making them an even bigger threat than before."
	
	separate_stack = true
	stack_priority = 120
	stack_group = "RebelsRiseAndFall"
	
	case famous_rebellion = (rebellion.is_famous)
	{
		voice_line = "narrator_voice:famous_rebellion_gained_supporters"
	}
	case default
	{
		voice_line = "narrator_voice:rebels_spawned"
	}
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_RebelsSpawned.tga:UI_Illustration_RebelsSpawned#2" //GUID:875ff297643bc6547a44561443ea41cc
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Rebels_Negative.png:Icon_Message_Rebels_Negative#2" //GUID:dbf11e725a52e1d429ad05300abb2f07
}

def RebellionLeaderMessage : OkGotoMessage
{
	caption = "New rebellion leader"
	body = "The rebellion in {origin_realm} has a new leader. {leader} has taken control over the revolting masses."
	
	separate_stack = true
	stack_priority = 120
	stack_group = "RebelsRiseAndFall"
	
	voice_line = "narrator_voice:new_rebellion_leader"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_RebellionSpawned.tga:UI_Illustration_RebellionSpawned#2" //GUID:b4dca559d34a6994d8a6a166be867a1f
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Rebels_Negative.png:Icon_Message_Rebels_Negative#2" //GUID:dbf11e725a52e1d429ad05300abb2f07
}

def RankingsMessage : Message
{
	buttons
	{
		text open_ranking_window = "&See standings"
		text ok = "&Close"
	}
	
	separate_stack = true
	stack_group = "WorldEvents"
	stack_priority = 150
	
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Rankings_Neutral.png:Icon_Message_Rankings_Neutral#2" //GUID:3212901e2cada6144b5d7c84870b8b6b
}

def WeAreGreatPowerMessage : RankingsMessage
{
	caption = "We became a great power"
	radio = "We became a great power"
	category = "common"
	body = $["The might of our empire is now undeniable - we are recognized as a great power by the rulers of the other kingdoms.{p}{p}"
	"{ks_army_morale.great_power:value:bonus_dark} Army Morale{p}"
	//"{ks_stability.great_power:value:bonus_dark} Stability{p}"
	"{ks_influence.great_power:value:bonus_dark} Kingdom Influence{p}" //!!! upr delete
	"{ks_culture.great_power:value:bonus_dark} Culture{p}"] //!!! upr delete
	//"{ks_influence.great_power:value:bonus_dark:%} Kingdom Influence{p}" //!!! upr
	//"{ks_culture.great_power:value:bonus_dark:%} Culture{p}"] //!!! upr
	voice_line = "narrator_voice:we_are_great_power"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_WeAreGreatPower.tga:UI_Illustration_WeAreGreatPower#2" //GUID:9a1c14a6cbb8eae428269e52e89a2a33
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Rankings_Positive.png:Icon_Message_Rankings_Positive#2" //GUID:fdd6ebc3aef88a849ac98876429af0c8
	
	stack_priority = 50
}

def WeAreNotGreatPowerMessage : RankingsMessage
{
	caption = "We are no longer a great power"
	radio = "We are no longer a great power"
	category = "common"
	body = "The achievements of other kingdoms shine, while ours fade, thus we are no longer considered a great power."
	voice_line = "narrator_voice:we_are_not_great_power"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Rankings_Negative.png:Icon_Message_Rankings_Negative#2" //GUID:cd5c06ab8d3382244965d9ee94cee6ff
	
	stack_priority = 50
}

def RankingsWeAreLeadingRulerMessage : RankingsMessage
{
	stack_priority = 130
	category = "common"
	switch_value = (ranking_def_name)
	case RichesRanking
	{
		caption = "We are the wealthiest kingdom"
		radio = "We are the wealthiest kingdom"
		body = "Our economy surpasses those of all other kingdoms - no other treasury has such gold flow to it. We should be careful, though, many now envy our rich towns." //{p}{p}Ranking: {ranking_description}"
	}
	case TradePowerRanking
	{
		caption = "Our trade power is unmatched"
		radio = "Our trade power is unmatched"
		body = "We have the highest commercial potential and our trade is prospering. We should do our best that our skillful merchants make the best of this advantage." //{p}{p}Ranking: {ranking_description}"
	}
	case TradeMonopolyRanking
	{
		caption = "We hold the richest trade centers"
		radio = "We hold the richest trade centers"
		body = "Merchants from the whole world come to our prosperous trade centers, unmatched by those of any other kingdom. We should continue to protect them well and keep good relations with the neighboring kingdoms." //{p}{p}Ranking: {ranking_description}"
	}
	case ExpansionRanking
	{
		caption = "Our kingdom is the largest"
		radio = "Our kingdom is the largest"
		body = "No other kingdom rules territories vaster than ours and most of them rule just meager patches of land, compared to us." //{p}{p}Ranking: {ranking_description}"
	}
	case SupremacyRanking
	{
		caption = "We have the strongest army"
		radio = "We have the strongest army"
		body = "Our army and the preparations we have to enlarge it surpases those of any other kingdom and all our enemies tremble. None can face us, without the fear of his own destruction." //{p}{p}Ranking: {ranking_description}"
	}
	case DominationRanking
	{
		caption = "No one won as many wars as us"
		radio = "No one won as many wars as us"
		body = "All kingdoms now know that we fear not attack anyone and that we crush anyone in our path. They should have learned to either bow their heads to us or lose them." //{p}{p}Ranking: {ranking_description}"
	}
	case PietyRanking
	{
		caption = "We have the strongest faith"
		radio = "We have the strongest faith"
		body = "We are the most pious kingdom and our {kingdom.cleric_title:s} can quickly spread their influence over others. Our people are devoted and our holy places - popular among all piligrims." //{p}{p}Ranking: {ranking_description}"
	}
	case KnowledgeRanking
	{
		caption = "Our scholars are unmatched"
		radio = "Our scholars are unmatched"
		body = "Our knowledge grows fastest and we can quickly learn and improve new skills and traditions in whichever aspect we find most fitting." //{p}{p}Ranking: {ranking_description}"
	}
	case ProficiencyRanking
	{
		caption = "We are the wisest"
		radio = "We are the wisest kingdom of all"
		body = "The knights in our royal court are the most proficient and educated from all and the foreign noble seem like a mere simpletons, compared to them."
	}
	case StabilityRanking
	{
		caption = "Our kingdom is the most stable"
		radio = "Our kingdom is the most stable"
		body = "The stability of our kingdom is unmatched - the people simply love {plr_kingdom.king} and obey his every order."
	}
	case LeadershipRanking
	{
		caption = "We lead the most kingdoms"
		radio = "We lead the most kingdoms"
		body = "With the outstanding diplomacy we have, no other kingdom has risen to lead and rule over as many other kingdoms as we do."
	}
	case StatecraftRanking
	{
		caption = "We have the highest population"
		radio = "We have the highest population"
		body = "The population of our kingdom is the largest known from all kingdoms. Manpower gives us great advantage in hiring numerous soldiers and collecting considerable taxes." //{p}{p}Ranking: {ranking_description}"
	}
	// case ProsperityRanking
	// {
	// 	caption = "We are the most prosperous kingdom"
	// 	radio = "We are the most prosperous kingdom"
	// 	body = "The people in our kingdom are the happiest and the others can only envy our prosperity. This helps the population accept more easily the difficult decisions we sometimes have to take." //{p}{p}Ranking: {ranking_description}"
	// }
	case AgricultureRanking
	{
		caption = "We produce the most food"
		radio = "We produce the most food"
		body = "We hold fertile lands and thanks to our agricultural and stockfarming development, we are yielding the most food from them. Thus we are able to support a large army, without forcing the population to starve." //{p}{p}Ranking: {ranking_description}"
	}
	case FriendshipRanking
	{
		caption = "Our kingdom is the most respected"
		radio = "Our kingdom is the most respected"
		body = "No other kingdom has such good relations with the rest. We are a respected and preferred partner in all diplomatic aspects, which is beneficial for finding partners both in civil and military endeavours." //{p}{p}Ranking: {ranking_description}"
	}
	case ForeignAffairsRanking
	{
		caption = "We have the stongest diplomacy"
		radio = "We have the stongest diplomacy"
		body = "Our restless diplomats have made more beneficial arrangements and agreements than any other. We currently hold significance to so many kindgoms, that any kingdom would think twice, before ruining their relations with us." //{p}{p}Ranking: {ranking_description}"
	}
	case default
	{
		caption = "We are leading in ranking {ranking_name}"
		radio = "We are leading in ranking {ranking_name}"
		body = "We are still the leaders in '{ranking_name}' ranking."
	}
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Rankings_Positive.png:Icon_Message_Rankings_Positive#2" //GUID:fdd6ebc3aef88a849ac98876429af0c8
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_RankingsLeadingMessage.tga:UI_Illustration_RankingsLeadingMessage#2" //GUID:2d99682ee48950e4baac248a8d5c4e93
}

def RankingsBecameLeadingRulerMessage : RankingsWeAreLeadingRulerMessage
{
	//log = true
}

def RankingsLostLeadMessage : RankingsMessage
{
	category = "common"
	switch_value = (ranking_def_name)
	stack_priority = 130
	
	case RichesRanking
	{
		caption = "We are no longer wealthiest"
		radio = "We are no longer wealthiest"
		body = "Our economy is still very powerful, but now {top_kingdom} has even higher income. If we are to take the leadership again, we should think how to improve our income and trade." //{p}{p}Ranking: {ranking_description}"
	}
	case TradePowerRanking
	{
		caption = "Our trade power is surpassed"
		radio = "Our trade power is surpassed"
		body = "{top_kingdom} has impressive trade power, that now exceeds even ours. If we can build more structures, helpful for trade routes and local trade, we might become the leaders again." //{p}{p}Ranking: {ranking_description}"
	}
	case TradeMonopolyRanking
	{
		caption = "Others formed wealthier trade centers"
		radio = "Others formed wealthier trade centers"
		body = "The trade centers of {top_kingdom} are now preferred to ours, which were most popular up to the recent events." //{p}{p}Ranking: {ranking_description}"
	}
	case ExpansionRanking
	{
		caption = "Our kingdom is no longer the largest"
		radio = "Our kingdom is no longer the largest"
		body = "{top_kingdom} now rules more provinces than us and has become the largest kingdom. We should strengthen our expansion if we want to surpass them again." //{p}{p}Ranking: {ranking_description}"
	}
	case SupremacyRanking
	{
		caption = "We no longer have the strongest army"
		radio = "We no longer have the strongest army"
		body = "{top_kingdom} has now the strongest army and even we should be careful not to get in their way. However, if it comes to that, we might show them that numbers are often beaten by tactics and discipline." //{p}{p}Ranking: {ranking_description}"
	}
	case DominationRanking
	{
		caption = "A kingdom won more wars than us"
		radio = "A kingdom won more wars than us"
		body = "{top_kingdom} has now won the most wars, even more than us. However, we have proven our strength as well and yet our armies and leaders are well respected." //{p}{p}Ranking: {ranking_description}"
	}
	case PietyRanking
	{
		caption = "We no longer have the strongest faith"
		radio = "We no longer have the strongest faith"
		body = "{top_kingdom} now has the strongest faith, surpassing even ours. Our {kingdom.cleric_title:s} find this unacceptable and demand more funds from the treasury to be spent for pious purposes." //{p}{p}Ranking: {ranking_description}"
	}
	case KnowledgeRanking
	{
		caption = "A kingdom's knowledge surpasses ours"
		radio = "A kingdom's knowledge surpasses ours"
		body = "{top_kingdom} are now known to develop their knowledge fastest and we are no longer leaders in that, though we produce quite a lot of books." //{p}{p}Ranking: {ranking_description}"
	}
	
	case ProficiencyRanking
	{
		caption = "Others are wiser than us"
		radio = "Other kingdoms are wiser than us"
		body = "The knights in {top_kingdom} are better in their skills and traditions, though our noblemen receive excellent education as well. "
	}
	case StabilityRanking
	{
		caption = "A kingdom's stability exceeds ours"
		radio = "A kingdom's stability exceeds ours"
		body = "The stability of {top_kingdom} surpasses even ours, but we can hardly complain about the obedience of our people as well - they are quite satisfied with the crown's decisions."
	}
	case LeadershipRanking
	{
		caption = "We no longer lead the most kingdoms"
		radio = "We no longer lead the most kingdoms"
		body = "Though we still have strong diplomatic relations and control over other kingdoms, {top_kingdom} now surpasses our achievements in that direction."
	}
	case StatecraftRanking
	{
		caption = "We no longer have the highest population"
		radio = "We no longer have the highest population"
		body = "{top_kingdom} has now highest population count, even higher than ours. However, we know well that strategy can win over numbers in all aspects." //{p}{p}Ranking: {ranking_description}"
	}
	// case ProsperityRanking
	// {
	// 	caption = "We are no longer most prosperous"
	// 	radio = "We are no longer most prosperous"
	// 	body = "The people in {top_kingdom} are now the happiest from all and we are no longer known as the most prosperous kingdom. Yet our subjects are very content with the overall situation in {kingdom}." //{p}{p}Ranking: {ranking_description}"
	// }
	case AgricultureRanking
	{
		caption = "We no longer produce the most food"
		radio = "We no longer produce the most food"
		body = "{top_kingdom} now produces so much food, that even we can envy their marvelous agriculture and stockfarming. We are still producing quite a lot ourselves, though." //{p}{p}Ranking: {ranking_description}"
	}
	case FriendshipRanking
	{
		caption = "We are no longer the most respected"
		radio = "We are no longer the most respected"
		body = "No other kingdom has such a good relations with the rest as {top_kingdom} - not even us. They are extremely respected and well supported, though also have good foreign relations." //{p}{p}Ranking: {ranking_description}"
	}
	case ForeignAffairsRanking
	{
		caption = "We no longer have the best diplomacy"
		radio = "We no longer have the best diplomacy"
		body = "{top_kingdom} now has the most diplomatic agreements with other kingdoms, even more than us. We might surpass them if we make more pacts, but we shoud try only if they are really beneficial to us." //{p}{p}Ranking: {ranking_description}"
	}
	case default
	{
		caption = "We lost leadership in {ranking_name}"
		radio = "We lost leadership in {ranking_name}"
		body = "We lost our leadership in '{ranking_name}' ranking. {top_kingdom:ians} are now the leaders." //{p}{p}Ranking: {ranking_description}"
	}
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Rankings_Negative.png:Icon_Message_Rankings_Negative#2" //GUID:cd5c06ab8d3382244965d9ee94cee6ff
}

def RankingsTheyAreLeadingRulerMessage : RankingsMessage
{
	category = "common"
	switch_value = (ranking_def_name)
	stack_priority = 190
	
	// [{in_top_perc_X:if} text]
	// or
	// switch_value = (in_top_perc_X)
	// case 1 {...} // true
	// case default {...} // false
	
	case RichesRanking
	{
		caption = "{kingdom} is the wealthiest kingdom"
		radio = "{kingdom} is the wealthiest kingdom"
		body = "{kingdom:ians} have the highest gold income and are the biggest financial power.[{in_top_perc_X:if} We are doing quite well financially too and soon might take their place.][{in_mid_perc_X:if} Our income is not that impressive, but we are doing well.][{in_bottom_perc_X:if} We, however, are as poor as church mice. We need to increase our income!]" //{p}{p}Ranking: {ranking_description}"
	}
	case TradePowerRanking
	{
		caption = "{kingdom:s} trade power is unmatched"
		radio = "{kingdom:s} trade power is unmatched"
		body = "{kingdom:ians} have impressive trade power, surpassing that of all other kingdoms.[{in_top_perc_X:if} Our merchants report that if we explore some more profitable opportunities, we might surpass them, though.][{in_mid_perc_X:if} We have some commercial power, but it cannot be compared to theirs.][{in_bottom_perc_X:if} We, however, are terrible at trading.]" //{p}{p}Ranking: {ranking_description}"
	}
	case TradeMonopolyRanking
	{
		caption = "{kingdom} holds the most profitable trade centers"
		radio = "{kingdom} holds the most profitable trade centers"
		body = "The trade centers of {kingdom} are the most profitable.[{in_top_perc_X:if} If we improve ours, one day we may win as much trade as they do.][{in_mid_perc_X:if}][{in_bottom_perc_X:if} Such trade centers are but a dream to our kingdom right now.]{p}{p}Ranking: {ranking_description}"
	}
	case ExpansionRanking
	{
		caption = "{kingdom} is the largest kingdom"
		radio = "{kingdom} is the largest kingdom"
		body = "{kingdom} is the largest kingdom: They rule more provinces than anyone else.[{in_top_perc_X:if} We have quite a big empire as well.][{in_mid_perc_X:if} Compared to theirs, our kingdom's territory seems insignificant, though we have few provinces.][{in_bottom_perc_X:if} We, however, are so small they probably don't even notice us when inspecting the maps.]" //{p}{p}Ranking: {ranking_description}"
	}
	case SupremacyRanking
	{
		caption = "{kingdom} has the strongest army"
		radio = "{kingdom} has the strongest army"
		body = "{kingdom:ians} now have the strongest army.[{in_top_perc_X:if} Our military power is also impressive though and, with some luck, it might even prevail over theirs.][{in_mid_perc_X:if} Our modest army would be no challenge for theirs.][{in_bottom_perc_X:if} We should be careful not to get in their way. They would crush our meager armies in a day.]" //{p}{p}Ranking: {ranking_description}"
	}
	case DominationRanking
	{
		caption = "No one won as many wars as {kingdom}"
		radio = "No one won as many wars as {kingdom}"
		body = "{kingdom} has now won the most wars. The other kingdoms crumble in their feet.[{in_top_perc_X:if} We can say the same for ours.][{in_bottom_perc_X:if} Our more diplomatic approach might be effective, but isn't nearly so impressive to others.]" //{p}{p}Ranking: {ranking_description}"
	}
	case PietyRanking
	{
		caption = "{kingdom} has the strongest faith"
		radio = "{kingdom} has the strongest faith"
		body = "{kingdom} now has the strongest faith – they are very devoted and have countless religious establishments.[{in_top_perc_X:if} Our kingdom is also very pious, and almost rivals theirs.][{in_mid_perc_X:if} We have some religious stability and establishments, but are not nearly that influential.][{in_bottom_perc_X:if} We, compared to other kingdoms, seem to not care about religion at all.]" //{p}{p}Ranking: {ranking_description}"
	}
	case KnowledgeRanking
	{
		caption = "{kingdom:ian} scholars are unmatched"
		radio = "{kingdom:ian} scholars are unmatched"
		body = "{kingdom:ians} are now known to develop their knowledge fastest, thus their knights are the most proficient in their professions.[{in_top_perc_X:if} We are not far behind them, though: Our education and literacy is quite well developed.][{in_mid_perc_X:if} We also have good education and literacy, though far from impressive.][{in_bottom_perc_X:if} We probably look like uneducated brutes to their eyes.]" //{p}{p}Ranking: {ranking_description}"
	}
	case StatecraftRanking
	{
		caption = "{kingdom} has the highest population"
		radio = "{kingdom} has the highest population"
		body = "{kingdom} now has the highest population count.[{in_top_perc_X:if} Our population is quite large as well, though not as colossal as theirs.][{in_mid_perc_X:if} We have far fewer citizens, though not so few as other kingdoms.][{in_bottom_perc_X:if} The few subjects of our small kingdom can hardly imagine such a colossal population.]" //{p}{p}Ranking: {ranking_description}"
	}
	case ProficiencyRanking
	{
		caption = "{kingdom:ians} are the wisest"
		radio = "{kingdom:ians} are the wisest"
		body = "The traditions of {kingdom} and the skillfulness of their knights are really impressive.[{in_top_perc_X:if} Our proficiency is really high as well.][{in_mid_perc_X:if} Our knights are also somewhat proficient in what they do, but there is room for improvement.][{in_bottom_perc_X:if} Compared to them, the situation in {plr_kingdom} is tragic. No one seems to have any idea what they are doing.]"
	}
	case StabilityRanking
	{
		caption = "{kingdom} is the most stable kingdom"
		radio = "{kingdom} is the most stable kingdom"
		body = "The people of {kingdom} are very orderly and follow the commands of their king as no other.[{in_top_perc_X:if} People in {plr_kingdom} are also calm and trust our king.][{in_mid_perc_X:if} We cannot say the same for {plr_kingdom}, but things could be worse.][{in_bottom_perc_X:if} In contrast, people in {plr_kingdom} are quite displeased and many of them would gladly join a rebellion.]"
	}
	case LeadershipRanking
	{
		caption = "{kingdom} leads the most kingdoms"
		radio = "{kingdom} leads the most kingdoms"
		body = "With their astonishing diplomacy and military power, {kingdom} now leads and rules over many others.[{in_top_perc_X:if} We have almost as much influence as them.][{in_mid_perc_X:if} We have nothing to brag about in that regard, but we still have some kingdoms that would aid us in times of trouble.][{in_bottom_perc_X:if} On the contrary, our diplomacy is weak and no one seems to be willing to follow our leadership in anything.]"
	}
	// case ProsperityRanking
	// {
	// 	caption = "{kingdom} is the most prosperous kingdom"
	// 	radio = "{kingdom} is the most prosperous kingdom"
	// 	body = "The people in {kingdom} are now the happiest from all and surely they are praised as the most prosperous kingdom.[{in_top_perc_X:if} We are doing quite well ourselves - our towns thrive!][{in_mid_perc_X:if} We are not doing that good, but not bad either - people are content.][{in_bottom_perc_X:if} Sadly, the opposite is true for our kingdom.]" //{p}{p}Ranking: {ranking_description}"
	// }
	case AgricultureRanking
	{
		caption = "{kingdom:ians} produce the most food"
		radio = "{kingdom:ians} produce the most food"
		body = "{kingdom:ians} produce the most food with well developed agriculture and stock-farming, as well as abundant lands.[{in_top_perc_X:if} Our food production is almost as impressive as theirs.][{in_mid_perc_X:if} Our food production is not bad either, though nothing to brag about.][{in_bottom_perc_X:if} We, however, barely produce any food.]" //{p}{p}Ranking: {ranking_description}"
	}
	case FriendshipRanking
	{
		caption = "{kingdom} is the most respected"
		radio = "{kingdom} is the most respected"
		body = "No other kingdom has such good relations with the others as {kingdom}. They are extremely respected and well supported.[{in_top_perc_X:if} We have quite favorable relations with the other kingdoms as well.][{in_mid_perc_X:if} Our foreign relations, however, are just mediocre.][{in_bottom_perc_X:if} The opposite is true of us: We are roundly despised and distrusted by the other kingdoms.]" //{p}{p}Ranking: {ranking_description}"
	}
	case ForeignAffairsRanking
	{
		caption = "{kingdom:ians} have the best diplomacy"
		radio = "{kingdom:ians} have the best diplomacy"
		body = "{kingdom} now has the most diplomatic agreements with other kingdoms.[{in_top_perc_X:if} Our diplomatic affairs are almost as well developed as theirs, though.][{in_mid_perc_X:if} We have some good agreements established, but not nearly as many.][{in_bottom_perc_X:if} We, on the other hand, seem to have no interest in foreign affairs whatsoever.]" //{p}{p}Ranking: {ranking_description}"
	}
	case default
	{
		caption = "{kingdom:ians} are leading in ranking {ranking_name}"
		radio = "{kingdom:ians} are leading in ranking {ranking_name}"
		body = "{kingdom:ians} are leaders in '{ranking_name}' ranking.[{in_top_perc_X:if} We are doing well ourselves and one day we may be in their place.][{in_bottom_perc_X:if} We, however, have nothing to be proud of in that direction.]" //{p}{p}Ranking: {ranking_description}"
	}
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Rankings_Neutral.png:Icon_Message_Rankings_Neutral#2" //GUID:3212901e2cada6144b5d7c84870b8b6b
}

def ArmyHungerWarningMessage : OkGotoMessage
{
	show_filter_id = "notification_army_is_starving"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_GenericEvent_Negative.png:Icon_Message_GenericEvent_Negative#2" //GUID:f955d92cf71058746985a61f90487bb9
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_ReminderMessage.tga:UI_Illustration_ReminderMessage#2" //GUID:e888028b717208740a51e441c5ba172e
	caption = "Army supply shortage"
	body = "Sire, {army.leader:s} army supplies are worryingly low!"
	voice_line = "narrator_voice:army_hunger_warning"
	category = "military"
	
	stack_group = "KingdomOpportunity"
	stack_priority = 150
	separate_stack = true
}

def ArmyStarvingMessage : OkGotoMessage
{
	show_filter_id = "notification_army_is_starving"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_GenericEvent_Negative.png:Icon_Message_GenericEvent_Negative#2" //GUID:f955d92cf71058746985a61f90487bb9
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_ReminderMessage.tga:UI_Illustration_ReminderMessage#2" //GUID:e888028b717208740a51e441c5ba172e
	caption = "Army is out of supplies"
	body = "Sire, {army.leader:s} army has no supplies at all!"
	voice_line = "narrator_voice:army_starving"
	
	stack_group = "KingdomOpportunity"
	stack_priority = 120
	separate_stack = true
}

def OwnLoyalistRebellionStartedMessage : OkGotoMessage
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Rebels_Positive.png:Icon_Message_Rebels_Positive#2" //GUID:98c851dbe2b371d48b23e62c5cd7310e
	caption = "Our loyalist rebellion has appeared"
	body = "Sire, a rebellion loyal to our kingdom has appeared in {rebellion.origin_realm}. They will fight for our crown and attempt to liberate {rebellion.loyal_to:s} lands from the clutches of hostile kingdoms."
	
	stack_group = "RebelsRiseAndFall"
	category = "military"
	stack_priority = 120
	separate_stack = true
}

def OurLoyalistRebellionReinforcedMessage : OkGotoMessage
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Rebels_Positive.png:Icon_Message_Rebels_Positive#2" //GUID:98c851dbe2b371d48b23e62c5cd7310e
	caption = "Our loyalist rebellion was reinforced"
	body = "Our loyalists led by {rebellion.leader} have gained the support of an additional rebel army! Now, {rebellion.origin_realm} and the lands around it will feel the presence of our people even more."
	
	separate_stack = true
	stack_priority = 120
	stack_group = "RebelsRiseAndFall"
	
	category = "military"
}

def PopMajorityKingdomChanged : OkGotoMessage
{
	caption = "Population's loyalty changed"
	stack_group = "OurSmallChanges"
	stack_priority = 50
	separate_stack = true
	
	case we_converted_own_kingdom = (player = kingdom and realm.kingdom = player)
	{
		body = "The people in {realm} now see they will live better under our rulership and the local nobility pledged their loyalty to us.[ We have {converting_cleric} to thank for calming our people and helping them understand and cherish {converting_cleric.kingdom:ian} traditions and values.]"
		voice_line = "narrator_voice:province_loyal_to_us"
		sprite icon = "Assets/UI/Elements/msg_icons/Icon_Message_Population_Positive.png:Icon_Message_Population_Positive#2" //GUID:cec01322685fc60459994cbb8e1b06ce
		illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_OurPopMajoritySpread.tga:UI_Illustration_OurPopMajoritySpread#2" //GUID:3bbd86f77cec4254793d87a744633420
	}
	
	case we_converted_foreign_kingdom = (player = kingdom and realm.kingdom != player)
	{
		body = "The people in {realm} admire our kingdom and would rather be our subjects. If our armies march there, they will accept us with bread and salt."
		voice_line = "narrator_voice:province_loyal_to_us"
		sprite icon = "Assets/UI/Elements/msg_icons/Icon_Message_Population_Positive.png:Icon_Message_Population_Positive#2" //GUID:cec01322685fc60459994cbb8e1b06ce
		illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_OurPopMajoritySpread.tga:UI_Illustration_OurPopMajoritySpread#2" //GUID:3bbd86f77cec4254793d87a744633420
	}
	
	case they_converted_our_kingdom = (player != kingdom and realm.kingdom = player)
	{
		body = "The people in {realm} are discontent with our rulership and the local nobility secretly pledged their allegiance to {kingdom}."
		voice_line = "narrator_voice:foreign_pop_majority_in_our_province"
		sprite icon = "Assets/UI/Elements/msg_icons/Icon_Message_Population_Negative.png:Icon_Message_Population_Negative#2" //GUID:22a3f89d8457b324ca05540226adeb69
		illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_ForeignPopMajoritySpread.tga:UI_Illustration_ForeignPopMajoritySpread#2" //GUID:450cf3feef1a9994fb7bcb8e61ac37ba
	}
	
	default
	{
		caption = null
	}
}

def PopMajorityCultureChanged : OkGotoMessage
{
	caption = "Population's culture converted"
	
	stack_group = "OurSmallChanges"
	stack_priority = 50
	separate_stack = true
	
	case we_converted_own_kingdom = (player = kingdom and realm.kingdom = player)
	{
		body = "The people of our province, {realm}, have finally adopted our culture and now most of them follow our traditions, etiquette and speak our language.[ This wouldn't have happened so quickly without the great efforts of {converting_cleric}, bolstering our culture.]"
		voice_line = "narrator_voice:our_culture_has_spread"
		sprite icon = "Assets/UI/Elements/msg_icons/Icon_Message_Culture_Positive.png:Icon_Message_Culture_Positive#2" //GUID:6af07af33709e6347afcc922e342abb5
		sprite illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_OurCultureSpread.tga:UI_Illustration_OurCultureSpread#2" //GUID:1e75a34c928671d43a2ec8a913b31f2b
	}
	
	case we_converted_foreign_kingdom = (player = kingdom and realm.kingdom != player)
	{
		body = "The people of the neighboring province {realm} are substantially influenced by our admirable culture and now most of them prefer to follow our traditions and etiquette."
		voice_line = "narrator_voice:our_culture_has_spread"
		sprite icon = "Assets/UI/Elements/msg_icons/Icon_Message_Culture_Positive.png:Icon_Message_Culture_Positive#2" //GUID:6af07af33709e6347afcc922e342abb5
		sprite illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_OurCultureSpread.tga:UI_Illustration_OurCultureSpread#2" //GUID:1e75a34c928671d43a2ec8a913b31f2b
	}
	
	case they_converted_our_kingdom = (player != kingdom and realm.kingdom = player)
	{
		body = "The people of our province {realm} have adopted the {kingdom.culture_name} culture of {kingdom} and now act as if they are ashamed to call themselves {realm.kingdom:ians}!"
		voice_line = "narrator_voice:foreign_culture_has_spread_to_our_province"
		sprite icon = "Assets/UI/Elements/msg_icons/Icon_Message_Culture_Negative.png:Icon_Message_Culture_Negative#2" //GUID:6c193007dd0ccc14e946d912493c3a83
		sprite illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_ForeignCultureSpread.tga:UI_Illustration_ForeignCultureSpread#2" //GUID:b28c175e2926e804f9074417542c9d7d
	}
	
	default
	{
		caption = null
	}
}

def GoodImportEndedStartedProduction : Message
{
	caption = "{produced_good} is no longer imported"
	body = "Sire, our builders in {realm} have done fine work and we are now producing {produced_good}! To ease our efforts, {merchant} has stopped importing the good from {merchant.mission_kingdom}."
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_GenericEvent_Neutral.png:Icon_Message_GenericEvent_Neutral#2" //GUID:d1b257a397cd3e2409cb96b95cb01190
}

def GoodImportEndedProductionStopped : Message
{
	caption = "{produced_good} is no longer imported"
	body = "My lord, we've received news that {merchant.mission_kingdom} has stopped producing {produced_good}. As a result, {merchant} no longer imports the good."
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_GenericEvent_Neutral.png:Icon_Message_GenericEvent_Neutral#2" //GUID:d1b257a397cd3e2409cb96b95cb01190
}


////////////////////////////////// Radio messages

def GameStartedMessage : Message
{
	radio = "Campaign Started!"
	category = "common"
	drop_down = false
	important = 2
}

def GameLoadedMessage : Message
{
	radio = "Campaign Loaded!"
	category = "common"
	drop_down = false
	important = 2
}

//----------------------------- Start / join war messages

def WarDeclaredMessage : Message
{
	radio = "{kingdom_a} declared war on {kingdom_b}!"
	drop_down = false
	important = 2
	category = "military"
}

def WarProvokedMessage : Message
{
	radio = "{kingdom_a} managed to convince {kingdom_b} to attack {kingdom_c}"
	log = true
	drop_down = false
	category = "military"
}

def DemandAttackKingdomMessage : Message
{
	radio = "{kingdom_a} managed to convince {kingdom_b} to attack {kingdom_c}"
	drop_down = false
	category = "military"
}

def KingdomDeclaredIndependenceMessage : Message
{
	radio = "{kingdom_a} declared independence and is no longer a vassal of {kingdom_b}"
	drop_down = false
	category = "diplomacy"
}

// def InvokeAllianceMessage : Message
// {
// 	caption = "{kingdom_a} invoked their alliance with {kingdom_b} to attack {kingdom_c}"
// 	log = true
// 	drop_down = false
// }

def SummonVassalMessage : Message
{
	radio = "{kingdom_a} convinced their vassal, {kingdom_b}, to attack {kingdom_c}"
	drop_down = false
	category = "military"
}

def AskForProtectionMessage : Message
{
	radio = "{kingdom_a} convinced their sovereign, {kingdom_b}, to attack {kingdom_c}"
	drop_down = false
	category = "military"
}

//----------------------------- End / leave war messages
//!!! {tributes} is not implemented, will be something like "500 gold, the province of Karvuna and Vassalage"

// leaders signed any peace
def LeadersSignedPeacePlayerIsSupporterMessage : Message
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_WarEvent_Neutral.png:Icon_Message_WarEvent_Neutral#2" //GUID:953650b2e03366e4f84ab701d0e5ef74
	caption = "War against {plr_enemy} has ended!"
	body = "Sire, we received news that {plr_leader} and {plr_enemy} have signed a peace treaty. [Our armies may rest, as this also puts an end to our war against {plr_enemy_supporters}.]"
	//voice_line = "narrator_voice:war_ended_white_peace" //Sounds.def 
	
	stack_priority = 10
	stack_group = "WarInvolvement"
	separate_stack = true
}

// leaders signed white peace
def PeaceSignedMessage : Message
{
	radio = "The war between {kingdom_a} and {kingdom_b} ended in peace"
	drop_down = false
	important = 2
	category = "military"
}

// leaders signed peace with tributes, {kingdom_a} is the loser, {kingdom_b} is the winner
def LostWarMessage : Message
{
	radio = "{kingdom_a} lost the war against {kingdom_b}[. They offered {tributes} as a tribute]"
	drop_down = false
	important = 2
	category = "military"
}

// separative white peace, {kingdom_a} is the supporter, {kingdom_b} is the enemy leader, {kingdom_c} is the supported leader
def SupporterPeaceSignedMessage : Message
{
	radio = "{kingdom_a} signed separative peace with {kingdom_b} and no longer supports {kingdom_c}"
	drop_down = false
	category = "military"
}

// separative peace (won), {kingdom_a} is the supporter, {kingdom_b} is the enemy leader, {kingdom_c} is the supported leader
def SupporterLostWarMessage : Message
{
	radio = "{kingdom_a} signed separative peace with {kingdom_b} and no longer supports {kingdom_c}[. They offered {tributes} as a tribute]"
	drop_down = false
	category = "military"
}

// separative peace (won), {kingdom_a} is the supporter, {kingdom_b} is the enemy leader, {kingdom_c} is the supported leader
def SupporterWonWarMessage : Message
{
	radio = "{kingdom_a} signed separative peace with {kingdom_b} and no longer supports {kingdom_c}[. They took {tributes} as a tribute]"
	drop_down = false
	category = "military"
}

// obsolete?
def EndWarAndTakeWhatsOursMessage : Message
{
	caption = "Provinces gained"
	body = "Sire, we successfully overtook {realms_gained} from {to}.[ We couldn't enforce our rulership over {realms_lost} and these lands are now back under theirs control.]"
	list = "realms_gained"
	{
		final_separator = " and "
	}
	list2 = "realms_lost"
	{
		final_separator = " and "
	}
}

//----------------------------- Join war radio

def SupporterJoinedWarMessage : Message
{
	radio = "{kingdom_a} joined {kingdom_b} in their war against {kingdom_c}"
	drop_down = false
	category = "military"
}

def SupporterJoinedJihadMessage : Message
{
	radio = "{kingdom_a} joined {kingdom_b} in their jihad against {kingdom_c}"
	drop_down = false
	important = 2
	category = "military"
}

//----------------------------- Join war messages

def SupporterJoinedUsInWarPlayerIsSupporterMessage : Message
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_WarEvent_Positive.png:Icon_Message_WarEvent_Positive#2" //GUID:cf2d3a3c38001314ab1afd078292f07a
	caption = "{kingdom} joined our war against {plr_enemy}!"
	body = "Sire, we've gained the support of {kingdom} in our war against {plr_enemy}. Our enemies are trembling at the sight of our combined forces!"
	
	case war_is_jihad = (is_jihad)
	{
		case supporter_is_muslim = (kingdom.is_muslim)
		{
			voice_line = "narrator_voice:our_jihad_gained_muslim_ally"
		}
		case default
		{
			voice_line = "narrator_voice:our_jihad_gained_non_muslim_ally"
		}
	}
	case default
	{
		voice_line = "narrator_voice:our_war_gained_ally"
	}
	
	
	stack_priority = 60
	stack_group = "WarInvolvement"
	separate_stack = true
}

def SupporterJoinedEnemyInWarPlayerIsLeaderMessage : Message
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_WarEvent_Negative.png:Icon_Message_WarEvent_Negative#2" //GUID:f343a8693a9dc1d479591842d3ee683e
	caption = "{kingdom} joined war against us!"
	body = "Sire, {kingdom} has joined {plr_enemy} as a supporter and is now fighting alongside them against us!"
	voice_line = "narrator_voice:ally_joined_their_war"
	
	stack_priority = 50
	stack_group = "WarInvolvement"
	separate_stack = true
}

def SupporterJoinedEnemyInWarPlayerIsSupporterMessage : Message
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_WarEvent_Negative.png:Icon_Message_WarEvent_Negative#2" //GUID:f343a8693a9dc1d479591842d3ee683e
	caption = "{kingdom} joined war against us!"
	body = "Sire, {kingdom} has joined our enemy, {plr_enemy}! We shouldn't loosen our support of {plr_leader}, now that our enemies are stronger."
	voice_line = "narrator_voice:ally_joined_their_war"
	
	stack_priority = 60
	stack_group = "WarInvolvement"
	separate_stack = true
}

//----------------------------- Leave war messages

def SupporterLeftUsInWarPlayerIsLeaderMessage : Message
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_WarEvent_Negative.png:Icon_Message_WarEvent_Negative#2" //GUID:f343a8693a9dc1d479591842d3ee683e
	caption = "{kingdom} left our war against {plr_enemy}!"
	body = "The backstabbing {kingdom:ians} broke our alliance! Somehow, they managed to sign separative peace with {plr_enemy}!"
	voice_line = "narrator_voice:our_war_lost_ally"
	
	stack_priority = 50
	stack_group = "WarInvolvement"
	separate_stack = true
}

def SupporterLeftUsInWarPlayerIsSupporterMessage : Message
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_WarEvent_Negative.png:Icon_Message_WarEvent_Negative#2" //GUID:f343a8693a9dc1d479591842d3ee683e
	caption = "{kingdom} left our war against {plr_enemy}!"
	body = "{kingdom} broke our alliance with {plr_leader} by signing separative peace with {plr_enemy}! Let this be a reminder that {kingdom:ians} shouldn't be trusted."
	voice_line = "narrator_voice:our_war_lost_ally"
	
	stack_priority = 60
	stack_group = "WarInvolvement"
	separate_stack = true
}

def SupporterLeftEnemyInWarPlayerIsSupporterMessage : Message
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_WarEvent_Positive.png:Icon_Message_WarEvent_Positive#2" //GUID:cf2d3a3c38001314ab1afd078292f07a
	caption = "{kingdom} left the war against us!"
	body = "Our enemy has been weakened! {plr_enemy:s} former supporter, {kingdom}, signed separative peace with {plr_leader} and is no longer our enemy."
	voice_line = "narrator_voice:ally_left_their_war"
	
	stack_priority = 60
	stack_group = "WarInvolvement"
	separate_stack = true
}

//----------------------------- Pact messages

def DefensivePactHonoredMessage : Message
{
	radio = "{kingdom_a} honored their Defensive Pact and joined {kingdom_b} in the war against {kingdom_c}!"
	drop_down = false
	category = "military"
}

def OffensivePactHonoredMessage : Message
{
	radio = "{kingdom_a} honored their Invasion Plan and joined {kingdom_b} in the war against {kingdom_c}!"
	drop_down = false
	category = "military"
}

def LeavePactConfirmationMessage : Message
{
	caption = "Leave Pact?"
	body = "Are you sure we want to leave {obj}?"
	buttons
	{
		text ok = "&Leave"
		text close = "&Nevermind"
	}
}

def DissolvePactConfirmationMessage : Message
{
	caption = "Dissolve Pact?"
	body = "Are you sure we want to dissolve {pact}?"
	buttons
	{
		text ok = "&Dissolve"
		text close = "&Nevermind"
	}
}

//----------------------------- Pact messages
// the message id is the concatenation of the following:
//   Defensive|Offensive
//   Pact
//   Created|Joined|Left[ByWar]|Dissolved[ByWar/OwnerImprisoned/OwnerRebelled/OwnerExiled/OwnerDeserted/OwnerDied]|Activated
//   PlayerIs
//   Leader|Target|TheKingdom|Supporter|NotInvolved
//   [Rumor]
//   Message
// variables for all except "Activated":
//   pact - the Pact
//   kingdom - the kingdom who joined / left the pact
//   spy - player kingdom's spy in one of the pact members
// variables for "Activated":
//   obj - the war which activated the pact

template PactMessage : Message
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_GenericEvent_Neutral.png:Icon_Message_GenericEvent_Neutral#2" //GUID:d1b257a397cd3e2409cb96b95cb01190
	stack_group = "PactsStackgroup"
	separate_stack = true
	stack_priority = 80
}

template PactRadioMessage : PactMessage
{
	drop_down = false
	category = "diplomacy"
}

// PactCreated

def DefensivePactCreatedPlayerIsTargetMessage : PactMessage
{
	caption = "Defensive Pact against us created!"
	body = "Sire, word has spread that {pact.owner} of {pact.leader} has created {pact:an} and is now looking for supporters."
	voice_line = "narrator_voice:defensive_pact_against_us_created"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Diplomacy_Angry.tga:UI_Illustration_Diplomacy_Angry#2" //GUID:29ecc7241bf12374782bfcb34c81c578
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TheirDefensivePact_Negative.png:Icon_Message_TheirDefensivePact_Negative#2" //GUID:b931639be44bbfa41bb6311ee0a7e383
}

def DefensivePactCreatedPlayerIsNotInvolvedMessage : PactRadioMessage //too much info? Consider!!!
{
	radio = "{pact.owner} of {pact.leader} created {pact:an}"
}

def OffensivePactCreatedPlayerIsTargetRumorMessage : PactMessage
{
	caption = "{pact.leader} plans to invade us!"
	body = "Sire, troubling news has reached us... {spy} discovered that {pact.owner} of {pact.leader} is organizing {pact:an}!"
	voice_line = "narrator_voice:invasion_plan_against_us_created"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Diplomacy_Angry.tga:UI_Illustration_Diplomacy_Angry#2" //GUID:29ecc7241bf12374782bfcb34c81c578
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TheirInvasionPlan_Negative.png:Icon_Message_TheirInvasionPlan_Negative#2" //GUID:46d4f96303da61b48a739303a4d36549
}

def OffensivePactRevealedPlayerIsTargetRumorMessage : OffensivePactCreatedPlayerIsTargetRumorMessage
{
}

def OffensivePactCreatedPlayerIsNotInvolvedRumorMessage : PactMessage
{
	caption = "{pact.leader} plans to invade {pact.target}!"
	body = "Sire, thanks to {spy:s} dilligent eavesdropping we've discovered that {pact.owner} of {pact.leader} has started {pact:an}."
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_SpyRumors.tga:UI_Illustration_SpyRumors#2" //GUID:d9eacb331a1416845b9c68d76b504c5a
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_InvasionPlan_Neutral.png:Icon_Message_InvasionPlan_Neutral#2" //GUID:8b92825205a00b04595b4373754d3cdb
}

// PactJoined

def DefensivePactJoinedPlayerIsTargetMessage : PactMessage
{
	caption = "Defensive Pact against us strengthened!"
	body = "{kingdom} has joined the {pact} led by {pact.leader}! Our armies must be rather intimidating, if so many kingdoms wish to band against us..."
	voice_line = "narrator_voice:supporter_joined_defensive_pact_against_us"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Diplomacy_Angry.tga:UI_Illustration_Diplomacy_Angry#2" //GUID:29ecc7241bf12374782bfcb34c81c578
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TheirDefensivePact_Negative.png:Icon_Message_TheirDefensivePact_Negative#2" //GUID:b931639be44bbfa41bb6311ee0a7e383
	
	stack_priority = 70
}

def DefensivePactJoinedPlayerIsSupporterMessage : PactMessage
{
	caption = "{kingdom} joined our Defensive Pact"
	body = "{pact.leader:s} {pact} grows stronger, as {kingdom} has joined our ranks!"
	voice_line = "narrator_voice:our_defensive_pact_gained_supporter"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurDefensivePact_Positive.png:Icon_Message_OurDefensivePact_Positive#2" //GUID:3cc1055696e230b499984365ad8a5aa1
	
	stack_priority = 100
}

def DefensivePactJoinedPlayerIsNotInvolvedMessage : PactRadioMessage
{
	radio = "{kingdom} joined {pact.leader} in their {pact}"
}

def OffensivePactJoinedPlayerIsTargetRumorMessage : PactMessage
{
	caption = "Invasion Plan against us strengthened!"
	body = "{spy} uncovered that {kingdom} has joined {pact.leader:s} {pact}! We must prepare for war."
	voice_line = "narrator_voice:supporter_joined_invasion_plan_against_us"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Diplomacy_Angry.tga:UI_Illustration_Diplomacy_Angry#2" //GUID:29ecc7241bf12374782bfcb34c81c578
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TheirInvasionPlan_Negative.png:Icon_Message_TheirInvasionPlan_Negative#2" //GUID:46d4f96303da61b48a739303a4d36549
	
	stack_priority = 70
}

def OffensivePactJoinedPlayerIsSupporterMessage : PactMessage
{
	caption = "{kingdom} joined our Invasion Plan"
	body = "Our {pact} has grown stronger, as {kingdom} has joined our ranks!"
	voice_line = "narrator_voice:our_invasion_plan_gained_supporter"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurInvasionPlan_Positive.png:Icon_Message_OurInvasionPlan_Positive#2" //GUID:88f552ed366e0b94f9fb4037e47acc66
	
	stack_priority = 90
}

// PactLeft

def DefensivePactLeftPlayerIsTargetMessage : PactMessage
{
	caption = "Defensive Pact against us weakened"
	body = "{kingdom} no longer supports {pact.leader:s} Defensive Pact against us."
	voice_line = "narrator_voice:supporter_left_defensive_pact_against_us"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TheirDefensivePact_Positive.png:Icon_Message_TheirDefensivePact_Positive#2" //GUID:233c81d07b9f88c44b6e4c1201be0e25
}

def DefensivePactLeftPlayerIsLeaderMessage : PactMessage
{
	caption = "{kingdom} left our Defensive Pact"
	body = "{kingdom} no longer supports our Defensive Pact against {pact.target}."
	voice_line = "narrator_voice:our_defensive_pact_lost_supporter"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Diplomacy_Angry.tga:UI_Illustration_Diplomacy_Angry#2" //GUID:29ecc7241bf12374782bfcb34c81c578
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurDefensivePact_Negative.png:Icon_Message_OurDefensivePact_Negative#2" //GUID:6de50acddf735fe429011cf89a47be12
}

def DefensivePactLeftPlayerIsSupporterMessage : PactMessage
{
	caption = "{kingdom} left our Defensive Pact"
	body = "{kingdom} no longer supports {pact.leader:s} Defensive Pact against {pact.target}."
	voice_line = "narrator_voice:our_defensive_pact_lost_supporter"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Diplomacy_Angry.tga:UI_Illustration_Diplomacy_Angry#2" //GUID:29ecc7241bf12374782bfcb34c81c578
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurDefensivePact_Negative.png:Icon_Message_OurDefensivePact_Negative#2" //GUID:6de50acddf735fe429011cf89a47be12
}

def DefensivePactLeftPlayerIsNotInvolvedMessage : PactRadioMessage
{
	radio = "{kingdom} has left {pact.leader:s} {pact}"
}

def OffensivePactLeftPlayerIsTargetRumorMessage : PactMessage
{
	caption = "Invasion Plan against us weakened"
	body = "{spy} reported news that {kingdom} no longer supports {pact.leader:s} {pact}."
	voice_line = "narrator_voice:supporter_left_invasion_plan_against_us"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_SpyRumors.tga:UI_Illustration_SpyRumors#2" //GUID:d9eacb331a1416845b9c68d76b504c5a
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TheirInvasionPlan_Positive.png:Icon_Message_TheirInvasionPlan_Positive#2" //GUID:39741b65f5315024081c7d52a0e1212a
}

def OffensivePactLeftPlayerIsLeaderMessage : PactMessage
{
	caption = "{kingdom} left our Invasion Plan"
	body = "{kingdom} has left our {pact}! We were wrong to think they can be trusted."
	voice_line = "narrator_voice:our_invasion_plan_lost_supporter"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Diplomacy_Angry.tga:UI_Illustration_Diplomacy_Angry#2" //GUID:29ecc7241bf12374782bfcb34c81c578
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurInvasionPlan_Negative.png:Icon_Message_OurInvasionPlan_Negative#2" //GUID:8f82aa15bc15757408e57a5af2c99eaa
	
	stack_priority = 70
}

def OffensivePactLeftPlayerIsSupporterMessage : PactMessage
{
	caption = "{kingdom} left our Invasion Plan"
	body = "{kingdom} has left our {pact}! It seems their {kingdom.king} is too afraid to commit to his promises..."
	voice_line = "narrator_voice:our_invasion_plan_lost_supporter"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Diplomacy_Angry.tga:UI_Illustration_Diplomacy_Angry#2" //GUID:29ecc7241bf12374782bfcb34c81c578
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurInvasionPlan_Negative.png:Icon_Message_OurInvasionPlan_Negative#2" //GUID:8f82aa15bc15757408e57a5af2c99eaa
	
	stack_priority = 70
}

// PactLeftByWar

def DefensivePactLeftByWarPlayerIsTargetMessage : PactMessage
{
	caption = "Defensive Pact against us weakened"
	body = "By attacking us, the {kingdom:ians} at least left {pact.leader:s} Defensive Pact against us. Now we have the opportunity to fight them without the other kingdonms intervening."
	voice_line = "narrator_voice:supporter_left_defensive_pact_against_us"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TheirDefensivePact_Positive.png:Icon_Message_TheirDefensivePact_Positive#2" //GUID:233c81d07b9f88c44b6e4c1201be0e25
	
	stack_priority = 70
}

def DefensivePactLeftByWarPlayerIsLeaderMessage : PactMessage
{
	caption = "{kingdom} left our Defensive Pact"
	body = "{kingdom} decided to deal with {pact.target} themselves, attacked them and left our {pact}. We are not obligated to support them as allies and so far {plr_kingdom} is not part of that war."
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Diplomacy_Angry.tga:UI_Illustration_Diplomacy_Angry#2" //GUID:29ecc7241bf12374782bfcb34c81c578
	voice_line = "narrator_voice:our_defensive_pact_lost_supporter"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurDefensivePact_Negative.png:Icon_Message_OurDefensivePact_Negative#2" //GUID:6de50acddf735fe429011cf89a47be12
}

def DefensivePactLeftByWarPlayerIsSupporterMessage : PactMessage
{
	caption = "{kingdom} left our Defensive Pact"
	body = "{kingdom} decided to attack {pact.target} themselves and left {pact.leader:s} {pact}. They now fight alone."
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Diplomacy_Angry.tga:UI_Illustration_Diplomacy_Angry#2" //GUID:29ecc7241bf12374782bfcb34c81c578
	voice_line = "narrator_voice:our_defensive_pact_lost_supporter"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurDefensivePact_Negative.png:Icon_Message_OurDefensivePact_Negative#2" //GUID:6de50acddf735fe429011cf89a47be12
}

def DefensivePactLeftByWarPlayerIsNotInvolvedMessage : PactRadioMessage
{
	radio = "{kingdom} has left {pact.leader:s} {pact}"
}

def OffensivePactLeftByWarPlayerIsTargetRumorMessage : PactMessage
{
	caption = "Invasion Plan against us weakened"
	body = "By attacking us {kingdom} left {pact.leader:s} {pact}. At least we can now deal with them alone."
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_SpyRumors.tga:UI_Illustration_SpyRumors#2" //GUID:d9eacb331a1416845b9c68d76b504c5a
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TheirInvasionPlan_Positive.png:Icon_Message_TheirInvasionPlan_Positive#2" //GUID:39741b65f5315024081c7d52a0e1212a
}

def OffensivePactLeftByWarPlayerIsLeaderMessage : PactMessage
{
	caption = "{kingdom} left our Invasion Plan"
	body = "{kingdom} decided to attack {pact.target} themselves, leaving our {pact}! We were wrong to think they can be trusted."
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Diplomacy_Angry.tga:UI_Illustration_Diplomacy_Angry#2" //GUID:29ecc7241bf12374782bfcb34c81c578
	voice_line = "narrator_voice:our_invasion_plan_lost_supporter"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurInvasionPlan_Neutral.png:Icon_Message_OurInvasionPlan_Neutral#2" //GUID:8fe98c34f7ed8b74ba1496ff46348fc8
	
	stack_priority = 70
}

def OffensivePactLeftByWarPlayerIsSupporterMessage : PactMessage
{
	caption = "{kingdom} left our Invasion Plan"
	body = "{kingdom} decided to attack {pact.target} themselves, leaving {pact.leader:s} {pact}! They probably want all the spoils of war for themselves!"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Diplomacy_Angry.tga:UI_Illustration_Diplomacy_Angry#2" //GUID:29ecc7241bf12374782bfcb34c81c578
	voice_line = "narrator_voice:our_invasion_plan_lost_supporter"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurInvasionPlan_Negative.png:Icon_Message_OurInvasionPlan_Negative#2" //GUID:8f82aa15bc15757408e57a5af2c99eaa
	
	stack_priority = 70
}

// PactDissolved

def DefensivePactDissolvedPlayerIsLeaderMessage : PactMessage
{
	caption = "Our Defensive Pact ended"
	body = "Our {pact} has seized to exist and we are no longer part of it."
	voice_line = "narrator_voice:our_defensive_pact_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurDefensivePact_Negative.png:Icon_Message_OurDefensivePact_Negative#2" //GUID:6de50acddf735fe429011cf89a47be12
}

def DefensivePactDissolvedPlayerIsTargetMessage : PactMessage
{
	caption = "Defensive Pact against us ended"
	body = "Sire, we bear good news! It seems the {pact} led by {pact.leader} no longer exists."
	voice_line = "narrator_voice:defensive_pact_against_us_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TheirDefensivePact_Positive.png:Icon_Message_TheirDefensivePact_Positive#2" //GUID:233c81d07b9f88c44b6e4c1201be0e25
	
	stack_priority = 70
}

def DefensivePactDissolvedPlayerIsSupporterMessage : PactMessage
{
	caption = "Our Defensive Pact ended"
	body = "{pact.leader:s} {pact} has seized to exist and we are no longer part of it."
	voice_line = "narrator_voice:our_defensive_pact_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurDefensivePact_Negative.png:Icon_Message_OurDefensivePact_Negative#2" //GUID:6de50acddf735fe429011cf89a47be12
}

def DefensivePactDissolvedPlayerIsNotInvolvedMessage : PactRadioMessage
{
	radio = "{pact.leader:s} {pact} no longer exists"
}

def OffensivePactDissolvedPlayerIsTargetRumorMessage : PactMessage
{
	caption = "{pact.leader} no longer plans to invade us"
	body = "{spy} sent us reassuring news that {pact.leader:s} {pact} is no longer in action."
	voice_line = "narrator_voice:invasion_plan_against_us_dissolved"
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_SpyRumors.tga:UI_Illustration_SpyRumors#2" //GUID:d9eacb331a1416845b9c68d76b504c5a
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TheirInvasionPlan_Positive.png:Icon_Message_TheirInvasionPlan_Positive#2" //GUID:39741b65f5315024081c7d52a0e1212a
}

def OffensivePactDissolvedPlayerIsSupporterMessage : PactMessage
{
	caption = "Our Invasion Plan has ended"
	body = "Alas, {pact.leader:s} {pact} has seized to exist and we are no longer part of it."
	voice_line = "narrator_voice:our_invasion_plan_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurInvasionPlan_Negative.png:Icon_Message_OurInvasionPlan_Negative#2" //GUID:8f82aa15bc15757408e57a5af2c99eaa
	
	stack_priority = 70
}

def OffensivePactDissolvedPlayerIsNotInvolvedRumorMessage : PactMessage
{
	caption = "{pact.leader:s} Invasion Plan failed"
	body = "Sire, {spy} gathered information that {pact.leader:s} {pact} has fallen to shambles and no longer exists."
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_SpyRumors.tga:UI_Illustration_SpyRumors#2" //GUID:d9eacb331a1416845b9c68d76b504c5a
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_InvasionPlan_Neutral.png:Icon_Message_InvasionPlan_Neutral#2" //GUID:8b92825205a00b04595b4373754d3cdb
}

// PactDissolvedByWar

def DefensivePactDissolvedByWarPlayerIsLeaderMessage : PactMessage
{
	caption = "Our Defensive Pact ended"
	body = "By attacking {pact.target} we rendered our {pact} obsolete. We had no agreement for offensive actions."
	voice_line = "narrator_voice:our_defensive_pact_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurDefensivePact_Negative.png:Icon_Message_OurDefensivePact_Negative#2" //GUID:6de50acddf735fe429011cf89a47be12
}

def OffensivePactDissolvedByWarPlayerIsLeaderMessage : PactMessage
{
	caption = "Our Invasion Plan ended"
	body = "By declaring war to one of our potential allies, we rendered our {pact} obsolete. This was a crude diplomatic step on our side."
	voice_line = "narrator_voice:our_invasion_plan_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurInvasionPlan_Negative.png:Icon_Message_OurInvasionPlan_Negative#2" //GUID:8f82aa15bc15757408e57a5af2c99eaa
}

def DefensivePactDissolvedByWarPlayerIsTargetMessage : PactMessage
{
	caption = "Defensive Pact against us ended"
	body = "By taking the initiative and declaring war, {kingdom} rendered their defensive pact against us obsolete. None of the former pact members will follow them into war, at least not due to that agreement."
	voice_line = "narrator_voice:defensive_pact_against_us_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TheirDefensivePact_Positive.png:Icon_Message_TheirDefensivePact_Positive#2" //GUID:233c81d07b9f88c44b6e4c1201be0e25
	
	stack_priority = 70
}

def OffensivePactDissolvedByWarPlayerIsTargetMessage : PactMessage
{
	caption = "Invasion Plan against us ended"
	body = "By entering war with one of their allies, {kingdom} rendered their {pact} obsolete. We can only celebrate their foolishness now."
	voice_line = "narrator_voice:invasion_plan_against_us_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TheirInvasionPlan_Positive.png:Icon_Message_TheirInvasionPlan_Positive#2" //GUID:39741b65f5315024081c7d52a0e1212a
}

def DefensivePactDissolvedByWarPlayerIsSupporterMessage : PactMessage
{
	caption = "Our Defensive Pact ended"
	body = "{pact.leader} decided to attack {pact.target}, rendering the {pact} obsolete, as invasion was not discussed in it."
	voice_line = "narrator_voice:our_defensive_pact_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurDefensivePact_Negative.png:Icon_Message_OurDefensivePact_Negative#2" //GUID:6de50acddf735fe429011cf89a47be12
}

def OffensivePactDissolvedByWarPlayerIsSupporterMessage : PactMessage
{
	caption = "Our Invasion Plan ended"
	body = "{pact.leader} are now at war with one of their own potential allies, rendering the {pact} obsolete. They are no longer to be trusted."
	voice_line = "narrator_voice:our_invasion_plan_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurInvasionPlan_Negative.png:Icon_Message_OurInvasionPlan_Negative#2" //GUID:8f82aa15bc15757408e57a5af2c99eaa
	
	stack_priority = 70
}

def DefensivePactDissolvedByWarPlayerIsNotInvolvedMessage : PactRadioMessage
{
	radio = "{pact.leader:s} {pact} no longer exists"
}

def OffensivePactDissolvedByWarPlayerIsNotInvolvedMessage : PactRadioMessage
{
	radio = "{pact.leader:s} {pact} no longer exists"
}

// PactDissolvedOwnerImprisoned

def DefensivePactDissolvedOwnerImprisonedPlayerIsLeaderMessage : PactMessage
{
	caption = "Our Defensive Pact ended"
	body = "Our {pact.owner} may no longer maintain his {pact}, as he now rots in {pact.owner.prison_kingdom:s} dungeon."
	voice_line = "narrator_voice:our_defensive_pact_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurDefensivePact_Negative.png:Icon_Message_OurDefensivePact_Negative#2" //GUID:6de50acddf735fe429011cf89a47be12
	
	stack_priority = 70
}

def OffensivePactDissolvedOwnerImprisonedPlayerIsLeaderMessage : PactMessage
{
	caption = "Our Invasion Plan ended"
	body = "{DefensivePactDissolvedOwnerImprisonedPlayerIsLeaderMessage.body}"
	voice_line = "narrator_voice:our_invasion_plan_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurInvasionPlan_Negative.png:Icon_Message_OurInvasionPlan_Negative#2" //GUID:8f82aa15bc15757408e57a5af2c99eaa
	
	stack_priority = 70
}

def DefensivePactDissolvedOwnerImprisonedPlayerIsTargetMessage : PactMessage
{
	caption = "Defensive Pact against us ended"
	body = "We've learned that {pact.owner} of {pact.owner.kingdom} has been imprisoned by {pact.owner.prison_kingdom}! This means his {pact.type_text} against us has been dissolved."
	voice_line = "narrator_voice:defensive_pact_against_us_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TheirDefensivePact_Positive.png:Icon_Message_TheirDefensivePact_Positive#2" //GUID:233c81d07b9f88c44b6e4c1201be0e25
	
	stack_priority = 70
}

def OffensivePactDissolvedOwnerImprisonedPlayerIsTargetMessage : PactMessage
{
	caption = "Invasion Plan against us ended"
	body = "{DefensivePactDissolvedOwnerImprisonedPlayerIsTargetMessage.body}"
	voice_line = "narrator_voice:invasion_plan_against_us_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TheirInvasionPlan_Positive.png:Icon_Message_TheirInvasionPlan_Positive#2" //GUID:39741b65f5315024081c7d52a0e1212a
}

def DefensivePactDissolvedOwnerImprisonedPlayerIsSupporterMessage : PactMessage
{
	caption = "Our Defensive Pact ended"
	body = "The recent unfortunate imprisonment of {pact.owner} by {pact.owner.prison_kingdom} has put an end to our {pact}."
	voice_line = "narrator_voice:our_defensive_pact_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurDefensivePact_Negative.png:Icon_Message_OurDefensivePact_Negative#2" //GUID:6de50acddf735fe429011cf89a47be12
}

def OffensivePactDissolvedOwnerImprisonedPlayerIsSupporterMessage : PactMessage
{
	caption = "Our Invasion Plan ended"
	body = "{DefensivePactDissolvedOwnerImprisonedPlayerIsSupporterMessage.body}"
	voice_line = "narrator_voice:our_invasion_plan_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurInvasionPlan_Negative.png:Icon_Message_OurInvasionPlan_Negative#2" //GUID:8f82aa15bc15757408e57a5af2c99eaa
	
	stack_priority = 70
}

def DefensivePactDissolvedOwnerImprisonedPlayerIsNotInvolvedMessage : PactRadioMessage
{
	radio = "{pact.owner:s} imprisonment has ended {pact.leader:s} {pact}"
}

def OffensivePactDissolvedOwnerImprisonedPlayerIsNotInvolvedMessage : PactRadioMessage
{
	radio = "{pact.owner:s} imprisonment has ended {pact.leader:s} {pact}"
}

// PactDissolvedOwnerRebelled
def DefensivePactDissolvedOwnerRebelledPlayerIsLeaderMessage : PactMessage
{
	caption = "Our Defensive Pact ended"
	body = "The backstabbing {pact.owner}, who now roams our lands as a pesky rebel, no longer maintains his {pact}."
	voice_line = "narrator_voice:our_defensive_pact_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurDefensivePact_Negative.png:Icon_Message_OurDefensivePact_Negative#2" //GUID:6de50acddf735fe429011cf89a47be12
}

def OffensivePactDissolvedOwnerRebelledPlayerIsLeaderMessage : PactMessage
{
	caption = "Our Invasion Plan ended"
	body = "{DefensivePactDissolvedOwnerRebelledPlayerIsLeaderMessage.body}"
	voice_line = "narrator_voice:our_invasion_plan_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurInvasionPlan_Negative.png:Icon_Message_OurInvasionPlan_Negative#2" //GUID:8f82aa15bc15757408e57a5af2c99eaa
	
	stack_priority = 70
}

def DefensivePactDissolvedOwnerRebelledPlayerIsTargetMessage : PactMessage
{
	caption = "Defensive Pact against us ended"
	body = "Sire, we've discovered that {pact.owner} has become a rebel! This has put an end to his {pact.type_text} against us."
	voice_line = "narrator_voice:defensive_pact_against_us_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TheirDefensivePact_Positive.png:Icon_Message_TheirDefensivePact_Positive#2" //GUID:233c81d07b9f88c44b6e4c1201be0e25
	
	stack_priority = 70
}

def OffensivePactDissolvedOwnerRebelledPlayerIsTargetMessage : PactMessage
{
	caption = "Invasion Plan against us ended"
	body = "{DefensivePactDissolvedOwnerRebelledPlayerIsTargetMessage.body}"
	voice_line = "narrator_voice:invasion_plan_against_us_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TheirInvasionPlan_Positive.png:Icon_Message_TheirInvasionPlan_Positive#2" //GUID:39741b65f5315024081c7d52a0e1212a
}

def DefensivePactDissolvedOwnerRebelledPlayerIsSupporterMessage : PactMessage
{
	caption = "Our Defensive Pact ended"
	body = "{pact.owner} of {pact.owner.kingdom} has turned rebel! Unfortunately, this means that our {pact} may no longer be maintained."
	voice_line = "narrator_voice:our_defensive_pact_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurDefensivePact_Negative.png:Icon_Message_OurDefensivePact_Negative#2" //GUID:6de50acddf735fe429011cf89a47be12
}

def OffensivePactDissolvedOwnerRebelledPlayerIsSupporterMessage : PactMessage
{
	caption = "Our Invasion Plan ended"
	body = "{DefensivePactDissolvedOwnerRebelledPlayerIsSupporterMessage.body}"
	voice_line = "narrator_voice:our_invasion_plan_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurInvasionPlan_Negative.png:Icon_Message_OurInvasionPlan_Negative#2" //GUID:8f82aa15bc15757408e57a5af2c99eaa
	
	stack_priority = 70
}

def DefensivePactDissolvedOwnerRebelledPlayerIsNotInvolvedMessage : PactRadioMessage
{
	radio = "{pact.owner:s} recent revolt has ended {pact.leader:s} {pact}"
}

def OffensivePactDissolvedOwnerRebelledPlayerIsNotInvolvedMessage : PactRadioMessage
{
	radio = "{pact.owner:s} recent revolt has ended {pact.leader:s} {pact}"
}


// PactDissolvedOwnerDeserted

def DefensivePactDissolvedOwnerDesertedPlayerIsLeaderMessage : PactMessage
{
	caption = "Our Defensive Pact ended"
	body = "Needless to say, {pact.owner:s} desertion from our {kingdom.KingdomType} has rendered his {pact} inactive."
	voice_line = "narrator_voice:our_defensive_pact_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurDefensivePact_Negative.png:Icon_Message_OurDefensivePact_Negative#2" //GUID:6de50acddf735fe429011cf89a47be12
}

def OffensivePactDissolvedOwnerDesertedPlayerIsLeaderMessage : PactMessage
{
	caption = "Our Invasion Plan ended"
	body = "{DefensivePactDissolvedOwnerDesertedPlayerIsLeaderMessage.body}"
	voice_line = "narrator_voice:our_invasion_plan_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurInvasionPlan_Negative.png:Icon_Message_OurInvasionPlan_Negative#2" //GUID:8f82aa15bc15757408e57a5af2c99eaa
	
	stack_priority = 70
}

def DefensivePactDissolvedOwnerDesertedPlayerIsTargetMessage : PactMessage
{
	caption = "Defensive Pact against us ended"
	body = "Good news - {pact.leader:s} {pact.type_text} against us has been dissolved! Rumors have it that {pact.owner} has abandoned his kingdom for unknown reasons."
	voice_line = "narrator_voice:defensive_pact_against_us_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TheirDefensivePact_Positive.png:Icon_Message_TheirDefensivePact_Positive#2" //GUID:233c81d07b9f88c44b6e4c1201be0e25
	
	stack_priority = 70
}

def OffensivePactDissolvedOwnerDesertedPlayerIsTargetMessage : PactMessage
{
	caption = "Invasion Plan against us ended"
	body = "{DefensivePactDissolvedOwnerDesertedPlayerIsTargetMessage.body}"
	voice_line = "narrator_voice:invasion_plan_against_us_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TheirInvasionPlan_Positive.png:Icon_Message_TheirInvasionPlan_Positive#2" //GUID:39741b65f5315024081c7d52a0e1212a
}

def DefensivePactDissolvedOwnerDesertedPlayerIsSupporterMessage : PactMessage
{
	caption = "Our Defensive Pact ended"
	body = "Unfortunately, our {pact} has been dissolved. It seems that {pact.owner}, formerly part of {pact.leader:s} court, has deserted his kingdom."
	voice_line = "narrator_voice:our_defensive_pact_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurDefensivePact_Negative.png:Icon_Message_OurDefensivePact_Negative#2" //GUID:6de50acddf735fe429011cf89a47be12
}

def OffensivePactDissolvedOwnerDesertedPlayerIsSupporterMessage : PactMessage
{
	caption = "Our Invasion Plan ended"
	body = "{DefensivePactDissolvedOwnerDesertedPlayerIsSupporterMessage.body}"
	voice_line = "narrator_voice:our_invasion_plan_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurInvasionPlan_Negative.png:Icon_Message_OurInvasionPlan_Negative#2" //GUID:8f82aa15bc15757408e57a5af2c99eaa
	
	stack_priority = 70
}

def DefensivePactDissolvedOwnerDesertedPlayerIsNotInvolvedMessage : PactRadioMessage
{
	radio = "{pact.owner:s} abandonment of {pact.leader} has ended his {pact}"
}

def OffensivePactDissolvedOwnerDesertedPlayerIsNotInvolvedMessage : PactRadioMessage
{
	radio = "{pact.owner:s} abandonment of {pact.leader} has ended his {pact}"
}


// PactDissolvedOwnerDied

def DefensivePactDissolvedOwnerDiedPlayerIsLeaderMessage : PactMessage
{
	caption = "Our Defensive Pact ended"
	body = "As our people mourn the death of {pact.owner}, his {pact} has withered to dust."
	voice_line = "narrator_voice:our_defensive_pact_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurDefensivePact_Negative.png:Icon_Message_OurDefensivePact_Negative#2" //GUID:6de50acddf735fe429011cf89a47be12
}

def OffensivePactDissolvedOwnerDiedPlayerIsLeaderMessage : PactMessage
{
	caption = "Our Invasion Plan ended"
	body = "{DefensivePactDissolvedOwnerDiedPlayerIsLeaderMessage.body}"
	voice_line = "narrator_voice:our_invasion_plan_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurInvasionPlan_Negative.png:Icon_Message_OurInvasionPlan_Negative#2" //GUID:8f82aa15bc15757408e57a5af2c99eaa
	
	stack_priority = 70
}

def DefensivePactDissolvedOwnerDiedPlayerIsTargetMessage : PactMessage
{
	caption = "Defensive Pact against us ended"
	body = "Sire, the passing of {pact.owner} means that we are no longer a target of {pact.leader:s} {pact.type_text} against us!"
	voice_line = "narrator_voice:defensive_pact_against_us_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TheirDefensivePact_Positive.png:Icon_Message_TheirDefensivePact_Positive#2" //GUID:233c81d07b9f88c44b6e4c1201be0e25
	
	stack_priority = 70
}

def OffensivePactDissolvedOwnerDiedPlayerIsTargetMessage : PactMessage
{
	caption = "Invasion Plan against us ended"
	body = "{DefensivePactDissolvedOwnerDiedPlayerIsTargetMessage.body}"
	voice_line = "narrator_voice:invasion_plan_against_us_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TheirInvasionPlan_Positive.png:Icon_Message_TheirInvasionPlan_Positive#2" //GUID:39741b65f5315024081c7d52a0e1212a
}

def DefensivePactDissolvedOwnerDiedPlayerIsSupporterMessage : PactMessage
{
	caption = "Our Defensive Pact ended"
	body = "With the death of {pact.owner}, our {pact} has come to an unexpected end."
	voice_line = "narrator_voice:our_defensive_pact_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurDefensivePact_Negative.png:Icon_Message_OurDefensivePact_Negative#2" //GUID:6de50acddf735fe429011cf89a47be12
}

def OffensivePactDissolvedOwnerDiedPlayerIsSupporterMessage : PactMessage
{
	caption = "Our Invasion Plan ended"
	body = "{DefensivePactDissolvedOwnerDiedPlayerIsSupporterMessage.body}"
	voice_line = "narrator_voice:our_invasion_plan_dissolved"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurInvasionPlan_Negative.png:Icon_Message_OurInvasionPlan_Negative#2" //GUID:8f82aa15bc15757408e57a5af2c99eaa
	
	stack_priority = 70
}

def DefensivePactDissolvedOwnerDiedPlayerIsNotInvolvedMessage : PactRadioMessage
{
	radio = "{pact.owner:s} death has ended {pact.leader:s} {pact}"
}

def OffensivePactDissolvedOwnerDiedPlayerIsNotInvolvedMessage : PactRadioMessage
{
	radio = "{pact.owner:s} death has ended {pact.leader:s} {pact}"
}


// PactActivated

def DefensivePactActivatedPlayerIsTargetMessage : Message
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TheirDefensivePact_Negative.png:Icon_Message_TheirDefensivePact_Negative#2" //GUID:b931639be44bbfa41bb6311ee0a7e383
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Diplomacy_Angry.tga:UI_Illustration_Diplomacy_Angry#2" //GUID:29ecc7241bf12374782bfcb34c81c578
	caption = "Defensive Pact against us!"
	body = "Sire, our aggression towards {defender} has also put us at war with {defender_supporters}!"
	
	stack_group = "WarInvolvement"
	separate_stack = true
	stack_priority = 50
}

def DefensivePactActivatedPlayerIsTheKingdomMessage : Message
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurDefensivePact_Positive.png:Icon_Message_OurDefensivePact_Positive#2" //GUID:3cc1055696e230b499984365ad8a5aa1
	caption = "Defensive Pact honored!"
	body = ["{defender_supporters} honored our Defensive Pact against {attacker} and joined the war on our side. Our armies march together against the treacherous aggressors!",
			"Our Defensive Pact against {attacker} has led to {defender_supporters} joining the war on our side! Turns ous it's better to be cautions than unprepared."]
	
	stack_group = "WarInvolvement"
	separate_stack = true
	stack_priority = 50
}

def DefensivePactActivatedPlayerIsSupporterMessage : Message
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurDefensivePact_Positive.png:Icon_Message_OurDefensivePact_Positive#2" //GUID:3cc1055696e230b499984365ad8a5aa1
	caption = "Defensive Pact honored!"
	body = ["We honored {defender:s} Defensive Pact and joined them in the war against {attacker}.",
			"Our promise to {defender} has been fulfiled - we joined their war against {attacker} as a supporter.",
			"{attacker:s} aggression towards {defender} has forced us to enter the war as supporters of the {defender:ians}."]
	
	sound_effect = "event:/sound_effects/notification/war_declared"
	voice_line = "narrator_voice:war_declared"
	
	stack_group = "WarInvolvement"
	separate_stack = true
	stack_priority = 60
}

def OffensivePactActivatedPlayerIsLeaderMessage : Message
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurInvasionPlan_Positive.png:Icon_Message_OurInvasionPlan_Positive#2" //GUID:88f552ed366e0b94f9fb4037e47acc66
	caption = "Invasion Plan honored!"
	body = "Sire, {attacker_supporters} honored our Invasion Plan against {defender} and joined the war on our side. We shall fight as one!"
	
	
	stack_group = "WarInvolvement"
	separate_stack = true
	stack_priority = 50
}

def OffensivePactActivatedPlayerIsSupporterMessage : Message
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_OurInvasionPlan_Positive.png:Icon_Message_OurInvasionPlan_Positive#2" //GUID:88f552ed366e0b94f9fb4037e47acc66
	caption = "Invasion Plan honored!"
	body = "We honored {attacker:s} Invasion Plan and joined them in the war against {defender}. May our armies crush the opponent with deadly precision!"
	
	
	stack_group = "WarInvolvement"
	separate_stack = true
	stack_priority = 60
}

def OffensivePactActivatedPlayerIsTargetMessage : Message
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_TheirInvasionPlan_Negative.png:Icon_Message_TheirInvasionPlan_Negative#2" //GUID:46d4f96303da61b48a739303a4d36549
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Diplomacy_Angry.tga:UI_Illustration_Diplomacy_Angry#2" //GUID:29ecc7241bf12374782bfcb34c81c578
	caption = "Invasion Plan against us!"
	body = "We've been declared war by {attacker_supporters}! It turns out they've been planning to invade us alongside {attacker}, whose armies now also march against us..."
	
	
	stack_group = "WarInvolvement"
	separate_stack = true
	stack_priority = 40
}

//----------------------------- End of pact messages

def AllianceFormedMessage : Message
{
	radio = "{kingdom_a} formed an alliance with {kingdom_b}"
	drop_down = false
	category = "diplomacy"
}

def TradeSignedMessage : Message
{
	radio = "{kingdom_a} signed a trade agreement with {kingdom_b}"
	drop_down = false
	important = 1
	category = "diplomacy"
}

def NonAggressionSignedMessage : Message
{
	radio = "{kingdom_a} signed a pact of non-aggression with {kingdom_b}"
	drop_down = false
	important = 1
	category = "diplomacy"
}

def KingdomVassalizedMessage : Message
{
	radio = "{kingdom_a} was vassalized by {kingdom_b}"
	drop_down = false
	important = 1
	category = "diplomacy"
}

def ForeignNewSovereignMessage : Message
{
	radio = "{kingdom_a:s} {old_king_title} has passed away"
	drop_down = false
	important = 2
	category = "common"
}

def ForeignMarriageMessage : Message
{
	radio = "{kingdom_a} and {kingdom_b} strengthened their bond with a royal marriage"
	drop_down = false
	important = 1
	category = "diplomacy"
	stack_priority = 190
	stack_group = "OurSmallChanges"
}

def WidowedMessage : Message
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_RoyalEvent_Neutral.png:Icon_Message_RoyalEvent_Neutral#2" //GUID:2c52508efc1a7e241b62d32953038bdf
	caption = "[{marriage_kingdom.defeated:if}Widowed|Royal ties broken]"
	body = "My Lord, {widow} has returned to our royal family following her husband's untimely demise. [{marriage_kingdom.defeated:if}|As a result, our royal ties with {marriage_kingdom} have been broken.]"
}

def KingdomChangedReligionMessage : Message
{
	radio = "{kingdom_a} changed their religion to {new_religion}"
	drop_down = false
	important = 1
	category = "common"
}

def RejectAIEmperorMessage : Message
{
	radio = "{player} refused to accept {emperor} as Emperor of the World and most great powers are now at war with the claimant"
	drop_down = false
	important = 2
	category = "common"
	voice_line = "narrator_voice:eow_claim_refused_others"
}

def RejectBeingEmperorMessage : Message
{
	radio = "{emperor} was voted as Emperor of the World but decided to reject the title!"
	drop_down = false
	important = 2
	category = "common"
	voice_line = "narrator_voice:eow_claim_refused_yours"
}

def NoEmperorOfTheWorldChosenMessage : Message
{
	radio = "The great powers gathered to vote for an Emperor of the World, but no consensus was made"
	drop_down = false
	important = 2
	category = "common"
	voice_line = "narrator_voice:eow_no_result"
}

def WarStartMissionKnightsOwn : Message
{
	caption = "Our knights in hostile lands"
	body = "Since the war with {kingdom} started, our knights there got persecuted.[{p}{blt}{fled} fled back to our kingdom.][{p}{blt}{imprisoned} got imprisoned.]"
	list = "imprisoned"
	{
		text final_separator = " and "
	}
	list2 = "fled"
	{
		text final_separator = " and "
	}
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_WarEvent_Negative.png:Icon_Message_WarEvent_Negative#2" //GUID:f343a8693a9dc1d479591842d3ee683e
}

def WarStartMissionKnightsOposition : Message
{
	caption = "We imprisoned enemy knights"
	body = "Sire, since the war with {kingdom} is now raging, we decided that their knights in our lands should be held in the dungeon.{p}{p}{blt}{imprisoned} got imprisoned."
	list = "imprisoned"
	{
		text final_separator = " and "
	}
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_WarEvent_Positive.png:Icon_Message_WarEvent_Positive#2" //GUID:cf2d3a3c38001314ab1afd078292f07a
}

def ConfirmCancelActionMessage : Message
{
	caption = "Cancel character action?"
	body = "Are you sure you want to cancel {owner:s} action?{p}If you do so, he will be available again for new assignments."
	buttons
	{
		text ok = "&Cancel action"
		text close = "&Nevermind"
	}
}

def MerchantShunnedMessage : Message
{
	caption = "Our merchant was shunned"
	body = "{merchant} was shunned in quite disrespectful manner and our trade agreement with {kingdom} is now cancelled. We suspect that this happened on the request of more important trade partners of their kingdom."
	voice_line = "narrator_voice:our_merchant_shunned"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_GenericEvent_Negative.png:Icon_Message_GenericEvent_Negative#2" //GUID:f955d92cf71058746985a61f90487bb9
}

def ExquisiteRansomMessage : Message
{
	caption = "Prisoner was ransomed"
	body = "{kingdom} made us an offer we can't refuse, so we freed {character}. The amount of {cost}{gold_icon} is already in our treasury."
	voice_line = "narrator_voice:exquisite_ransom"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_KnighEscaped_Negative.png:Icon_Message_KnighEscaped_Negative#2" //GUID:16663f8bd4ac6f84fa31fceb457a5b9c
}

def DemotedMerchantInsufficientCommerceMessage : Message
{
	caption = "Insufficient commerce"
	body = "{obj} has lost trade levels due to our insufficient commerce."
	voice_line = "narrator_voice:our_merchant_demoted"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_GenericEvent_Negative.png:Icon_Message_GenericEvent_Negative#2" //GUID:f955d92cf71058746985a61f90487bb9
}

def DemotedMerchantRelDropMessage : Message
{
	caption = "Worsened trade relations"
	body = "Due to the worsening of our relations with {obj.mission_kingdom}, our {obj} lost one trade level."
	voice_line = "narrator_voice:our_merchant_demoted"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_GenericEvent_Negative.png:Icon_Message_GenericEvent_Negative#2" //GUID:f955d92cf71058746985a61f90487bb9
}

def TestDefLinksMessage : Message
{
	caption = "Test def links"
	body = $[
		"{tst_building} is built in {tst_building.district} and requires {tst_resource}.{p}"
		"{Church}, {Cathedral}, {Dungeon} and {Housings} are tricky.{p}"
		"{LearningSkill} is a skill, but {LearningTradition} is also a tradition."
		]
}

def ConfirmDisbandUnitMessage : Message
{
	caption = "Dismiss squad?"
	body = "Sire, are you sure we should dismiss [{obj}|this squad]?"
	buttons
	{
		text ok = "&Ok"
		text close = "&Nevermind"
	}
}

def ConfirmDismissMercenaryMessage : Message
{
	caption = "Dismiss mercenary?"
	body = "Sire, are you sure we should dismiss those mercenaries?"
	buttons
	{
		text ok = "&Ok"
		text close = "&Nevermind"
	}
}

def ConfirmDisbandMultipleUnitsMessage : Message
{
	caption = "Dismiss squads?"
	body = "Sire, are you sure we should dismiss the selected squads?"
	buttons
	{
		text ok = "&Ok"
		text close = "&Nevermind"
	}
}

def ConfirmIncreaseTaxMessage : Message
{
	caption = "Increase tax rate?"
	body = "Sire, are you sure we should raise our taxes? This might reduce the opinion of our Nobility and Peasants and can lead to rebellious activity."
	buttons
	{
		text ok = "&Ok"
		text close = "&Nevermind"
	}
}

def EmperorOfTheWorldPretenderNotChosenMessage : PrisonMessage
{
	caption = "Claim Unsuccessful"
	body = "[Alas, you were not chosen as Emperor of the World. Due to the outcomes of the vote, we've been declared war by {warsWith}.]"
	list = "warsWith"
	{
		text final_separator = " and "
	}
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_WarDeclared.png:Icon_Message_WarDeclared#2" //GUID:3e80d4d6062b48948b964303521d1042
	voice_line = "narrator_voice:eow_claim_refused_yours"
}

def EmperorOfTheWorldGainedSupportMessage : DiplomacyMessage
{
	caption = "We gained Great Power's support"
	body = "{kingdom} are now starting to look at {plr_kingdom.king} as a man, who has the power to proclaim himself as an Emperor of the World."
	voice_line = "narrator_voice:emperor_of_the_world_gained_support"
	
	stack_group = "WorldEvents"
	separate_stack = true
	stack_priority = 170
}

def EmperorOfTheWorldLostSupportMessage : DiplomacyMessage
{
	caption = "We lost Great Power's support"
	body = "The {kingdom:ians} started to lose faith in our leadership and if {plr_kingdom.king} tries to claim the Emperor of the World title right now, they will probably not support us."
	voice_line = "narrator_voice:emperor_of_the_world_lost_support"
	
	stack_group = "WorldEvents"
	separate_stack = true
	stack_priority = 170
}

def RelationsImprovedDiplomat : OkMessage
{
	caption = "[{already_maxed_out:if}Idle diplomat in {diplomat.mission_kingdom}|Relations with {diplomat.mission_kingdom} improved]"
	body = $[
		"[{already_maxed_out:if}Sire, our relations with {diplomat.mission_kingdom} are already as good as they can get and {diplomat} may be more useful elsewhere.|[{maxed_out:if}Sire, thanks to {diplomat:s} efforts our relations with {diplomat.mission_kingdom} are now perfect and he might be more useful elsewhere.|Sire, {diplomat} managed to improve our relations with {diplomat.mission_kingdom}!]]"
		"[{already_maxed_out:if}|{p}{blt} Relations with {diplomat.mission_kingdom}: {amount:bonus_dark}]"
		"[{diplomat.mission_kingdom.is_papacy:if}{diplomat.kingdom.is_christian:if}{p}{blt} Diplomats are not very effective in {papacy}. Sending a cleric would be of more use.]"
	]
	// !!! consider changing the illustration, if you've improved relations with the Papacy/Constantinople instead
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Diplomacy_Pleased.tga:UI_Illustration_Diplomacy_Pleased#2" //GUID:3ae4d8b75d6f13742a3ef7a93b66c0d2
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Opportunity_Diplomat_Positive.png:Icon_Message_Opportunity_Diplomat_Positive#2" //GUID:e20b7441d317e87488245458b72e85cc
	voice_line = "narrator_voice:diplomat_improved_relations"
	
	stack_group = "OurSmallChanges"
	separate_stack = true
	stack_priority = 140
}

def RelationsImprovedCleric : OkMessage
{
	caption = "Relations with {cleric.mission_kingdom} improved"
	body = "Sire, {cleric} managed to improve our relations with {cleric.mission_kingdom}!{p}[{blt} Relations with {cleric.mission_kingdom}: {amount:bonus_dark}]"
	
	stack_group = "OurSmallChanges"
	separate_stack = true
	stack_priority = 140
	
	switch_value = (cleric.mission_kingdom.religion.key)
	case Catholic
	{
		sprite icon = "Assets/UI/Elements/msg_icons/Icon_Message_Catholic_Positive.png:Icon_Message_Catholic_Positive#2" //GUID:8c1fb46dfa6825f4590d3d7e5cca7741
	}
	case Orthodox
	{
		sprite icon = "Assets/UI/Elements/msg_icons/Icon_Message_Orthodox_Positive.png:Icon_Message_Orthodox_Positive#2" //GUID:19cfbfbc1496e2542ab505a7a2a91a83
	}
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Diplomacy_Pleased.tga:UI_Illustration_Diplomacy_Pleased#2" //GUID:3ae4d8b75d6f13742a3ef7a93b66c0d2
}

def MissionInRomeCancelledBecauseWeChangedReligionMessage : OkMessage
{
	caption = "{owner} recalled"
	body = "Since we are now {owner.kingdom.religion:ans}, {owner} is no longer welcome in {catholic.hq_realm} and returned to to our lands, awaiting new assignements."
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Catholic_Negative.png:Icon_Message_Catholic_Negative#2" //GUID:2cef172317bd25047bf6d8e6520f014e
}

def MissionInRomeCancelledBecauseWeWereExcommunicatedMessage : OkMessage
{
	caption = "{owner} recalled"
	body = "Since {pope} excommunicated us, {owner} is no longer welcome in {catholic.hq_realm} and returned to to our lands, awaiting new assignements."
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Catholic_Negative.png:Icon_Message_Catholic_Negative#2" //GUID:2cef172317bd25047bf6d8e6520f014e
}

def MissionInConstantinopleCancelledBecauseWeChangedReligionMessage : OkMessage
{
	caption = "{owner} recalled"
	body = "Since we are now {owner.kingdom.religion:ans}, {owner} is no longer welcome in {orthodox.hq_realm} and returned to to our lands, awaiting new assignements."
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Orthodox_Negative.png:Icon_Message_Orthodox_Negative#2" //GUID:f288b32e1a0f09c438463931e7afbb19
}

def ClericBecameCardinalElect : OkMessage
{
	stack_group = "ReligionChanges"
	separate_stack = true
	stack_priority = 170
	
	caption = "New {Catholic.titles.CardinalElect}"
	body = "Cleric {obj.name} has been choosen by [{pope}|The Pope] to be one of his successors! He is now known as {obj}."
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Catholic_Positive.png:Icon_Message_Catholic_Positive#2" //GUID:8c1fb46dfa6825f4590d3d7e5cca7741
}

def ClericNoLongerCardinalElect : OkMessage
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Catholic_Negative.png:Icon_Message_Catholic_Negative#2" //GUID:2cef172317bd25047bf6d8e6520f014e
	caption = "{Catholic.titles.CardinalElect} title lost"
	
	stack_group = "ReligionChanges"
	separate_stack = true
	stack_priority = 50
	
	switch_value = (reason)
	case king
	{
		text body = "{obj} had to abandon {Catholic.titles.CardinalElect} title as he became {obj.title}."
	}
	case demoted
	{
		text body = "[{pope}|The Pope] has demoted {obj} and he is no longer a {Catholic.titles.CardinalElect}"
	}
	case bad_relations
	{
		text body = "Our bad relations with {papacy} let to the demotion of {obj} and he is no longer a {Catholic.titles.CardinalElect}"
	}
}

def ClericNoLongerCardinal : OkMessage
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Catholic_Negative.png:Icon_Message_Catholic_Negative#2" //GUID:2cef172317bd25047bf6d8e6520f014e
	caption = "{Catholic.titles.Cardinal} title lost"
	
	stack_group = "ReligionChanges"
	separate_stack = true
	stack_priority = 50
	
	switch_value = (reason)
	case king
	{
		text body = "{obj} had to abandom {Catholic.titles.Cardinal} title as he became {obj.title}."
	}
	case married // should not happen
	{
		text body = "Marriage is not acceptable for a {Catholic.titles.Cardinal}, so {obj} was stripped of his title."
	}
	case not_cathiolic
	{
		text body = "As we are no longer Catholic, {obj} was stripped of the {Catholic.titles.Cardinal} title."
	}
	case excommunicated
	{
		text body = "By excommunicatining us, [{pope}|The Pope] also stripped {obj} of the {Catholic.titles.Cardinal} title."
	}
	case no_papacy
	{
		text body = "As {papacy} no longer exists, {obj} can no longer be called a {Catholic.titles.Cardinal}."
	}
	case enemy_of_papacy
	{
		text body = "Becoming an enemy of {papacy} led to removing the {Catholic.titles.Cardinal} title from {obj}."
	}
	//case dead
	//case rebel
	//case pope 
}

def NonAgressionBrokenMessage : Message
{
	caption = "Non-aggression pact over"
	body = "Sire, as a new king now rules over {obj}, the non-aggression pact we signed with his predecessor no longer stands."
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_RoyalEvent_Negative.png:Icon_Message_RoyalEvent_Negative#2" //GUID:4bfecaf3b33f7734694cc1bfb045bb57
	
	buttons
	{
		text audience = "&Open Audience"
		ok
	}
}

def RoyalTiesBrokenMessage : Message
{
	caption = "Royal ties lost"
	body = "As a new king now rules over {obj}, we no longer have royal ties with them. We will have to make some diplomatic efforts, if we want to become as close to them, as we were before."
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_RoyalEvent_Negative.png:Icon_Message_RoyalEvent_Negative#2" //GUID:4bfecaf3b33f7734694cc1bfb045bb57
}

def CanAdoptTraditionMessage : Message
{
	show_filter_id = "notification_can_adopt_tradition"
	caption = "Adopt new tradition"
	body = "Sire, as our fame grows, our people are ready and eager to follow your wise guidance and adopt a new tradition, which might lead to great improvements of our kingdom!"
	voice_line = "narrator_voice:adopt_new_tradition"
	
	stack_priority = 120
	separate_stack = true
	stack_group = "KingdomOpportunity"
	
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_GenericEvent_Neutral.png:Icon_Message_GenericEvent_Neutral#2" //GUID:d1b257a397cd3e2409cb96b95cb01190
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_ReminderMessage.tga:UI_Illustration_ReminderMessage#2" //GUID:e888028b717208740a51e441c5ba172e
	
	buttons
	{
		text family = "&See Traditions"
		ok
	}
}

def CanBuildBuildingMessage : Message
{
	caption = "Construct new buildings"
	body = "Sire, our noblemen feel that we are neglecting the development of our kingdom, as we haven't constructed new buildings anywhere in our Royal lands for a while and we have the needed space in our towns. Maybe we can construct something in {castles}."
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_GenericEvent_Neutral.png:Icon_Message_GenericEvent_Neutral#2" //GUID:d1b257a397cd3e2409cb96b95cb01190
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_ReminderMessage.tga:UI_Illustration_ReminderMessage#2" //GUID:e888028b717208740a51e441c5ba172e
	voice_line = "narrator_voice:wait_build"
	stack_priority = 140
	separate_stack = true
	stack_group = "KingdomOpportunity"
	
	list = "castles"
	{
		text final_separator = " or "
	}
}

def MaximumBooksMessage : Message
{
	caption = "Books capacity reached"
	body = "The efforts of our scholars are going in vain. [We can use our books to improve the skill proficiency of {characters}.]"
	
	stack_priority = 110
	separate_stack = true
	stack_group = "KingdomOpportunity"
	
	voice_line = "narrator_voice:maximum_books"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_GenericEvent_Neutral.png:Icon_Message_GenericEvent_Neutral#2" //GUID:d1b257a397cd3e2409cb96b95cb01190
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_ReminderMessage.tga:UI_Illustration_ReminderMessage#2" //GUID:e888028b717208740a51e441c5ba172e
}

def LowStabilityInRealmMessage : OkGotoMessage
{
	show_filter_id = "notification_stability_issues"
	caption = "Low Stability"
	
	stack_priority = 180
	separate_stack = true
	stack_group = "KingdomOpportunity"
	
	body = "Sire, the tension in {realm} rises quickly. If we don't act soon, the local population might rebel against your rulership!"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Rebels_Negative.png:Icon_Message_Rebels_Negative#2" //GUID:dbf11e725a52e1d429ad05300abb2f07
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_ReminderMessage.tga:UI_Illustration_ReminderMessage#2" //GUID:e888028b717208740a51e441c5ba172e
	voice_line = "narrator_voice:low_stability_message"
}

def ClaimIneritanceMessage : Message
{
	caption = "Claim inheritance"
	body = "The father of {princess} has perished and we can claim inheritance over her rightful {princess.kingdom_before_marriage:ian} lands. If they refuse, we will have no choice but declare war against them.{p}These are the provinces we can claim: {realms}"
	allow_stack_dismiss = false
	
	stack_priority = 10
	separate_stack = true
	stack_group = "KingdomOpportunity"
	
	buttons
	{
		text accept = "&Claim inheritance"
		text decline = "&Abstain"
		text let_me_think = "&Let me think"
	}
	show_warning = true
	voice_line = "narrator_voice:we_can_claim_inheritance"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_RoyalEvent_Positive.png:Icon_Message_RoyalEvent_Positive#2" //GUID:00191a66d044d1a4f9903d5bf8c4fffe
}

def CharactersRecalledKingdomDestroyedMessage : Message
{
	caption = "Knights recalled"
	body = "The {kingdom:ian} lands were overtaken and the kingdom no longer exists. {characters} returned to our lands, awaiting new assignements."
	stack_group = "KingdomDestroyedOutcomes"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_GenericEvent_Neutral.png:Icon_Message_GenericEvent_Neutral#2" //GUID:d1b257a397cd3e2409cb96b95cb01190
}

def ChangedSovereignMessage : Message
{
	caption = "We have a new sovereign"
	body = "Sire, we are no longer a vassal of {old_sovereign}. {new_sovereign} won a war against them and now rule over us."
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_GenericEvent_Positive.png:Icon_Message_GenericEvent_Positive#2" //GUID:0038f70bebc08a04392e08f1f9149b7b
}

def ProvinceConvertedMessage : OkGotoMessage
{
	caption = "Province converted"
	body = "Sire, the people of {realm} that we recently conquered willingly accepted our religion."
	
	stack_group = "ReligionChanges"
	separate_stack = true
	stack_priority = 80
	
	switch_value = (kingdom.religion.key)
	case Catholic
	{
		sprite icon = "Assets/UI/Elements/msg_icons/Icon_Message_Catholic_Positive.png:Icon_Message_Catholic_Positive#2" //GUID:8c1fb46dfa6825f4590d3d7e5cca7741
	}
	case Orthodox
	{
		sprite icon = "Assets/UI/Elements/msg_icons/Icon_Message_Orthodox_Positive.png:Icon_Message_Orthodox_Positive#2" //GUID:19cfbfbc1496e2542ab505a7a2a91a83
	}
	case Sunni
	{
		sprite icon = "Assets/UI/Elements/msg_icons/Icon_Message_Sunni_Positive.png:Icon_Message_Sunni_Positive#2" //GUID:f5511aecdac645848b2848632094228f
	}
	case Shia
	{
		sprite icon = "Assets/UI/Elements/msg_icons/Icon_Message_Shia_Positive.png:Icon_Message_Shia_Positive#2" //GUID:85f62290df2b3cf498ac54cedb6bd9a7
	}
	case Pagan
	{
		sprite icon = "Assets/UI/Elements/msg_icons/Icon_Message_Pagans_Positive.png:Icon_Message_Pagans_Positive#2" //GUID:4ed6e9507eb2bc24180cbc6ef7ee7bee
	}
}

def PrisonersChangedKingdomMessage : Message
{
	caption = "Prisoners transfered to {new_kingdom}"
	body = "Sire, we've received news that {new_kingdom} has gained control over {prisoners}, now that {old_kingdom} has seized to exist."
	stack_group = "KingdomDestroyedOutcomes"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_KnightImprisoned_Neutral.png:Icon_Message_KnightImprisoned_Neutral#2" //GUID:a29ff1d08e084a248a27c745daf84b40
}

def PrisonersGainedMessage : Message
{
	caption = "Prisoners arrived from {kingdom}"
	body = $[
	"Sire, due to our conquest over {kingdom} we now have control over their royal dungeon!"
	"[ We managed to free {released} from the clutches of {kingdom}.]"
	"[ Our armies transferred {prisoners} to our dungeon.]"]
	stack_group = "KingdomDestroyedOutcomes"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_KnightImprisoned_Positive.png:Icon_Message_KnightImprisoned_Positive#2" //GUID:e739776a08b7b294aa0fd2251a7df694
}

def ReleasedPrisonersMessages : Message
{
	caption = "{kingdom} released our prisoners"
	body = $["The benevolent {kingdom.king} of {kingdom} has showed mercy and released our knights from his royal dungeon! Our relations have improved as a result."
	"[{p}{p}{blt}{prisoners} were released]"]
	stack_group = "PrisonMessage"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_KnighEscaped_Positive.png:Icon_Message_KnighEscaped_Positive#2" //GUID:11be9b99c24cef249a6eae02cf524314
}

def ExecutedPrisonersMessages : Message
{
	caption = "{kingdom} executed our prisoners"
	body = $["Sire, we've received word that {kingdom.king} of {kingdom} has issued a command to execute all of our knights! His cruelty has no limits."
	"[{p}{p}{blt}{prisoners} were executed]"]
	stack_group = "PrisonMessage"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_KnightKilled_Negative.png:Icon_Message_KnightKilled_Negative#2" //GUID:c69ba8b66f7a190468fa7cddb596098c
}

def DebugMessage : Message
{
	caption = "{caption}"
	body = "{body}"
	buttons
	{
		text ok = "&Ok"
	}
}

def StoppedPromotingPaganBeliefNoPenalty : Message
{
	caption = "We stopped promoting a belief"
	body = "Sire, as there is sadly no one to replace the preaching of {character}, we are no longer promoting the belief in {belief} and our people no longer praise that."
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Pagans_Neutral.png:Icon_Message_Pagans_Neutral#2" //GUID:23521117cd468fe43b3605ce5f5096b9
	
	stack_group = "ReligionChanges"
	separate_stack = true
	stack_priority = 80
}

def StoppedPromotingPaganBeliefPenalty : StoppedPromotingPaganBeliefNoPenalty
{
	body = $["Sire, as we drove {character} out of the royal court, there is no one promoting the belief in {belief}. Many of our people are angry becasue we abandoned the rituals of what they praised."
			"{p}{blt} Crown Authority: {CrownAuthority.stopPromotingPaganBelief}"]
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Pagans_Negative.png:Icon_Message_Pagans_Negative#2" //GUID:e0d9a9b7d543d2d40b0682877dc9ecc7
	
	stack_group = "ReligionChanges"
	separate_stack = true
	stack_priority = 80
}

def GainedAdvantageMessages : Message
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_GenericEvent_Positive.png:Icon_Message_GenericEvent_Positive#2" //GUID:0038f70bebc08a04392e08f1f9149b7b
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_GainedAdvantage.tga:UI_Illustration_GainedAdvantage#2" //GUID:a06d6efba4702824aaa7eb918b9f8485
	caption = "Advantage gained"
	body = "Our people rejoice as their {kingdom.KingdomType} now produces all goods required for the {advantage} advantage![{can_claim_victory:if} We can now claim victory and state our dominance over the rest of the world.]"
	case got_all_advantages = (can_claim_victory)
	{
		voice_line = "narrator_voice:can_claim_advantages_victory"
	}
	case default
	{
		voice_line = "narrator_voice:advantage_gained"
	}
	stack_group = "OurSmallChanges"
	separate_stack = true
	stack_priority = 20
	expire_time = 180
}

def LostAdvantageMessages : Message
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_GenericEvent_Negative.png:Icon_Message_GenericEvent_Negative#2" //GUID:f955d92cf71058746985a61f90487bb9
	caption = "Advantage lost"
	body = "Unfortunately, due to recent events our {kingdom.KingdomType} no longer produces all goods required for the {advantage} advantage.[{claim_victory_lost:if} This means we may no longer claim victory, unless we regain our access to the goods we lost.]"
	
	stack_group = "OurSmallChanges"
	separate_stack = true
	stack_priority = 20
	expire_time = 180
}

def AdvantageHalfReadyMessage : Message
{
	show_filter_id = "notification_advantage_half_ready"
	caption = "Our {advantage} advantage is halfway complete"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_GenericEvent_Positive.png:Icon_Message_GenericEvent_Positive#2" //GUID:0038f70bebc08a04392e08f1f9149b7b
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_ReminderMessage.tga:UI_Illustration_ReminderMessage#2" //GUID:e888028b717208740a51e441c5ba172e
	body = "We're now producing half the goods required for the {advantage} advantage! Let's keep moving in that direction!"
	
	stack_group = "OurSmallChanges"
	separate_stack = true
	stack_priority = 140
}

def PretenderToTheThroneLostMessage : Message
{
	caption = "Pretender to the throne lost"
	body = "Due to instability in {kingdom:s} court our puppet {puppet} is no longer a pretender to the throne"
}

def PuppetLostBetrayMessage : Message
{
	caption = "Puppet lost"
	body = "Sire, {puppet} has betrayed us by changing his allegiance to another kingdom! He is no longer a puppet of {master} and we may no longer take advantage of his opportunities."
	voice_line = "narrator_voice:puppet_lost"
}

def PuppetLostExileMessage : Message
{
	caption = "Puppet lost"
	body = "Sire, {puppet} has been exiled! We can no longer use him as a puppet of {master} and we may no longer take advantage of his opportunities."
	voice_line = "narrator_voice:puppet_lost"
}

def PuppetLostDeathMessage : Message
{
	caption = "Puppet lost"
	body = "Sire, {puppet} has died. He is no longer a puppet of {master} and all of his opportunities are lost."
	voice_line = "narrator_voice:puppet_lost"
}

def PuppetLostRebelDistanceInOwnKingdomMessage : Message
{
	
	caption = "Puppet lost"
	body = "Sire, {puppet} is leading his rebellion on our lands. We can no longer keep we have connection to him or the people will consider we're acting against our own."
	voice_line = "narrator_voice:puppet_lost"
}

def PuppetLostRebelDistanceTooFarMessage : Message
{
	caption = "Puppet lost"
	body = "Sire, we can no longer retain our hold over the rebel {puppet}. He is no longer a puppet of {master}, invalidating any opportunities we might have had."
	voice_line = "narrator_voice:puppet_lost"
}

def FatalAttritionDamageMessage : Message
{
	caption = "Knight killed"
	body = "Grave news, sire! As {character} and his retinue were passing near an enemy {settlement.def.name:lower} in {settlement.realm}, they fell in ambush to a local patrol and were slaughtered to the last man!"
	case knight_is_prince = (character.is_prince)
	{
		voice_line = "narrator_voice:our_prince_killed"
	}
	case default
	{
		voice_line = "narrator_voice:our_army_leader_killed"
	}
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_KnightDead_Negative.png:Icon_Message_KnightDead_Negative#2" //GUID:c869e7764f85b1e41a7e84d3576a87c3
}

def LostCourtRebelMessage : Message
{
	caption = "Rebel imprisoned by another kingdom"
	body = "My Lord, the {other_kingdom:ians} managed to stop the rebellion of {rebel} before we could do the deed. As a result, our former {rebel.class_name} now lies shackled in {other_kingdom:s} royal dungeon."
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_KnightImprisoned_Positive.png:Icon_Message_KnightImprisoned_Positive#2" //GUID:e739776a08b7b294aa0fd2251a7df694
	
}

def FormerReleasedRebelBetrayal : Message
{
	caption = "Former rebel betrayal"
	body = "It seems like releasing {target} wasn't such a good idea... The scoundrel has returned, once again leading an army of rebel soldiers ready to plunder our lands!"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Rebels_Negative.png:Icon_Message_Rebels_Negative#2" //GUID:dbf11e725a52e1d429ad05300abb2f07
	stack_group = "RebelsRiseAndFall"
}

def EmperorOfTheWorldConfirmationMessage : Message
{
	caption = "Claim Emperor Of The World?"
	body = "Are you sure you wish to call a vote for Emperor of the World? The rest of the great powers might refuse our claim, which can lead to a large-scale war."
	buttons
	{
		text ok = "&Claim"
		text close = "&Nevermind"
	}
}

def ImprisonedInBattleMessage : Message
{
	// vars: character; settlement or battle;
	caption = "Our knight has been imprisoned!"
	body = "Sire, the last of {character:s} troops[{settlement:if} were chased by local patrols while passing by a {settlement.def.name:lower} in {settlement.realm}| fell in battle]! Our knight was thrown in {character.prison_kingdom:s} dungeon."
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_KnightImprisoned_Negative.png:Icon_Message_KnightImprisoned_Negative#2" //GUID:576cf88267f938d479147e5ac18e45d9
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Dungeon_Caught.png:UI_Illustration_Dungeon_Caught#2" //GUID:562b596b5ae2b0d448c4ff305fd67907
}

def KingdomSplitMessage : Message
{
	caption = "Kingdom divided"
	body = "As our king died in times of great peril and conflicts, our kingdom is falling apart! [Local noblemen refused to bow to the new king and declared independance. We've lost {realms_new} to the newly formed {kingdoms_new} and we are now in war with these insubordinate back-stabbing slimes.][ We were betrayed by the ungrateful and treacherous rulers of {realms_joined}, who decided to seek another sovereign to bow their heads to and now their territories are a part of {kingdoms_joined}.]"
	show_warning = true
	stack_group = "KingdomSplit"
	separate_stack = true
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Kingdom_Split.tga:UI_Illustration_Kingdom_Split#2" //GUID:ae396acd9ce19b340b9b7ec32ea6078c
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_Disorder_Negative.png:Icon_Message_Disorder_Negative#2" //GUID:c2cc202fcb3f19f4f81377bb596495f8
}

def ElderPrinceRebelledMessage : Message
{
	caption = "Elder prince rebelled"
	body = "Sire, {prince} couldn't accept the crowning of {heir} as rightful coronation. Now, he has rebelled against his brother's rulership..."
}

def HostLeaveCampaingQuerryMessage : Message
{
	caption = "Remove campaign"
	body = "Are you sure you wish to leave? As the campaign hasn't started yet, this will remove it and kick any players that might have already joined."
	buttons
	{
		text ok = "&Ok"
		text close = "&Nevermind"
	}
}

def ClientLeaveCampaingMessage : Message
{
	caption = "Campaign ended"
	body = "The campaign's host[, {host},] has left the lobby, bringing the campaign to an end."
	ui_prefab = "Assets/UI/Messages/UIP_SystemMessage.prefab" //GUID:136e5521db7da484c8fc505aba9c14cc
	buttons
	{
		text ok = "Ok"
	}
}

def ClientKickedFromCampaingMessage : Message
{
	caption = "You were kicked"
	body = "The campaign's host[, {host},] has kicked you from the campaign."
}

def KickPlayerMessage : Message
{
	caption = "Kick player"
	body = "Are you sure you wish to kick {player}? This will remove them from the lobby and free their slot."
	buttons
	{
		text ok = "&Ok"
		text close = "&Cancel"
	}
}

def AbandonCampaingQuerryMessage : Message
{
	caption = "Abandon campaign"
	body = "Permanently remove this campaign from multiplayer campaigns list"
	buttons
	{
		text ok = "&Ok"
		text close = "&Nevermind"
	}
}

def DeleteCampaingSavesMessage : Message
{
	caption = "Delete campaign"
	body = "Are you sure you wish to delete {campaign_name}? This will also remove all existing saves associated with this campaign."
	buttons
	{
		text ok = "&Ok"
		text close = "&Nevermind"
	}
	string parent_path = "id_SystemMessageContainer"
}

def UniteQuestActivatedMessage : Message
{
	caption = "Quest activated"
	body = "Sire, a momentous day is upon us. We have the opportunity to unite our lands and form {union_kingdom}! If we proceed, our {kingdom.KingdomType} shall no longer be known as {kingdom}."
	buttons
	{
		text accept = "&Accept"
		text reject = "&Reject"
		text decide_later = "&Decide Later"
	}
	expire_time = 0
	show_warning = true
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Unite_Quest_Completed.tga:UI_Illustration_Unite_Quest_Completed#2" //GUID:65956cf5a90c5544d96f3aa6b8096148
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_UniteQuest_Neutral.png:Icon_Message_UniteQuest_Neutral#2" //GUID:f5c639de3ad05834d8f0644529d7b75a
}

def UniteQuestOwnerMessage : Message
{
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Unite_Quest_Completed.tga:UI_Illustration_Unite_Quest_Completed#2" //GUID:65956cf5a90c5544d96f3aa6b8096148
	caption = "{union_kingdom} united!"
	body = "We have united our lands, officially forming the {union_kingdom.KingdomType} of {union_kingdom}! With the glory of our people restored, scribes shall chronicle our momentous feat for generations to come. [{p}{blt} Relations with {eligible_kingdoms}: {rel_change_amount}][{p}{blt} Crown Authority: {crown_authority_change:bonus_dark}][{p}{blt} Fame: {fame:bonus_dark}]"
	radio = "{union_kingdom} was formed by {old_name}!"
	drop_down = true
	important = 2
	category = "common"
	separate_stack = true
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_UniteQuest_Positive.png:Icon_Message_UniteQuest_Positive#2" //GUID:a192ec94a2af0db4088f1a8a6b17a896
}

def UniteQuestOtherEligibleKingdomMessage : Message
{
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Unite_Quest_Completed.tga:UI_Illustration_Unite_Quest_Completed#2" //GUID:65956cf5a90c5544d96f3aa6b8096148
	caption = "{union_kingdom} was formed by {old_name}"
	body = "Our messengers have gathered news from {old_name}, my Lord. Apparently, {union_kingdom.king} has proclaimed that he is uniting his lands, forming the {union_kingdom.KingdomType} of {union_kingdom}! If we were quicker, this could've been us... [{p}{blt} Relations with {union_kingdom}: {rel_change_amount}]"
	radio = "{union_kingdom} was formed by {old_name}!"
	drop_down = true
	important = 2
	category = "common"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_UniteQuest_Negative.png:Icon_Message_UniteQuest_Negative#2" //GUID:bcbe9aebfda216d4e8428495f3012e8c
}

def UniteQuestOtherKingdomMessage : Message
{
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_Unite_Quest_Completed.tga:UI_Illustration_Unite_Quest_Completed#2" //GUID:65956cf5a90c5544d96f3aa6b8096148
	caption = "{union_kingdom} was formed by {old_name}"
	body = "Word has quickly spread that {union_kingdom.king} has united his lands, proclaiming with a decree that they are now part of the newly formed {union_kingdom.KingdomType} of {union_kingdom}!"
	radio = "{union_kingdom} was formed by {old_name}!"
	drop_down = true
	important = 2
	category = "common"
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_UniteQuest_Neutral.png:Icon_Message_UniteQuest_Neutral#2" //GUID:f5c639de3ad05834d8f0644529d7b75a
}

def GameStartedWarsMessage : Message
{
	icon = "Assets/UI/Elements/msg_icons/Icon_Message_WarDeclared.png:Icon_Message_WarDeclared#2" //GUID:3e80d4d6062b48948b964303521d1042
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_GameStartedWarsMessage.tga:UI_Illustration_GameStartedWarsMessage#2" //GUID:256fa7a0dd092a342b3eb06cbd1d0eca
	voice_line = "narrator_voice:initial_war"
	
	separate_stack = true
	stack_group = "WarInvolvement"
	
	caption = "We are at war!"
	bool multiple_wars = (wars_count > 1)
	body = "[{multiple_wars:if}Our {kingdom.KingdomType} is entangled in many wars, my Lord!|Perilous times are ahead of us... We are at war!] We should develop a sizable army, muster our defenses or send a diplomat to negotiate peace.{p}{p}We participate in the following conflict[{multiple_wars:if}s]: {wars}"
}

def InheritanceInsufficientRealmsMessage : Message
{
	caption = "Inheritance right lost"
	body = "The father of our beloved {princess} has sadly passed away. If their kingdom was bigger, we could have made a claim over some lands as her heritage, but considering how small {princess.kingdom_before_marriage} is, there is really nothing we can ask for."
}

def PopeConvertedRealmMessage : Message
{
	sprite icon = "Assets/UI/Elements/msg_icons/Icon_Message_Catholic_Positive.png:Icon_Message_Catholic_Positive#2" //GUID:8c1fb46dfa6825f4590d3d7e5cca7741
	illustration = "Assets/UI/Messages/Illustrations/UI_Illustration_PopeConvertedRealm.tga:UI_Illustration_PopeConvertedRealm#2" //GUID:e2c7ffe6a8bafd243a95a268e14fd549
	caption = "Province religion converted"
	body = "Thanks to the efforts of [{pope}|the pope], the people of {obj} accepted Catholicism as their religion and now the tension there has subsided significantly."
	
	separate_stack = true
	stack_group = "ReligionChanges"
	stack_priority = 80
}

def SystemMessage : Message
{
	prefab ui_prefab = "Assets/UI/Messages/UIP_SystemMessage.prefab" //GUID:136e5521db7da484c8fc505aba9c14cc
	caption = "{message_caption}"
	body = "{message_body}"
	buttons
	{
		text ok = "Ok"
	}
}

def ApplyUnsavedSettingsMessage : Message
{
	prefab ui_prefab = "Assets/UI/Messages/UIP_SystemMessage.prefab" //GUID:136e5521db7da484c8fc505aba9c14cc
	caption = "Unsaved changes"
	body = "Some settings were changed. Do you wish to apply them, or continue without saving them?"
	buttons
	{
		text ok = "Apply"
		text cancel = "Revert"
	}
	string parent_path = "id_SystemMessageContainer"
}

def KeepControllerChangedAutomaticallyMessage : OkGotoMessage
{
	case we_lost_control = (old_kingdom == plr_kingdom)
	{
		icon = "Assets/UI/Elements/msg_icons/Icon_Message_Siege_Negative.png:Icon_Message_Siege_Negative#2" //GUID:67aaea2bdedc3fd46a32f67be4c43e9b
		illustration = "Assets/UI/Messages/Illustrations/UI_Illustation_Lost_Enemy_Keep.png:UI_Illustation_Lost_Enemy_Keep#2" //GUID:c70f8487f18882d408d6ff2abc1021a9
		caption = "Castle control lost"
		body = "We have lost control over {goto_target} - as we have no armies in the province, the {new_kingdom:ians} took advantage and regained control."
	}
	case default
	{
		illustration = "Assets/UI/Messages/Illustrations/UI_Illustation_Won_Enemy_Keep.tga:UI_Illustation_Won_Enemy_Keep#2" //GUID:e62b755c5a9e4dd4e82c93430d9ad768
		icon = "Assets/UI/Elements/msg_icons/Icon_Message_Siege_Positive.png:Icon_Message_Siege_Positive#2" //GUID:7a4538fbfc0905a44a8410edb93588b9
		caption = "Castle control regained"
		body = "{old_kingdom} lost control over {goto_target} as it remained without any forces in the region. The local {new_kingdom:ian} troops easily regained control over it."
	}
}